bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	102	None	replace
2	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	102	None	replace
3	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	102	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(),  n);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(),  n);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(),  n);	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	66	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(),  this);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(),  this);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(),  this);	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	66	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  this.assignmentTarget);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  this.assignmentTarget);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  this.assignmentTarget);	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	66	None	replace
7	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  n,  new  AssignmentTarget());  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  n,  new  AssignmentTarget());  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  n,  new  AssignmentTarget());	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	66	None	replace
8	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isName(parent)||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	88	None	replace
9	[BUG]  [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(parent)||  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isName(parent)||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	88	None	replace
10	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(n)||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(n)||  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isName(parent)||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	88	None	replace
11	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  this);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  this);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  this);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ';'  expected	64	None	replace
12	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  this,  parent);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ';'  expected	64	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  leftLiteral);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  leftLiteral);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  this,  leftLiteral);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ';'  expected	64	None	replace
14	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  rightLiteral);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  rightLiteral);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  this,  rightLiteral);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ';'  expected	64	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  this,  null);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ';'  expected	64	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  value);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  value);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  this,  value);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ';'  expected	64	None	replace
17	[BUG]  [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
18	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
19	[BUG]  [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
20	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
21	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
22	[BUG]  [BUGGY]  if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	55	None	replace
23	[BUG]  [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(parent)||  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isFunction(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	93	None	replace
24	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(parent)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isExpressionNode(parent)&&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isExpressionNode(parent)&&  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isFunction(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	93	None	replace
25	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isFunction(n)&&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(n)&&  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isFunction(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	93	None	replace
26	[BUG]  [BUGGY]  if(parent.getType()!=  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()!=  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()!=  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(n.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	8	None	replace
27	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {	  if(n.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	8	None	replace
28	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.NAME?  parent.getLastChild()  :  n;  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.NAME?  parent.getLastChild()  :  n;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getType()  ==  Token.NAME?  parent.getLastChild()  :  n;	  Node    rightLiteral    =    parent.getLastChild();    	non-compiled	[CE]  ';'  expected	23	None	replace
29	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.VAR?  parent.getLastChild()  :  n;  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.VAR?  parent.getLastChild()  :  n;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getType()  ==  Token.VAR?  parent.getLastChild()  :  n;	  Node    rightLiteral    =    parent.getLastChild();    	non-compiled	[CE]  ';'  expected	23	None	replace
30	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.FUNCTION?  parent.getLastChild()  :  null;  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.FUNCTION?  parent.getLastChild()  :  null;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getType()  ==  Token.FUNCTION?  parent.getLastChild()  :  null;	  Node    rightLiteral    =    parent.getLastChild();    	non-compiled	[CE]  ';'  expected	23	None	replace
31	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  AssignmentTarget());  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  AssignmentTarget());  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  AssignmentTarget());	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	91	None	replace
32	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.assignmentTarget);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.assignmentTarget);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  this.assignmentTarget);	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	91	None	replace
33	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(),  this);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(),  this);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(),  this);	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	91	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(),  parent);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(),  parent);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(),  parent);	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	91	None	replace
35	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	9	None	replace
36	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	9	None	replace
37	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	9	None	replace
38	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	9	None	replace
39	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	25	None	replace
40	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	25	None	replace
41	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getLastChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	33	None	replace
42	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getLastChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	33	None	replace
43	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getLastChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	33	None	replace
44	[BUG]  [BUGGY]  if(parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getLastChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	33	None	replace
45	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	7	None	replace
46	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	7	None	replace
47	[BUG]  [BUGGY]  if(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	7	None	replace
48	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	24	None	replace
49	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	24	None	replace
50	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	24	None	replace
51	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	24	None	replace
52	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	53	None	replace
53	[BUG]  [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	53	None	replace
54	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	74	None	replace
55	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	74	None	replace
56	[BUG]  [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	74	None	replace
57	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	74	None	replace
58	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	74	None	replace
59	[BUG]  [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	74	None	replace
60	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)||  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isName(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
61	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(n)&&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(n)&&  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isName(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
62	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
63	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
64	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
65	[BUG]  [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  >=  null  ||  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
66	[BUG]  [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n!=  null  ||  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
67	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(parent)&&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isExpressionNode(parent)&&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isExpressionNode(parent)&&  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isFunction(parent)&&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
68	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isFunction(n)&&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(n)&&  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isFunction(parent)&&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
69	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isAssignmentOp())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
70	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isAssignmentOp())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isAssignmentOp())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isAssignmentOp())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isAssignmentOp())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
71	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isAssignmentOp())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
72	[BUG]  [BUGGY]  Node  parent  =  n.getNext();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  parent  =  n.getNext();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getNext();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  ';'  expected	17	None	replace
73	[BUG]  [BUGGY]  Node  parent  =  n.getLastChild();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  parent  =  n.getLastChild();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getLastChild();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  ';'  expected	17	None	replace
74	[BUG]  [BUGGY]  Node  parent  =  n.getFirstChild();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  parent  =  n.getFirstChild();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getFirstChild();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  ';'  expected	17	None	replace
75	[BUG]  [BUGGY]  Node  parent  =  n.getPreviousParent();  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  parent  =  n.getPreviousParent();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getPreviousParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  ';'  expected	17	None	replace
76	[BUG]  [BUGGY]  Node  parent  =  n.getAncestor(1);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  parent  =  n.getAncestor(1);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getAncestor(1);	  Node    parent    =    n.getParent();    	non-compiled	[CE]  ';'  expected	17	None	replace
77	[BUG]  [BUGGY]  Node  parent  =  n.getOwner();  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  parent  =  n.getOwner();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getOwner();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  ';'  expected	17	None	replace
78	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	27	None	replace
79	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	27	None	replace
80	[BUG]  [BUGGY]  if(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	27	None	replace
81	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()!=  n)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()!=  n)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
82	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()!=  n)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
83	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
84	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
85	[BUG]  [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
86	[BUG]  [BUGGY]  parent.setType(Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.setType(Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.setType(Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
87	[BUG]  [BUGGY]  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
88	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  parent.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  parent.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  parent.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
89	[BUG]  [BUGGY]  if(n.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getLastChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
90	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  ||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getLastChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
91	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.STRING)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
92	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
93	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
94	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.STRING  ||  parent.isInc())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
95	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()!=  Token.STRING)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()!=  Token.STRING)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()!=  Token.STRING)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
96	[BUG]  [BUGGY]  if(n!=  null  &&  parent.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n!=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n!=  null  &&  parent.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
97	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	83	None	replace
98	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	83	None	replace
99	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
100	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
101	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()!=  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()!=  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
102	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME  ||  parent.equals(n.getString()))  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME  ||  parent.equals(n.getString()))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME  ||  parent.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
103	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(parent)&&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isExpressionNode(parent)&&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isExpressionNode(parent)&&  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
104	[BUG]  [BUGGY]  if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    ||(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	54	None	replace
105	[BUG]  [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    ||(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	54	None	replace
106	[BUG]  [BUGGY]  if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    ||(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	54	None	replace
107	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.VAR)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
108	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.VAR)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
109	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.VAR)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
110	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
111	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
112	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	101	None	replace
113	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	101	None	replace
114	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	101	None	replace
115	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME;  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent!=  null  &&  parent.getType()  ==  Token.NAME;	  if(parent!=    null)    {    if(n.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
116	[BUG]  [BUGGY]  parent!=  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent!=  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent!=  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }	  if(parent!=    null)    {    if(n.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
117	[BUG]  [BUGGY]  parent  ==  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent  ==  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent  ==  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }	  if(parent!=    null)    {    if(n.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
118	[BUG]  [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME;  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent  ==  null  &&  parent.getType()  ==  Token.NAME;	  if(parent!=    null)    {    if(n.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
119	[BUG]  [BUGGY]  if(parent!=  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }	  if(parent!=    null)    {    if(n.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
120	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  ';'  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  false;  }	  if(parent!=    null)    {    if(n.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
121	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]                                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent!=  null  &&  parent.getType()  ==  Token.NAME);	  if(parent!=    null)    {    if(n.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
122	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getLowerCase();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent.getLowerCase();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getLowerCase();	  Node    rightLiteral    =    parent.getFirstChild();    	non-compiled	[CE]  ';'  expected	90	None	replace
123	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.NAME?  parent.getLastChild()  :  null;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.NAME?  parent.getLastChild()  :  null;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getType()  ==  Token.NAME?  parent.getLastChild()  :  null;	  Node    rightLiteral    =    parent.getFirstChild();    	non-compiled	[CE]  ';'  expected	90	None	replace
124	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isDec())  {	  if(parent    ==    null    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	38	None	replace
125	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.isDec())  {	  if(parent    ==    null    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	38	None	replace
126	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.isAssignmentTarget())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.isAssignmentTarget())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.isAssignmentTarget())  {	  if(parent    ==    null    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	38	None	replace
127	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isAssignmentTarget())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.isAssignmentTarget())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isAssignmentTarget())  {	  if(parent    ==    null    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	38	None	replace
128	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isLocal()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	104	None	replace
129	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isLocal()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	104	None	replace
130	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isLocal()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	104	None	replace
131	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isLocal()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	104	None	replace
132	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isLocal()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	104	None	replace
133	[BUG]  [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
134	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
135	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
136	[BUG]  [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
137	[BUG]  [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
138	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getLastChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
139	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
140	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
141	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
142	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
143	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  &&  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  &&  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  &&  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
144	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.isInc())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.isInc())  {	  if(parent!=    null    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	37	None	replace
145	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
146	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.ASSIGN)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
147	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.ASSIGN)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
148	[BUG]  [BUGGY]  Node  rightLiteral  =  n.getLowerCase();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  n.getLowerCase();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  n.getLowerCase();	  Node    rightLiteral    =    n.getFirstChild();    	non-compiled	[CE]  ';'  expected	89	None	replace
149	[BUG]  [BUGGY]  Node  rightLiteral  =  n.getLeftChild();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  n.getLeftChild();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  n.getLeftChild();	  Node    rightLiteral    =    n.getFirstChild();    	non-compiled	[CE]  ';'  expected	89	None	replace
150	[BUG]  [BUGGY]  Node  rightLiteral  =  n.getNext();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  n.getNext();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  n.getNext();	  Node    rightLiteral    =    n.getFirstChild();    	non-compiled	[CE]  ';'  expected	89	None	replace
151	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.hasNext()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
152	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInc())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.hasNext()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
153	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.hasNext()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
154	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInc())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.hasNext()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
155	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.hasNext()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
156	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.hasNext()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.hasNext()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.hasNext()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.hasNext()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
157	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
158	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
159	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
160	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
161	[BUG]  [BUGGY]  if(parent  >=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  >=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  >=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
162	[BUG]  [BUGGY]  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
163	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
164	[BUG]  [BUGGY]  parent.setType(Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.setType(Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.setType(Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
165	[BUG]  [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent  ==  null  &&  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
166	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.ASSIGN;  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.ASSIGN;  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent!=  null  &&  parent.getType()  ==  Token.ASSIGN;  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
167	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	79	None	replace
168	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	79	None	replace
169	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	79	None	replace
170	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	79	None	replace
171	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	79	None	replace
172	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isAssignmentOp()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isAssignmentOp()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isAssignmentOp()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	79	None	replace
173	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getLastChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	60	None	replace
174	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	103	None	replace
175	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	103	None	replace
176	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	103	None	replace
177	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	103	None	replace
178	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	103	None	replace
179	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	103	None	replace
180	[BUG]  [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {	  if(parent!=    null    &&    NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
181	[BUG]  [BUGGY]  if(parent  ==  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {	  if(parent!=    null    &&    NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
182	[BUG]  [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n)  {	  if(parent!=    null    &&    NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
183	[BUG]  [BUGGY]  if(parent!=  null  ||  NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {	  if(parent!=    null    &&    NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
184	[BUG]  [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n)  {	  if(parent!=    null    &&    NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
185	[BUG]  [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    &&    NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
186	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n,  this));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n,  this));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n,  this));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n,    this));    	non-compiled	[CE]  ';'  expected	68	None	replace
187	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  this));  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  this));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  this));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n,    this));    	non-compiled	[CE]  ';'  expected	68	None	replace
188	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(this));  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(this));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(this));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n,    this));    	non-compiled	[CE]  ';'  expected	68	None	replace
189	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this,  value));  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this,  value));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this,  value));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n,    this));    	non-compiled	[CE]  ';'  expected	68	None	replace
190	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this,  n));  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this,  n));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this,  n));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n,    this));    	non-compiled	[CE]  ';'  expected	68	None	replace
191	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  null));  [CE]  ';'  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  null));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  null));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n,    this));    	non-compiled	[CE]  ';'  expected	68	None	replace
192	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent!=    null    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	92	None	replace
193	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent!=    null    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	92	None	replace
194	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent!=    null    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	92	None	replace
195	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent!=    null    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	92	None	replace
196	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent!=    null    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	92	None	replace
197	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {	  if(parent!=    null    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	92	None	replace
198	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	97	None	replace
199	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	97	None	replace
200	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	97	None	replace
201	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	97	None	replace
202	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	97	None	replace
203	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	97	None	replace
204	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()!=  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()!=  Token.NAME)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
205	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.isInc())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
206	[BUG]  [BUGGY]  if(n!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n!=  null  &&  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
207	[BUG]  [BUGGY]  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
208	[BUG]  [BUGGY]  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
209	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
210	[BUG]  [BUGGY]  parent.setType(Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.setType(Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.setType(Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
211	[BUG]  [BUGGY]  For(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  For(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	For(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
212	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.ASSIGN;  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.ASSIGN;  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent!=  null  &&  parent.getType()  ==  Token.ASSIGN;  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
213	[BUG]  [BUGGY]  if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
214	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
215	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
216	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
217	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
218	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
219	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	29	None	replace
220	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	29	None	replace
221	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	29	None	replace
222	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	29	None	replace
223	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	29	None	replace
224	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	29	None	replace
225	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isName(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
226	[BUG]  [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isName(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
227	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isName(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
228	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	75	None	replace
229	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	75	None	replace
230	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	71	None	replace
231	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	71	None	replace
232	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	71	None	replace
233	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  &&  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  &&  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  &&  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	71	None	replace
234	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	71	None	replace
235	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getType()  ==  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
236	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.STRING)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.STRING)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
237	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()!=  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()!=  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()!=  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
238	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getType()  ==  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
239	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getType()  ==  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
240	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(n)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
241	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n));    	non-compiled	[CE]  ';'  expected	67	None	replace
242	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  n));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  n));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  n));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n));    	non-compiled	[CE]  ';'  expected	67	None	replace
243	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n),  this);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n),  this);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n),  this);	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n));    	non-compiled	[CE]  ';'  expected	67	None	replace
244	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
245	[BUG]  [BUGGY]  if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
246	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  &&  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  &&  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  &&  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
247	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
248	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
249	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
250	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	34	None	replace
251	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	34	None	replace
252	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	34	None	replace
253	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isAssignmentTarget())  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isAssignmentTarget())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isAssignmentTarget())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	34	None	replace
254	[BUG]  [BUGGY]  Node  rightLiteral  =  n.getFullChild();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  n.getFullChild();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  n.getFullChild();	  Node    rightLiteral    =    n.getLastChild();    	non-compiled	[CE]  ';'  expected	65	None	replace
255	[BUG]  [BUGGY]  Node  rightLiteral  =  n.getLastChild().getNext();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  n.getLastChild().getNext();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  n.getLastChild().getNext();	  Node    rightLiteral    =    n.getLastChild();    	non-compiled	[CE]  ';'  expected	65	None	replace
256	[BUG]  [BUGGY]  Node  rightLiteral  =  n.getLastChild()  +  1;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  n.getLastChild()  +  1;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  n.getLastChild()  +  1;	  Node    rightLiteral    =    n.getLastChild();    	non-compiled	[CE]  ';'  expected	65	None	replace
257	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isLocal())    {    	non-compiled	[CE]  ';'  expected	35	None	replace
258	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isLocal())    {    	non-compiled	[CE]  ';'  expected	35	None	replace
259	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isLocal())    {    	non-compiled	[CE]  ';'  expected	35	None	replace
260	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isLocal())  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isLocal())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec()  ||  parent.isLocal())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isLocal())    {    	non-compiled	[CE]  ';'  expected	35	None	replace
261	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	82	None	replace
262	[BUG]  [BUGGY]  if(n!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	82	None	replace
263	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	82	None	replace
264	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
265	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
266	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isType()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.isType()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isType()  ||  parent.isDec())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
267	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isName()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.isName()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isName()  ||  parent.isDec())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
268	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isInc()  ||  parent.isAssignmentTarget())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.isInc()  ||  parent.isAssignmentTarget())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isInc()  ||  parent.isAssignmentTarget())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
269	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isInc()  ||  parent.isAssignmentOp())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
270	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.RETURN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.RETURN)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
271	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.RETURN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.RETURN)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
272	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.RETURN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.RETURN)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
273	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.RETURN  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.RETURN  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.RETURN  ||  parent.isInc())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
274	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()!=  Token.RETURN)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()!=  Token.RETURN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()!=  Token.RETURN)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
275	[BUG]  [BUGGY]  if(n!=  null  &&  parent.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n!=  null  &&  parent.getType()  ==  Token.RETURN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n!=  null  &&  parent.getType()  ==  Token.RETURN)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
276	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	78	None	replace
277	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	78	None	replace
278	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	78	None	replace
279	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getLastChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
280	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
281	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getString().equals( "assignment "))  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getString().equals( "assignment "))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getString().equals( "assignment "))  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
282	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isForIn(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	96	None	replace
283	[BUG]  [BUGGY]  if(parent!=  null  ||(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isForIn(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	96	None	replace
284	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isForIn(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isForIn(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	96	None	replace
285	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isForIn(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	96	None	replace
286	[BUG]  [BUGGY]  if(parent  ==  null  ||(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isForIn(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	96	None	replace
287	[BUG]  [BUGGY]  if(parent  ==  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isForIn(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	96	None	replace
288	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	50	None	replace
289	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()!=  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getType()!=  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	50	None	replace
290	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(parent)||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isExpressionNode(parent)||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isExpressionNode(parent)||  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	50	None	replace
291	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME  ||  parent.isInc())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	50	None	replace
292	[BUG]  [BUGGY]  if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
293	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
294	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
295	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
296	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
297	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.STRING  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.STRING  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.STRING  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.STRING    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	84	None	replace
298	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.STRING    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	84	None	replace
299	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.STRING  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.STRING    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	84	None	replace
300	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.STRING    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	84	None	replace
301	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.STRING    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	84	None	replace
302	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {	  if(parent.getType()    ==    Token.STRING    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	84	None	replace
303	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {	  if(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
304	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    &&    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	42	None	replace
305	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    &&    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	42	None	replace
306	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.CATCH)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.CATCH)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.CATCH)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
307	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.CATCH)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.CATCH)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.CATCH)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
308	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.CATCH)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.CATCH)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.CATCH)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
309	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  ||  parent.isInc())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
310	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()!=  Token.CATCH)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()!=  Token.CATCH)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()!=  Token.CATCH)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
311	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.SCRIPT)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.SCRIPT)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.SCRIPT)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
312	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	87	None	replace
313	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	87	None	replace
314	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	87	None	replace
315	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  &&  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  &&  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  &&  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	87	None	replace
316	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	87	None	replace
317	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()!=  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()!=  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getType()!=  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
318	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.STRING)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.STRING)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
319	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getType()  ==  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
320	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
321	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
322	[BUG]  [BUGGY]  if(parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
323	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.isDec())  {	  if(parent!=    null    &&    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	41	None	replace
324	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.isDec())  {	  if(parent!=    null    &&    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	41	None	replace
325	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.isAssignmentTarget())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.isAssignmentTarget())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.isAssignmentTarget())  {	  if(parent!=    null    &&    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	41	None	replace
326	[BUG]  [BUGGY]  if(n.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    ||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
327	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    ||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
328	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    ||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	30	None	replace
329	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    ||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	30	None	replace
330	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    ||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	30	None	replace
331	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    ||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	30	None	replace
332	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
333	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getChildCount()  ==  1)  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getChildCount()  ==  1)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getChildCount()  ==  1)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
334	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren())    {    	non-compiled	[CE]  ';'  expected	98	None	replace
335	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  &&  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren())    {    	non-compiled	[CE]  ';'  expected	98	None	replace
336	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren())    {    	non-compiled	[CE]  ';'  expected	98	None	replace
337	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren())    {    	non-compiled	[CE]  ';'  expected	98	None	replace
338	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren())    {    	non-compiled	[CE]  ';'  expected	98	None	replace
339	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren())    {    	non-compiled	[CE]  ';'  expected	98	None	replace
340	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	77	None	replace
341	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	77	None	replace
342	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	77	None	replace
343	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	77	None	replace
344	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	70	None	replace
345	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	70	None	replace
346	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	70	None	replace
347	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
348	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getLastChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
349	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
350	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
351	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
352	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
353	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
354	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
355	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()!=  n)  {  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()!=  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
356	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
357	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
358	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
359	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
360	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	28	None	replace
361	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
362	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isReturnType())    {    	non-compiled	[CE]  ';'  expected	62	None	replace
363	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isReturnType())    {    	non-compiled	[CE]  ';'  expected	62	None	replace
364	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isReturnType())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isReturnType())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isReturnType())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isReturnType())    {    	non-compiled	[CE]  ';'  expected	62	None	replace
365	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isReturnType())    {    	non-compiled	[CE]  ';'  expected	62	None	replace
366	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	61	None	replace
367	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n  &&  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	61	None	replace
368	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	61	None	replace
369	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
370	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
371	[BUG]  [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
372	[BUG]  [BUGGY]  parent.setType(Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.setType(Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.setType(Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
373	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  parent.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  parent.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  parent.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
374	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n,  parent));  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n,  parent));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n,  parent));	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget(parent));    	non-compiled	[CE]  ';'  expected	69	None	replace
375	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  AssignmentTarget(n));  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  AssignmentTarget(n));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  AssignmentTarget(n));	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget(parent));    	non-compiled	[CE]  ';'  expected	69	None	replace
376	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n),  parent);  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n),  parent);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n),  parent);	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget(parent));    	non-compiled	[CE]  ';'  expected	69	None	replace
377	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME  &&  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    &&    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	59	None	replace
378	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()!=  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  parent.getType()!=  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  parent.getType()!=  Token.ASSIGN)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
379	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	95	None	replace
380	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	95	None	replace
381	[BUG]  [BUGGY]  if(parent!=  null  ||(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	95	None	replace
382	[BUG]  [BUGGY]  if(parent  ==  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	95	None	replace
383	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isName(n)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	95	None	replace
384	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	95	None	replace
385	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()!=  n)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
386	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()!=  n)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()!=  n)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
387	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentTarget())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentTarget())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentTarget())  {	  if(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	31	None	replace
388	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	78	None	replace
389	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  value));  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  value));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  value));	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget(parent));    	non-compiled	[CE]  ';'  expected	69	None	replace
390	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  n));  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  n));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  n));	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget(parent));    	non-compiled	[CE]  ';'  expected	69	None	replace
391	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(parent)&&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isGetProp(parent)&&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isGetProp(parent)&&  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
392	[BUG]  [BUGGY]  if(parent  ==  null  ||  NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(n)||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
393	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n,  null));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n,  null));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(n,  null));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n,    this));    	non-compiled	[CE]  ';'  expected	68	None	replace
394	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.isDeclaration())  {	  if(parent!=    null    &&    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	41	None	replace
395	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
396	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
397	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
398	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.NAME);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.NAME);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Preconditions.checkState(parent.getType()!=  Token.NAME);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
399	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	102	None	replace
400	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	102	None	replace
401	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	102	None	replace
402	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	101	None	replace
403	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	101	None	replace
404	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	101	None	replace
405	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	71	None	replace
406	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	77	None	replace
407	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
408	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
409	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
410	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
411	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isName(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
412	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isGetProp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isGetProp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isName(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
413	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	75	None	replace
414	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  >=  Token.STRING)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  >=  Token.STRING)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  >=  Token.STRING)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
415	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Preconditions.checkState(parent.getType()  ==  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
416	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
417	[BUG]  [BUGGY]  if(parent.getType()!=  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()!=  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()!=  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
418	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Preconditions.checkState(parent.getType()!=  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
419	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(),  false);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(),  false);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(),  false);	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	91	None	replace
420	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  >=  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  >=  Token.NAME)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
421	[BUG]  [BUGGY]  if(parent  >=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  >=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  >=  null  &&  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
422	[BUG]  [BUGGY]  if(NodeUtil.isForIn(parent)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isForIn(parent)&&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isForIn(parent)&&  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
423	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	74	None	replace
424	[BUG]  [BUGGY]  if(parent  ==  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null)  {  if(parent.getType()  ==  Token.NAME)  {  return  false;  }	  if(parent!=    null)    {    if(n.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
425	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    &&    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	42	None	replace
426	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(parent)&&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isGetProp(parent)&&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isGetProp(parent)&&  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
427	[BUG]  [BUGGY]  if(NodeUtil.isForIn(parent)&&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isForIn(parent)&&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isForIn(parent)&&  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
428	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.GETPROP)  {	  if(parent    ==    null)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
429	[BUG]  [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
430	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.STRING    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	84	None	replace
431	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.STRING    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	84	None	replace
432	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.STRING    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	84	None	replace
433	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	61	None	replace
434	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	82	None	replace
435	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInC()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInC()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInC()  ||  parent.isDec())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	82	None	replace
436	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	34	None	replace
437	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isReturnType())    {    	non-compiled	[CE]  ';'  expected	62	None	replace
438	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	29	None	replace
439	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isLocal()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	104	None	replace
440	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInode()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInode()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInode()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isLocal()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	104	None	replace
441	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isLocal()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	104	None	replace
442	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isAssignmentOp()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isAssignmentOp()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isAssignmentOp()  ||  parent.isDec())  {	  if(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	31	None	replace
443	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration()  ||  parent.isDec())  {	  if(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	31	None	replace
444	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  n;  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  n;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  n;	  Node    rightLiteral    =    parent.getLastChild();    	non-compiled	[CE]  ';'  expected	23	None	replace
445	[BUG]  [BUGGY]  if(NodeUtil.isForIn(parent)&&  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isForIn(parent)&&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isForIn(parent)&&  parent.getType()  ==  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
446	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
447	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
448	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
449	[BUG]  [BUGGY]  if(parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
450	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	97	None	replace
451	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	97	None	replace
452	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Preconditions.checkState(parent.getType()  ==  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
453	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
454	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Preconditions.checkState(parent.getType()!=  Token.ASSIGN);  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
455	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.STRING)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.STRING)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.STRING)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
456	[BUG]  [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	50	None	replace
457	[BUG]  [BUGGY]  if(parent  ==  null  ||  NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	50	None	replace
458	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(parent)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isGetProp(parent)&&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isGetProp(parent)&&  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isName(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
459	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  MAX_FOLD_NUMBER);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  MAX_FOLD_NUMBER);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  this,  MAX_FOLD_NUMBER);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ';'  expected	64	None	replace
460	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(parent)||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isGetProp(parent)||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isGetProp(parent)||  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isName(parent)||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	88	None	replace
461	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInitializingDeclaration())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInitializingDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInitializingDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.hasNext()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
462	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.hasNext()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
463	[BUG]  [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	53	None	replace
464	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
465	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInitializingDeclaration()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
466	[BUG]  [BUGGY]  Node  rightLiteral  =  parent!=  null?  parent.getLastChild()  :  n.getLastChild();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent!=  null?  parent.getLastChild()  :  n.getLastChild();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent!=  null?  parent.getLastChild()  :  n.getLastChild();	  Node    rightLiteral    =    parent.getFirstChild();    	non-compiled	[CE]  ';'  expected	90	None	replace
467	[BUG]  [BUGGY]  Node  rightLiteral  =  parent!=  null?  parent.getFirstChild()  :  n.getLastChild();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent!=  null?  parent.getFirstChild()  :  n.getLastChild();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent!=  null?  parent.getFirstChild()  :  n.getLastChild();	  Node    rightLiteral    =    parent.getFirstChild();    	non-compiled	[CE]  ';'  expected	90	None	replace
468	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
469	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(),  MAX_FOLD_NUMBER);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(),  MAX_FOLD_NUMBER);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(),  MAX_FOLD_NUMBER);	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	66	None	replace
470	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AssignmentTarget());  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  AssignmentTarget());  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  node,  new  AssignmentTarget());	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	66	None	replace
471	[BUG]  [BUGGY]  Node  rightLiteral  =  n.getLowerBound();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  n.getLowerBound();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  n.getLowerBound();	  Node    rightLiteral    =    n.getFirstChild();    	non-compiled	[CE]  ';'  expected	89	None	replace
472	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren())    {    	non-compiled	[CE]  ';'  expected	98	None	replace
473	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren())    {    	non-compiled	[CE]  ';'  expected	98	None	replace
474	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	83	None	replace
475	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
476	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
477	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
478	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isType())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.isType())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isType())  {	  if(parent    ==    null    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	38	None	replace
479	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {	  if(parent!=    null    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	92	None	replace
480	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isAssignmentOp())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
481	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isLocal())    {    	non-compiled	[CE]  ';'  expected	35	None	replace
482	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isLocal())    {    	non-compiled	[CE]  ';'  expected	35	None	replace
483	[BUG]  [BUGGY]  Node  parent  =  n.getOwnerFunction();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  parent  =  n.getOwnerFunction();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getOwnerFunction();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  ';'  expected	17	None	replace
484	[BUG]  [BUGGY]  Node  parent  =  n.getPrevious();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  parent  =  n.getPrevious();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getPrevious();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  ';'  expected	17	None	replace
485	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	103	None	replace
486	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	103	None	replace
487	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(n)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(n)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getLastChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
488	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.GETELEM)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.GETELEM)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
489	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent!=    null    &&(NodeUtil.isForIn(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	96	None	replace
490	[BUG]  [BUGGY]  if(parent  [Delete]  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  [Delete]  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  [Delete]  null  &&  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
491	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()!=  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()!=  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
492	[BUG]  [BUGGY]  if(parent  ==  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {	  if(parent!=    null    &&    NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
493	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(child));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(child));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(child));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n));    	non-compiled	[CE]  ';'  expected	67	None	replace
494	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getFirstChild()!=  n)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
495	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	79	None	replace
496	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	79	None	replace
497	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	79	None	replace
498	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isInput()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.isInput()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isInput()  ||  parent.isDec())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
499	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.isType()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.isType()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.isType()  ||  parent.isDec())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
500	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
501	[BUG]  [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
502	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isImmutableValue(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isImmutableValue(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isImmutableValue(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	95	None	replace
503	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isGetProp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isGetProp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isGetProp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	95	None	replace
504	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    ||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
505	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
506	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  n.getString().equals( "assignment "))  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  n.getString().equals( "assignment "))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  n.getString().equals( "assignment "))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
507	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(parent))  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(parent))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(parent))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
508	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  n.hasChildren())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  n.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  n.hasChildren())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
509	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(parent))  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(parent))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(parent))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
510	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  parent);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ';'  expected	64	None	replace
511	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.BLOCK;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.BLOCK;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getType()  ==  Token.BLOCK;	  Node    rightLiteral    =    n.getLastChild();    	non-compiled	[CE]  ';'  expected	65	None	replace
512	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.VAR;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.VAR;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getType()  ==  Token.VAR;	  Node    rightLiteral    =    n.getLastChild();    	non-compiled	[CE]  ';'  expected	65	None	replace
513	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getType()!=  Token.BLOCK;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent.getType()!=  Token.BLOCK;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getType()!=  Token.BLOCK;	  Node    rightLiteral    =    n.getLastChild();    	non-compiled	[CE]  ';'  expected	65	None	replace
514	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent    ==    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	57	None	replace
515	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	32	None	replace
516	[BUG]  [BUGGY]  if(parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
517	[BUG]  [BUGGY]  parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
518	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getString().equals( "assignment "))  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getString().equals( "assignment "))  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getString().equals( "assignment "))  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
519	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
520	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	102	None	replace
521	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    &&    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	42	None	replace
522	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
523	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.VAR  &&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.VAR  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.VAR  &&  parent.getFirstChild()  ==  n)  {	  if(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
524	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  n.getString().equals( "assignment "))  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  n.getString().equals( "assignment "))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  n.getString().equals( "assignment "))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
525	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(parent))  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(parent))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(parent))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
526	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(parent))  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(parent))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(parent))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
527	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  n.hasChildren())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  n.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.STRING  &&  n.hasChildren())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
528	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isExpressionNode(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isExpressionNode(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
529	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.CALL?  parent.getLastChild()  :  n;  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  parent.getType()  ==  Token.CALL?  parent.getLastChild()  :  n;  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getType()  ==  Token.CALL?  parent.getLastChild()  :  n;	  Node    rightLiteral    =    parent.getLastChild();    	non-compiled	[CE]  ';'  expected	23	None	replace
530	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME  ||  parent.isInc())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
531	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(n)&&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(n)&&  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
532	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.hasChildren()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	103	None	replace
533	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	103	None	replace
534	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  &&  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  &&  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  &&  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	103	None	replace
535	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.VAR  ||  parent.isInc())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
536	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isType()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isType()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isType()  ||  parent.isDeclaration())  {	  if(parent!=    null    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	92	None	replace
537	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {	  if(parent!=    null    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	92	None	replace
538	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(n)&&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(n)&&  parent.getType()  ==  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
539	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()!=  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
540	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
541	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
542	[BUG]  [BUGGY]  if(NodeUtil.isDeclaration(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isDeclaration(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isDeclaration(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isReturnType())    {    	non-compiled	[CE]  ';'  expected	62	None	replace
543	[BUG]  [BUGGY]  Node  rightLiteral  =  n.getString();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  rightLiteral  =  n.getString();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  n.getString();	  Node    rightLiteral    =    n.getFirstChild();    	non-compiled	[CE]  ';'  expected	89	None	replace
544	[BUG]  [BUGGY]  if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
545	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
546	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
547	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
548	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  n.getString().equals( "assignment "))  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  n.getString().equals( "assignment "))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  n.getString().equals( "assignment "))  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
549	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(parent))  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(parent))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(parent))  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
550	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(parent))  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(parent))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(parent))  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
551	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isForIn(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	96	None	replace
552	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isGetProp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isGetProp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	27	None	replace
553	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	101	None	replace
554	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isExtern())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isExtern())    {    	non-compiled	[CE]  ';'  expected	101	None	replace
555	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
556	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
557	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
558	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isAssignmentOp())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isAssignmentOp())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isAssignmentOp())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isAssignmentOp())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
559	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&!NodeUtil.isAssignmentOp(parent))  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&!NodeUtil.isAssignmentOp(parent))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&!NodeUtil.isAssignmentOp(parent))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
560	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  n.hasChildren())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  n.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  n.hasChildren())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
561	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  n.getString().equals( "assignment "))  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  n.getString().equals( "assignment "))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  n.getString().equals( "assignment "))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
562	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()  ==  n)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
563	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this),  n);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this),  n);  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this),  n);	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n,    this));    	non-compiled	[CE]  ';'  expected	68	None	replace
564	[BUG]  [BUGGY]  if(parent  >=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  >=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  >=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    ||(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	54	None	replace
565	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.getAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.getAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.getAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    ||(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	54	None	replace
566	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInitializingDeclaration()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	74	None	replace
567	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.hasChildren())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.hasChildren())  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
568	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&!NodeUtil.isAssignmentOp(parent))  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&!NodeUtil.isAssignmentOp(parent))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&!NodeUtil.isAssignmentOp(parent))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
569	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.getString().equals( "assignment "))  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.getString().equals( "assignment "))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.getString().equals( "assignment "))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
570	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.getFirstChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.getFirstChild()  ==  n)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
571	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  isAssignmentTarget(n))  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  isAssignmentTarget(n))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  isAssignmentTarget(n))  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
572	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.getChildCount()  >  1)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.getChildCount()  >  1)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.CATCH  &&  n.getChildCount()  >  1)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
573	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()!=  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getFirstChild()!=  n)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()!=    n)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
574	[BUG]  [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(parent)||  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	50	None	replace
575	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	79	None	replace
576	[BUG]  [BUGGY]  if(parent.getType()!=  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()!=  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()!=  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
577	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  true;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  true;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
578	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
579	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.isType()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.isType()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.isType()  ||  parent.isInc())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
580	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isType()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.isType()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isType()  ||  parent.isInc())  {	  if(parent!=    null    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	39	None	replace
581	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isLocal()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	104	None	replace
582	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInC()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInC()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInC()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isLocal()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	104	None	replace
583	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  rightLiteral));  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  rightLiteral));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent,  rightLiteral));	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget(parent));    	non-compiled	[CE]  ';'  expected	69	None	replace
584	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AssignmentTarget(parent));  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AssignmentTarget(parent));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  AssignmentTarget(parent));	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget(parent));    	non-compiled	[CE]  ';'  expected	69	None	replace
585	[BUG]  [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getLastChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	60	None	replace
586	[BUG]  [BUGGY]  if(parent  >=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  >=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  >=  null  &&  parent.getType()  ==  Token.ASSIGN)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
587	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()!=  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()!=  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()!=  Token.ASSIGN)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
588	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  n.hasChildren())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  n.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  n.hasChildren())  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
589	[BUG]  [BUGGY]  if(parent  [Delete]  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  [Delete]  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  [Delete]  null  &&  parent.getType()  ==  Token.ASSIGN)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
590	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isGetProp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isGetProp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isName(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	7	None	replace
591	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AssignmentTarget());  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AssignmentTarget());  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  AssignmentTarget());	  NodeTraversal.traverse(compiler,    n,    new    AssignmentTarget());    	non-compiled	[CE]  ';'  expected	91	None	replace
592	[BUG]  [BUGGY]  if(parent!=  null  &&  NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n)  {	  if(parent!=    null    &&    NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
593	[BUG]  [BUGGY]  if(parent!=  null  &&  NodeUtil.isForIn(parent)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  NodeUtil.isForIn(parent)&&  parent.getLastChild()  ==  n)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  NodeUtil.isForIn(parent)&&  parent.getLastChild()  ==  n)  {	  if(parent!=    null    &&    NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
594	[BUG]  [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.ASSIGN)  {	  if(parent!=    null    &&    NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
595	[BUG]  [BUGGY]  parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	parent.getType()!=  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
596	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
597	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getFirstChild();  parent!=  null;)  {  return  false;  }	  if(n.getType()    ==    Token.ASSIGN)    {    for(Node    parent    =    n.getParent();    parent!=    null;)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
598	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.VAR)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.VAR)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.VAR)  {	  if(parent    ==    null)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
599	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {	  if(parent!=    null    &&    parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	75	None	replace
600	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {	  if(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	31	None	replace
601	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(parent)||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isExpressionNode(parent)||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isExpressionNode(parent)||  parent.getType()  ==  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
602	[BUG]  [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(NodeUtil.isFunction(parent)||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(parent)||  parent.getType()  ==  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
603	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  FRACTIONAL_BITWISE_OPERAND));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  FRACTIONAL_BITWISE_OPERAND));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  FRACTIONAL_BITWISE_OPERAND));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n));    	non-compiled	[CE]  ';'  expected	67	None	replace
604	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this.rightLiteral));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this.rightLiteral));  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this.rightLiteral));	  NodeTraversal.traverse(compiler,    parent,    new    AssignmentTarget(n));    	non-compiled	[CE]  ';'  expected	67	None	replace
605	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent!=    null    ||    parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	9	None	replace
606	[BUG]  [BUGGY]  if(parent  ==  null)  {  if(n.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null)  {  if(n.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null)  {  if(n.getType()  ==  Token.NAME)  {  return  false;  }	  if(parent!=    null)    {    if(n.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
607	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  false;  }	  if(parent!=    null)    {    if(n.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
608	[BUG]  [BUGGY]  Node  parent  =  n.getParentNode();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  parent  =  n.getParentNode();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getParentNode();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  ';'  expected	17	None	replace
609	[BUG]  [BUGGY]  Node  parent  =  n.getParentOperand();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  parent  =  n.getParentOperand();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getParentOperand();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  ';'  expected	17	None	replace
610	[BUG]  [BUGGY]  Node  parent  =  n.getParentSecond();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  Node  parent  =  n.getParentSecond();  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getParentSecond();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  ';'  expected	17	None	replace
611	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren())    {    	non-compiled	[CE]  ';'  expected	98	None	replace
612	[BUG]  [BUGGY]  if(parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren())    {    	non-compiled	[CE]  ';'  expected	98	None	replace
613	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.hasChildren()  ||  parent.isDec())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.hasChildren()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
614	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInc())  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.hasChildren()    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	100	None	replace
615	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.isAssignmentTo(parent))  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  parent.isAssignmentTo(parent))  {  [BUGGY]      ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.isAssignmentTo(parent))  {	  if(parent!=    null    ||    parent.isInc())    {    	non-compiled	[CE]  ';'  expected	37	None	replace
