bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  createComplex(real  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(real  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(real  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getImaginary());	  return    createComplex(real    -    subtrahend.getReal(),    real    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	3	None	replace
2	[BUG]  [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getImaginary());	      Complex    real    =    createComplex(subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	10	None	replace
3	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	      Complex    real    =    createComplex(subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	10	None	replace
4	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());	      Real    real    =    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	13	None	replace
5	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	      Real    real    =    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	13	None	replace
6	[BUG]  [BUGGY]  Real  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Real  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());	      Real    real    =    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	13	None	replace
7	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());	      Complex    real    =    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	5	None	replace
8	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Real  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	      Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal());    imaginary    -    subtrahend.getImaginary();    	non-compiled	[CE]  not  a  statement	6	None	replace
9	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	      Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal());    imaginary    -    subtrahend.getImaginary();    	non-compiled	[CE]  not  a  statement	6	None	replace
10	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary);  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary);	      Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal());    	non-compiled	[CE]  not  a  statement	8	None	replace
11	[BUG]  [BUGGY]  MathUtils.checkNotNull(real);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  MathUtils.checkNotNull(real);  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	MathUtils.checkNotNull(real);	      	non-compiled	[CE]  not  a  statement	4	None	replace
12	[BUG]  [BUGGY]  MathUtils.checkState(isNaN  ||  isInfinite);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  MathUtils.checkState(isNaN  ||  isInfinite);  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	MathUtils.checkState(isNaN  ||  isInfinite);	      	non-compiled	[CE]  not  a  statement	4	None	replace
13	[BUG]  [BUGGY]  MathUtils.checkNotNull(subtrahend);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  MathUtils.checkNotNull(subtrahend);  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	MathUtils.checkNotNull(subtrahend);	      	non-compiled	[CE]  not  a  statement	4	None	replace
14	[BUG]  [BUGGY]  MathUtils.checkState(isInfinite  ||  isNaN);  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  MathUtils.checkState(isInfinite  ||  isNaN);  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	MathUtils.checkState(isInfinite  ||  isNaN);	      	non-compiled	[CE]  not  a  statement	4	None	replace
15	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();	      Complex    real    =    createComplex(real    -    subtrahend.getReal());    imaginary    -    subtrahend.getImaginary();    	non-compiled	[CE]  not  a  statement	7	None	replace
16	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary();  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary();	      Complex    real    =    createComplex(real    -    subtrahend.getReal());    imaginary    -    subtrahend.getImaginary();    	non-compiled	[CE]  not  a  statement	7	None	replace
17	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  denominator  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  denominator  -  subtrahend.getImaginary());  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  denominator  -  subtrahend.getImaginary());	  return    createComplex(imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	12	None	replace
18	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDivisor());  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDivisor());  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDivisor());	  return    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getDivisor());    	non-compiled	[CE]  not  a  statement	9	None	replace
19	[BUG]  [BUGGY]  return  createComplex(real  -  subtrahend.getDivisor(),  imaginary  -  subtrahend.getReal());  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(real  -  subtrahend.getDivisor(),  imaginary  -  subtrahend.getReal());  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(real  -  subtrahend.getDivisor(),  imaginary  -  subtrahend.getReal());	  return    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getDivisor());    	non-compiled	[CE]  not  a  statement	9	None	replace
20	[BUG]  [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getDenominator());	      Complex    real    =    createComplex(subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	11	None	replace
21	[BUG]  [BUGGY]  Complex  real  =  createComplex(possible  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(possible  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  real  =  createComplex(possible  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());	      Complex    real    =    createComplex(subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	11	None	replace
22	[BUG]  [BUGGY]  Complex  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());	      Complex    real    =    createComplex(subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	11	None	replace
23	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Real  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();	      Real    real    =    createComplex(real,    imaginary    -    subtrahend.getReal());    imaginary    -    subtrahend.getImaginary();    	non-compiled	[CE]  not  a  statement	14	None	replace
24	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDenominator());  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDenominator());	  return    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	2	None	replace
25	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());	  return    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	2	None	replace
26	[BUG]  [BUGGY]  MathUtils.checkArgument(isNaN  ||  isInfinite);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  MathUtils.checkArgument(isNaN  ||  isInfinite);  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	MathUtils.checkArgument(isNaN  ||  isInfinite);	      	non-compiled	[CE]  not  a  statement	4	None	replace
27	[BUG]  [BUGGY]  Complex  imaginary  =  getImaginary(subtrahend);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  imaginary  =  getImaginary(subtrahend);  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  imaginary  =  getImaginary(subtrahend);	      	non-compiled	[CE]  not  a  statement	4	None	replace
28	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal());  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal());	      Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal());    	non-compiled	[CE]  not  a  statement	8	None	replace
29	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());	  return    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getDivisor());    	non-compiled	[CE]  not  a  statement	9	None	replace
30	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());	      Complex    real    =    createComplex(subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	11	None	replace
31	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getImaginary());  [BUGGY]    return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getImaginary());	      Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal());    	non-compiled	[CE]  not  a  statement	8	None	replace
32	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  not  a  statement	4	None	replace
33	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  else  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  else  {  return  Complex.ZERO;  }  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  else  {  return  Complex.ZERO;  }	      	non-compiled	[CE]  not  a  statement	4	None	replace
34	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  /  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  /  subtrahend.getImaginary());  [BUGGY]    imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  /  subtrahend.getImaginary());	  return    createComplex(imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	12	None	replace
