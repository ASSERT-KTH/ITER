bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());  [BUGGY]  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());	return  createComplex(real  -  subtrahend.getReal(),    imaginary  -  subtrahend.getImaginary());  	non-compiled	[CE]  not  a  statement	43	None	replace
2	[BUG]  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());	return  createComplex(real  -  subtrahend.getReal(),    imaginary  -  subtrahend.getImaginary());  	non-compiled	[CE]  not  a  statement	43	None	replace
3	[BUG]  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());  [BUGGY]  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(real  -  subtrahend.getReal(),  real  -  subtrahend.getImaginary());	return  createComplex(real  -  subtrahend.getReal(),    imaginary  -  subtrahend.getImaginary());  	non-compiled	[CE]  not  a  statement	43	None	replace
4	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]    [BUGGY]  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	  	return  createComplex(real  -  subtrahend.getReal(),    imaginary  -  subtrahend.getImaginary());  	non-compiled	[CE]  not  a  statement	43	None	replace
5	[BUG]  [BUGGY]    Complex  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]    Complex  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	    Complex  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());		non-compiled	[CE]  not  a  statement	44	None	add
6	[BUG]  [BUGGY]    Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]    Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	    Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();		non-compiled	[CE]  not  a  statement	44	None	add
7	[BUG]  [BUGGY]    Complex  real  =  createComplex(real  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]    Complex  real  =  createComplex(real  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	    Complex  real  =  createComplex(real  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();		non-compiled	[CE]  not  a  statement	44	None	add
8	[BUG]  [BUGGY]    Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal());  [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]    Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal());  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	    Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal());		non-compiled	[CE]  not  a  statement	44	None	add
9	[BUG]  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());  [BUGGY]  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());	return  createComplex(real  -  subtrahend.getReal(),    imaginary  -  subtrahend.getImaginary());  	non-compiled	[CE]  not  a  statement	43	None	replace
10	[BUG]  [BUGGY]    Complex  real  =  createComplex(subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]    Complex  real  =  createComplex(subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	    Complex  real  =  createComplex(subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());		non-compiled	[CE]  not  a  statement	44	None	add
11	[BUG]  [BUGGY]    Complex  real  =  createComplex(subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]    Complex  real  =  createComplex(subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	    Complex  real  =  createComplex(subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());		non-compiled	[CE]  not  a  statement	44	None	add
12	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	return  createComplex(real  -  subtrahend.getReal(),    imaginary  -  subtrahend.getImaginary());  	non-compiled	[CE]  not  a  statement	43	None	replace
13	[BUG]  [BUGGY]    Real  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	    Real  real  =  createComplex(real  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());		non-compiled	[CE]  not  a  statement	44	None	add
14	[BUG]  [BUGGY]    Real  real  =  createComplex(real,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  real  =  createComplex(real,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	493	494	2	replace	    Real  real  =  createComplex(real,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();		non-compiled	[CE]  not  a  statement	44	None	add
