projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==0.0&&divisor.getImaginary()==0.0){
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==0.0||divisor.getImaginary()==0.0){
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==0.5&&divisor.getImaginary()==0.5){
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==0.0&&divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==0.0||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==0.0||divisor.getImaginary()==0.0){thrownewIllegalArgumentException("");}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==0.0&&divisor.getImaginary()==0.0){returnZERO;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MathUtils.checkNotNull(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.getReal()==0.0&&divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.getReal()==0.0||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.isNaN()||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.isInfinite()||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.isNaN()||divisor.isNaN()){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()==0.0||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()!=0.0||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.isInfinite()||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.isInfinite()&&divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.isInfinite(),divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.isInfinite()||divisor.getImaginary()==0.0){returnNaN;
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()==0.0&&divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()!=0.0||divisor.getImaginary()==0.0){
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==1.0||divisor.getImaginary()==0.0){
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MathUtils.checkDenominator(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MathUtils.checkState(divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MathUtils.checkState(divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MathUtils.checkState(d.isNaN(),divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MathUtils.checkState(d.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256finaldoubled=divisor.getImaginary();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()==0.0||divisor.getImaginary()==0.0){returnNaN;
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256NeighborDivisordivisor=(NeighborDivisor)divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.isNaN()||divisor.isNaN()){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkNotNull(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()==0.0&&divisor.getImaginary()==0.0){returnNaN;
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256nisipisNaN(divisor.getReal())&&nisipisNaN(divisor.getImaginary())){thrownewIllegalArgumentException("");}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256nisipisNaN(divisor.getReal(),divisor.getImaginary()){thrownewIllegalArgumentException("");}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256nisipisNaN(divisor.getReal(),divisor.getImaginary())){thrownewIllegalArgumentException("");}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256nisipa.add(divisor.getReal(),divisor.getImaginary(),0.0){thrownewIllegalArgumentException("");}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.isNaN()||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.isReal()||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==0.5||divisor.getImaginary()==0.5){
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==0&&divisor.getImaginary()==0){
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MutableDenominatordivisor=(MutableDenominator)divisor.getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MutableDenominatordivisor=(MutableDenominator)divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MutableDenominatordivisor=(MutableDenominator)divisor.getDestination();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256nisipTo(real){if(divisor.isNaN()||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256nisipTo(real){if(divisor.isNaN()||divisor.getImaginary()!=0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256NeighborDivisordivisor=(NeighborDivisor)divisor.getDivisor();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256NeighborDivisordivisor=(NeighborDivisor)divisor.getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getImaginary()==0.0||divisor.getReal()==0.0){
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.isNaN()||divisor.isNaN()){returnONE;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.isNaN()||divisor.isNaN()){thrownewIllegalArgumentException("");}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.isInfinite()||divisor.isInfinite()){returnONE;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256nisipTo(real){if(divisor.isNaN()||divisor.isNaN()){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MutableDivisordivisor=(MutableDivisor)divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MutableDivisordivisor=(MutableDivisor)divisor.getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getDenominator()==0.0&&divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()==0.0,divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Magimizer.checkNotNull(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MathUtils.checkNotNull(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MathUtils.checkNotNull(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()==0||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()==0.0);divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()==0.0||divisor.getImaginary()==0.0){thrownewIllegalArgumentException("");}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()==0||divisor.getImaginary()==0.0){thrownewIllegalArgumentException("");}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()==0||divisor.getImaginary()==0){thrownewIllegalArgumentException("");}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256Context.checkState(divisor.getReal()==0.0,divisor.getImaginary()==0.0){thrownewIllegalArgumentException("");}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.isNaN()&&divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.isNaN()||divisor.getReal()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.getReal()==0.5||divisor.getImaginary()==0.5){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.getReal()==0||divisor.getImaginary()==0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.isNaN()){if(divisor.isNaN()||divisor.isNaN()){returnONE;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.isNaN()||divisor.isNaN()){returnZERO;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getImaginary()==0.0||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getImaginary()==0.0&&divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==0||divisor.getImaginary()==0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor.getReal()==0.5&&divisor.getImaginary()==0.5){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256NeighborDivisordivisor=(NaN)divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256NeighborDivisordivisor=(NaN)divisor.getDivisor();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256NeighborDivisordivisor=getDivisor(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256NeighborDivisordivisor=(NaN)divisor.getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256MathUtils.checkInternal(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.isInfinite()&&divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor==null){if(divisor.isInfinite()||divisor.getImaginary()==0.0){returnNaN;}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java256if(divisor!=null){if(divisor.isReal()||divisor.getImaginary()==0.0){returnNaN;}
