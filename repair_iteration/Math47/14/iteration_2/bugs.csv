bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.abs(real));  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs(),  Math.abs(real));  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.abs(real));	      SimpleMath.log(abs(),    Math.abs(imaginary));    	non-compiled	[CE]  not  a  statement	7	None	replace
2	[BUG]  [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real));  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real));  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real));	      SimpleMath.log(abs(),    Math.abs(imaginary));    	non-compiled	[CE]  not  a  statement	7	None	replace
3	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.abs(imaginary),  real);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs(),  Math.abs(imaginary),  real);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.abs(imaginary),  real);	      SimpleMath.log(abs(),    Math.abs(imaginary));    	non-compiled	[CE]  not  a  statement	7	None	replace
4	[BUG]  [BUGGY]  return  Complex.NaN  ||  isInfinite;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  Complex.NaN  ||  isInfinite;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN  ||  isInfinite;	  return    Complex.NaN;    	non-compiled	[CE]  not  a  statement	15	None	replace
5	[BUG]  [BUGGY]  return  Complex.NaN,  isInfinite;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  Complex.NaN,  isInfinite;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isInfinite;	  return    Complex.NaN;    	non-compiled	[CE]  not  a  statement	15	None	replace
6	[BUG]  [BUGGY]  return  Complex.NaN,  isInfinite);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  Complex.NaN,  isInfinite);  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isInfinite);	  return    Complex.NaN;    	non-compiled	[CE]  not  a  statement	15	None	replace
7	[BUG]  [BUGGY]  return  isInfinite  &&  isNaN;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isInfinite  &&  isNaN;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite  &&  isNaN;	  return    isInfinite;    	non-compiled	[CE]  not  a  statement	4	None	replace
8	[BUG]  [BUGGY]  return  isInfinite  ||  isNaN;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isInfinite  ||  isNaN;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite  ||  isNaN;	  return    isInfinite;    	non-compiled	[CE]  not  a  statement	4	None	replace
9	[BUG]  [BUGGY]  return  isInfinite?  null  :  isNaN;  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isInfinite?  null  :  isNaN;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  null  :  isNaN;	  return    isInfinite;    	non-compiled	[CE]  not  a  statement	4	None	replace
10	[BUG]  [BUGGY]  if(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
11	[BUG]  [BUGGY]  if(isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
12	[BUG]  [BUGGY]  SimpleMath.atan2(imaginary,  real));  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.atan2(imaginary,  real));  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(imaginary,  real));	      	non-compiled	[CE]  not  a  statement	5	None	replace
13	[BUG]  [BUGGY]  SimpleMath.log(abs()),  real,  isNaN);  [CE]  not  a  statement  [FE]                      AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs()),  real,  isNaN);  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  real,  isNaN);	      	non-compiled	[CE]  not  a  statement	5	None	replace
14	[BUG]  [BUGGY]  return  isInfinite?  NaN  :  INF;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isInfinite?  NaN  :  INF;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  NaN  :  INF;	  return    isNaN?    NaN    :    INF;    	non-compiled	[CE]  not  a  statement	16	None	replace
15	[BUG]  [BUGGY]  return  isNaN?  NaN  :  ZERO;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN?  NaN  :  ZERO;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  ZERO;	  return    isNaN?    NaN    :    INF;    	non-compiled	[CE]  not  a  statement	16	None	replace
16	[BUG]  [BUGGY]  return  isNaN?  NaN  :  1;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN?  NaN  :  1;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  1;	  return    isNaN?    NaN    :    INF;    	non-compiled	[CE]  not  a  statement	16	None	replace
17	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Complex.ZERO;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN?  NaN  :  Complex.ZERO;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  Complex.ZERO;	  return    isNaN?    NaN    :    INF;    	non-compiled	[CE]  not  a  statement	16	None	replace
18	[BUG]  [BUGGY]  return  isInfinite?  Complex.ZERO  :  Complex.ZERO;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isInfinite?  Complex.ZERO  :  Complex.ZERO;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  Complex.ZERO  :  Complex.ZERO;	  return    isNaN?    Complex.ZERO    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	1	None	replace
19	[BUG]  [BUGGY]  return  isNaN?  Complex.ZERO  :  INF.ZERO;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN?  Complex.ZERO  :  INF.ZERO;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  Complex.ZERO  :  INF.ZERO;	  return    isNaN?    Complex.ZERO    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	1	None	replace
20	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }	      if(isNaN    ||    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	20	None	replace
21	[BUG]  [BUGGY]  If(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  If(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }	      if(isNaN    ||    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	20	None	replace
22	[BUG]  [BUGGY]  return  isNaN  &&  isInfinite;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN  &&  isInfinite;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  &&  isInfinite;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	3	None	replace
23	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite  ||  divisor;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN  ||  isInfinite  ||  divisor;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  isInfinite  ||  divisor;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	3	None	replace
24	[BUG]  [BUGGY]  return  isNaN  ||  divisor;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN  ||  divisor;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  divisor;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	3	None	replace
25	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  ||  isInfinite);	      Context.checkInfinite(isNaN);    	non-compiled	[CE]  not  a  statement	6	None	replace
26	[BUG]  [BUGGY]  Context.checkInfinite(isInfinite);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(isInfinite);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isInfinite);	      Context.checkInfinite(isNaN);    	non-compiled	[CE]  not  a  statement	6	None	replace
27	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  isInfinite);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(isNaN,  isInfinite);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  isInfinite);	      Context.checkInfinite(isNaN);    	non-compiled	[CE]  not  a  statement	6	None	replace
28	[BUG]  [BUGGY]  SimpleMath.atan2(abs()));  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.atan2(abs()));  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(abs()));	      SimpleMath.log(abs()));    	non-compiled	[CE]  not  a  statement	9	None	replace
29	[BUG]  [BUGGY]  SimpleMath.info(abs()));  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.info(abs()));  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.info(abs()));	      SimpleMath.log(abs()));    	non-compiled	[CE]  not  a  statement	9	None	replace
30	[BUG]  [BUGGY]  SimpleMath.log(abs()),  real);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs()),  real);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  real);	      SimpleMath.log(abs()));    	non-compiled	[CE]  not  a  statement	9	None	replace
31	[BUG]  [BUGGY]  Complex  real  =  createComplex(false);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(false);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(false);	      Complex    real    =    createComplex(null);    	non-compiled	[CE]  not  a  statement	12	None	replace
32	[BUG]  [BUGGY]  Complex  real  =  createComplex(divisor);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(divisor);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(divisor);	      Complex    real    =    createComplex(null);    	non-compiled	[CE]  not  a  statement	12	None	replace
33	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  denominator);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(null,  null,  denominator);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  denominator);	      Complex    real    =    createComplex(null,    null);    	non-compiled	[CE]  not  a  statement	14	None	replace
34	[BUG]  [BUGGY]  Complex  real  =  createComplex(false,  null);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(false,  null);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(false,  null);	      Complex    real    =    createComplex(null,    null);    	non-compiled	[CE]  not  a  statement	14	None	replace
35	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  ZERO);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(null,  null,  ZERO);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  ZERO);	      Complex    real    =    createComplex(null,    null);    	non-compiled	[CE]  not  a  statement	14	None	replace
36	[BUG]  [BUGGY]  SimpleMath.log(abs(),  real,  imaginary);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs(),  real,  imaginary);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  real,  imaginary);	      SimpleMath.log(abs(),    real);    	non-compiled	[CE]  not  a  statement	8	None	replace
37	[BUG]  [BUGGY]  SimpleMath.log(abs(),  imaginary);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs(),  imaginary);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  imaginary);	      SimpleMath.log(abs(),    real);    	non-compiled	[CE]  not  a  statement	8	None	replace
38	[BUG]  [BUGGY]  SimpleMath.log(abs(),  RealMath.atan2(imaginary,  real));  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs(),  RealMath.atan2(imaginary,  real));  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  RealMath.atan2(imaginary,  real));	      SimpleMath.log(abs(),    real);    	non-compiled	[CE]  not  a  statement	8	None	replace
39	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
40	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
41	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
42	[BUG]  [BUGGY]  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
43	[BUG]  [BUGGY]  Context.checkInfinite(true);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(true);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(true);	      Context.checkInfinite(false);    	non-compiled	[CE]  not  a  statement	13	None	replace
44	[BUG]  [BUGGY]  Context.checkInfinite(false,  isNaN);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(false,  isNaN);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  isNaN);	      Context.checkInfinite(false);    	non-compiled	[CE]  not  a  statement	13	None	replace
45	[BUG]  [BUGGY]  Context.checkInfinite(false,  null);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(false,  null);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  null);	      Context.checkInfinite(false);    	non-compiled	[CE]  not  a  statement	13	None	replace
46	[BUG]  [BUGGY]  Context.checkInfinite(false,  false);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(false,  false);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  false);	      Context.checkInfinite(false);    	non-compiled	[CE]  not  a  statement	13	None	replace
47	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isInfinite  ||  isNaN)  {  return  NaN;  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN)  {  return  NaN;  }	      if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
48	[BUG]  [BUGGY]  If(isInfinite  ||  isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  If(isInfinite  ||  isNaN)  {  return  NaN;  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isInfinite  ||  isNaN)  {  return  NaN;  }	      if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
49	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
50	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
51	[BUG]  [BUGGY]  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||  isInfinite)  {  throw  new  IllegalStateException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
52	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
53	[BUG]  [BUGGY]  Complex  real  =  getDivisor();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  getDivisor();  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDivisor();	      Complex    real    =    getNaN();    	non-compiled	[CE]  not  a  statement	11	None	replace
54	[BUG]  [BUGGY]  Complex  real  =  getINF();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  getINF();  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getINF();	      Complex    real    =    getNaN();    	non-compiled	[CE]  not  a  statement	11	None	replace
55	[BUG]  [BUGGY]  Complex  real  =  getDenominator();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  getDenominator();  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDenominator();	      Complex    real    =    getNaN();    	non-compiled	[CE]  not  a  statement	11	None	replace
56	[BUG]  [BUGGY]  SimpleMath.log(abs()),  isNaN,  real);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs()),  isNaN,  real);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  isNaN,  real);	      SimpleMath.log(abs()),    isNaN);    	non-compiled	[CE]  not  a  statement	10	None	replace
57	[BUG]  [BUGGY]  SimpleMath.log(abs()),  isNaN  +  1);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs()),  isNaN  +  1);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  isNaN  +  1);	      SimpleMath.log(abs()),    isNaN);    	non-compiled	[CE]  not  a  statement	10	None	replace
58	[BUG]  [BUGGY]  Complex  real  =  getImaginary();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  getImaginary();  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getImaginary();	      Complex    real    =    getNaN();    	non-compiled	[CE]  not  a  statement	11	None	replace
59	[BUG]  [BUGGY]  Context.checkInfinite(real);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(real);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(real);	      Context.checkInfinite(isNaN);    	non-compiled	[CE]  not  a  statement	6	None	replace
60	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  real);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(isNaN,  real);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  real);	      Context.checkInfinite(isNaN);    	non-compiled	[CE]  not  a  statement	6	None	replace
61	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  this;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isNaN  ||  isInfinite)  {  return  this;  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite)  {  return  this;  }	      if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
62	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  Complex.ONE;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isNaN  ||  isInfinite)  {  return  Complex.ONE;  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite)  {  return  Complex.ONE;  }	      if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
63	[BUG]  [BUGGY]  SimpleMath.log(abs()),  NaN);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs()),  NaN);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  NaN);	      SimpleMath.log(abs()),    isNaN);    	non-compiled	[CE]  not  a  statement	10	None	replace
64	[BUG]  [BUGGY]  SimpleMath.log(isInfinite),  isNaN);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(isInfinite),  isNaN);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite),  isNaN);	      SimpleMath.log(abs()),    isNaN);    	non-compiled	[CE]  not  a  statement	10	None	replace
65	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(imaginary);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(imaginary);	      Complex    real    =    createComplex(null);    	non-compiled	[CE]  not  a  statement	12	None	replace
66	[BUG]  [BUGGY]  Complex  real  =  createComplex(Imaginary);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(Imaginary);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(Imaginary);	      Complex    real    =    createComplex(null);    	non-compiled	[CE]  not  a  statement	12	None	replace
67	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  imaginary);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(null,  imaginary);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  imaginary);	      Complex    real    =    createComplex(null);    	non-compiled	[CE]  not  a  statement	12	None	replace
68	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  null);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(imaginary,  null);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(imaginary,  null);	      Complex    real    =    createComplex(null);    	non-compiled	[CE]  not  a  statement	12	None	replace
69	[BUG]  [BUGGY]  SimpleMath.log(isNaN));  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(isNaN));  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN));	      SimpleMath.log(abs()));    	non-compiled	[CE]  not  a  statement	9	None	replace
70	[BUG]  [BUGGY]  return  isNaN?  Complex.ZERO  :  Complex.ONE;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN?  Complex.ZERO  :  Complex.ONE;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  Complex.ZERO  :  Complex.ONE;	  return    isNaN?    Complex.ZERO    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	1	None	replace
71	[BUG]  [BUGGY]  return  isNaN?  Complex.ONE  :  Complex.ZERO;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN?  Complex.ONE  :  Complex.ZERO;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  Complex.ONE  :  Complex.ZERO;	  return    isNaN?    Complex.ZERO    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	1	None	replace
72	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
73	[BUG]  [BUGGY]  FragmentFactory  factory  =  getFactory().getFactory();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  FragmentFactory  factory  =  getFactory().getFactory();  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	FragmentFactory  factory  =  getFactory().getFactory();	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
74	[BUG]  [BUGGY]  Context.checkInfinite(false,  imaginary);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(false,  imaginary);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  imaginary);	      Context.checkInfinite(false);    	non-compiled	[CE]  not  a  statement	13	None	replace
75	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
76	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
77	[BUG]  [BUGGY]  return  Complex.NaN  +  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  Complex.NaN  +  1;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN  +  1;	  return    Complex.NaN;    	non-compiled	[CE]  not  a  statement	15	None	replace
78	[BUG]  [BUGGY]  return  Complex.NaN  -  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  Complex.NaN  -  1;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN  -  1;	  return    Complex.NaN;    	non-compiled	[CE]  not  a  statement	15	None	replace
79	[BUG]  [BUGGY]  return  isNaN  ||  imaginary;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN  ||  imaginary;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  imaginary;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	3	None	replace
80	[BUG]  [BUGGY]  return  isNaN  ||  ZERO;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN  ||  ZERO;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  ZERO;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	3	None	replace
81	[BUG]  [BUGGY]  return  isNaN  ||  real;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN  ||  real;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  real;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	3	None	replace
82	[BUG]  [BUGGY]  return  isNaN?  NaN  :  ONE;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN?  NaN  :  ONE;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  ONE;	  return    isNaN?    NaN    :    INF;    	non-compiled	[CE]  not  a  statement	16	None	replace
83	[BUG]  [BUGGY]  if(isNaN  &&  isInfinite)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isNaN  &&  isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  &&  isInfinite)  {  return  Complex.ZERO;  }	      if(isNaN    ||    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	20	None	replace
84	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
85	[BUG]  [BUGGY]  return  this.isInfinite;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  this.isInfinite;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  this.isInfinite;	  return    isInfinite;    	non-compiled	[CE]  not  a  statement	4	None	replace
86	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(imaginary));  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(imaginary));  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.sqrt(imaginary));	      SimpleMath.log(abs(),    Math.abs(imaginary));    	non-compiled	[CE]  not  a  statement	7	None	replace
87	[BUG]  [BUGGY]  return  this.isNaN;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  this.isNaN;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  this.isNaN;	  return    isNaN;    	non-compiled	[CE]  not  a  statement	2	None	replace
88	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  imaginary);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(null,  null,  imaginary);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  imaginary);	      Complex    real    =    createComplex(null,    null);    	non-compiled	[CE]  not  a  statement	14	None	replace
89	[BUG]  [BUGGY]  return  isNaN?  NaN  :  INF.log();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN?  NaN  :  INF.log();  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  INF.log();	  return    isNaN?    NaN    :    INF;    	non-compiled	[CE]  not  a  statement	16	None	replace
90	[BUG]  [BUGGY]  Context.checkInfinite(infinite);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(infinite);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(infinite);	      Context.checkInfinite(isNaN);    	non-compiled	[CE]  not  a  statement	6	None	replace
91	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  INF);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(null,  null,  INF);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  INF);	      Complex    real    =    createComplex(null,    null);    	non-compiled	[CE]  not  a  statement	14	None	replace
92	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  createComplex(false);  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isNaN  ||  isInfinite)  {  return  createComplex(false);  }  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite)  {  return  createComplex(false);  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
93	[BUG]  [BUGGY]  return  createComplex(FastMath.atan2(imaginary,  imaginary));  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  createComplex(FastMath.atan2(imaginary,  imaginary));  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  createComplex(FastMath.atan2(imaginary,  imaginary));	      	non-compiled	[CE]  not  a  statement	5	None	replace
94	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite  +  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isNaN  ||  isInfinite  +  1;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  isInfinite  +  1;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	3	None	replace
95	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite  ||  imaginary)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isNaN  ||  isInfinite  ||  imaginary)  {  return  Complex.ZERO;  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite  ||  imaginary)  {  return  Complex.ZERO;  }	      if(isNaN    ||    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	20	None	replace
96	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
97	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)]  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)]  throw  new  IllegalArgumentException( " ");  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  ||  isInfinite)]  throw  new  IllegalArgumentException( " ");	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
98	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Parchet.checkInfinite(isNaN);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN);	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
99	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)&&  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)&&  throw  new  IllegalArgumentException( " ");  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  ||  isInfinite)&&  throw  new  IllegalArgumentException( " ");	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	17	None	replace
100	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
101	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite);	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
102	[BUG]  [BUGGY]  return  isInfinite?  NaN  :  Infinite.ZERO;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  return  isInfinite?  NaN  :  Infinite.ZERO;  [BUGGY]    }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  NaN  :  Infinite.ZERO;	  return    isInfinite;    	non-compiled	[CE]  not  a  statement	4	None	replace
103	[BUG]  [BUGGY]  Context.checkInfinite(false,  INF);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Context.checkInfinite(false,  INF);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  INF);	      Context.checkInfinite(false);    	non-compiled	[CE]  not  a  statement	13	None	replace
104	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  INF;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  if(isNaN  ||  isInfinite)  {  return  INF;  }  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite)  {  return  INF;  }	      if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
105	[BUG]  [BUGGY]  SimpleMath.log(isNaN,  real);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(isNaN,  real);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN,  real);	      SimpleMath.log(abs(),    real);    	non-compiled	[CE]  not  a  statement	8	None	replace
106	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.abs(imaginary),  imaginary);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(abs(),  Math.abs(imaginary),  imaginary);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.abs(imaginary),  imaginary);	      SimpleMath.log(abs(),    Math.abs(imaginary));    	non-compiled	[CE]  not  a  statement	7	None	replace
107	[BUG]  [BUGGY]  Complex  real  =  createComplex(real);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(real);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(real);	      Complex    real    =    createComplex(null);    	non-compiled	[CE]  not  a  statement	12	None	replace
108	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  INF);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  Complex  real  =  createComplex(null,  INF);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  INF);	      Complex    real    =    createComplex(null);    	non-compiled	[CE]  not  a  statement	12	None	replace
109	[BUG]  [BUGGY]  SimpleMath.log(isInfinite)&&  isNaN);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(isInfinite)&&  isNaN);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite)&&  isNaN);	      SimpleMath.log(abs()),    isNaN);    	non-compiled	[CE]  not  a  statement	10	None	replace
110	[BUG]  [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite));  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite));  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN  ||  isInfinite));	      SimpleMath.log(abs()));    	non-compiled	[CE]  not  a  statement	9	None	replace
111	[BUG]  [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  log()  {  if  (isNaN)  {    [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite);  [BUGGY]    return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN  ||  isInfinite);	      SimpleMath.log(abs()));    	non-compiled	[CE]  not  a  statement	9	None	replace
