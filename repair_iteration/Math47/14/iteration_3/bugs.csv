bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  INF,  denominator);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  null,  INF,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  INF,  denominator);	  Complex    real    =    createComplex(null,    null,    INF);    	non-compiled	[CE]  not  a  statement	91	None	replace
2	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  NaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  null,  NaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  NaN);	  Complex    real    =    createComplex(null,    null,    INF);    	non-compiled	[CE]  not  a  statement	91	None	replace
3	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  INF,  ZERO);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  null,  INF,  ZERO);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  INF,  ZERO);	  Complex    real    =    createComplex(null,    null,    INF);    	non-compiled	[CE]  not  a  statement	91	None	replace
4	[BUG]  [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real),  denominator));  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real),  denominator));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real),  denominator));	  SimpleMath.log(abs(),    FastMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	2	None	replace
5	[BUG]  [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(real,  imaginary));  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(real,  imaginary));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  FastMath.atan2(real,  imaginary));	  SimpleMath.log(abs(),    FastMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	2	None	replace
6	[BUG]  [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(imaginary,  imaginary));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(imaginary,  imaginary));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  FastMath.atan2(imaginary,  imaginary));	  SimpleMath.log(abs(),    FastMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	2	None	replace
7	[BUG]  [BUGGY]  SimpleMath.log(isNaN),  isInfinite);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN),  isInfinite);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN),  isInfinite);	  SimpleMath.log(isInfinite),    isNaN);    	non-compiled	[CE]  not  a  statement	64	None	replace
8	[BUG]  [BUGGY]  SimpleMath.log(isInfinite),  isNaN,  denominator);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite),  isNaN,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite),  isNaN,  denominator);	  SimpleMath.log(isInfinite),    isNaN);    	non-compiled	[CE]  not  a  statement	64	None	replace
9	[BUG]  [BUGGY]  return  isInfinite?  Complex.ZERO  :  Complex.ONE;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite?  Complex.ZERO  :  Complex.ONE;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  Complex.ZERO  :  Complex.ONE;	  return    isInfinite?    Complex.ZERO    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	18	None	replace
10	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalStateException( " ");  }	  Context.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	72	None	replace
11	[BUG]  [BUGGY]  Context.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }	  Context.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	72	None	replace
12	[BUG]  [BUGGY]  Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ");  }	  Context.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	72	None	replace
13	[BUG]  [BUGGY]  SimpleMath.log(abs(),  RealMath.atan2(imaginary,  real),  denominator));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  RealMath.atan2(imaginary,  real),  denominator));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  RealMath.atan2(imaginary,  real),  denominator));	  SimpleMath.log(abs(),    RealMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	38	None	replace
14	[BUG]  [BUGGY]  SimpleMath.log(abs(),  RealMath.atan2(real,  imaginary));  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  RealMath.atan2(real,  imaginary));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  RealMath.atan2(real,  imaginary));	  SimpleMath.log(abs(),    RealMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	38	None	replace
15	[BUG]  [BUGGY]  SimpleMath.log(abs(),  RealMath.atan2(imaginary,  imaginary));  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  RealMath.atan2(imaginary,  imaginary));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  RealMath.atan2(imaginary,  imaginary));	  SimpleMath.log(abs(),    RealMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	38	None	replace
16	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(imaginary),  denominator);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(imaginary),  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.sqrt(imaginary),  denominator);	  SimpleMath.log(abs(),    Math.sqrt(imaginary));    	non-compiled	[CE]  not  a  statement	86	None	replace
17	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(imaginary),  real);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(imaginary),  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.sqrt(imaginary),  real);	  SimpleMath.log(abs(),    Math.sqrt(imaginary));    	non-compiled	[CE]  not  a  statement	86	None	replace
18	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(real));  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(real));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.sqrt(real));	  SimpleMath.log(abs(),    Math.sqrt(imaginary));    	non-compiled	[CE]  not  a  statement	86	None	replace
19	[BUG]  [BUGGY]  return  isInfinite?  NaN  :  ZERO;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite?  NaN  :  ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  NaN  :  ZERO;	  return    isInfinite?    NaN    :    INF;    	non-compiled	[CE]  not  a  statement	14	None	replace
20	[BUG]  [BUGGY]  return  isNaN?  NaN  :  NaN;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  NaN  :  NaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  NaN;	  return    isInfinite?    NaN    :    INF;    	non-compiled	[CE]  not  a  statement	14	None	replace
21	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  imaginary)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  isNaN  ||  imaginary)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN  ||  imaginary)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite    ||    imaginary)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
22	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite  ||  real)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isNaN  ||  isInfinite  ||  real)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite  ||  real)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite    ||    imaginary)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
23	[BUG]  [BUGGY]  if(isInfinite  ||  imaginary  ||  isNaN)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  imaginary  ||  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  imaginary  ||  isNaN)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite    ||    imaginary)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
24	[BUG]  [BUGGY]  Parchet.checkInfinite(isInfinite);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isInfinite);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isInfinite);	  Parchet.checkInfinite(isNaN);    	non-compiled	[CE]  not  a  statement	98	None	replace
25	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  ||  isInfinite);	  Parchet.checkInfinite(isNaN);    	non-compiled	[CE]  not  a  statement	98	None	replace
26	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN,  isInfinite);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN,  isInfinite);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN,  isInfinite);	  Parchet.checkInfinite(isNaN);    	non-compiled	[CE]  not  a  statement	98	None	replace
27	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  NaN);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  NaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  NaN);	  Complex    real    =    createComplex(null,    INF);    	non-compiled	[CE]  not  a  statement	108	None	replace
28	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  INF,  ZERO);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  INF,  ZERO);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  INF,  ZERO);	  Complex    real    =    createComplex(null,    INF);    	non-compiled	[CE]  not  a  statement	108	None	replace
29	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  INF,  denominator);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  INF,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  INF,  denominator);	  Complex    real    =    createComplex(null,    INF);    	non-compiled	[CE]  not  a  statement	108	None	replace
30	[BUG]  [BUGGY]  Complex  real  =  createComplex(false,  INF);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(false,  INF);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(false,  INF);	  Complex    real    =    createComplex(null,    INF);    	non-compiled	[CE]  not  a  statement	108	None	replace
31	[BUG]  [BUGGY]  SimpleMath.log(abs(),  imaginary,  real);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  imaginary,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  imaginary,  real);	  SimpleMath.log(abs(),    imaginary);    	non-compiled	[CE]  not  a  statement	37	None	replace
32	[BUG]  [BUGGY]  SimpleMath.log(abs(),  imaginary,  Real);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  imaginary,  Real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  imaginary,  Real);	  SimpleMath.log(abs(),    imaginary);    	non-compiled	[CE]  not  a  statement	37	None	replace
33	[BUG]  [BUGGY]  SimpleMath.log(isInfinite  ||  isNaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite  ||  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite  ||  isNaN);	  SimpleMath.log(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	111	None	replace
34	[BUG]  [BUGGY]  SimpleMath.log(isNaN  &&  isInfinite);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN  &&  isInfinite);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN  &&  isInfinite);	  SimpleMath.log(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	111	None	replace
35	[BUG]  [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite,  real);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN  ||  isInfinite,  real);	  SimpleMath.log(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	111	None	replace
36	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  Context.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	84	None	replace
37	[BUG]  [BUGGY]  Context.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  Context.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	84	None	replace
38	[BUG]  [BUGGY]  Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  Context.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	84	None	replace
39	[BUG]  [BUGGY]  return  isInfinite  ||  isNaN  ||  divisor;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite  ||  isNaN  ||  divisor;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite  ||  isNaN  ||  divisor;	  return    isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	8	None	replace
40	[BUG]  [BUGGY]  return  isInfinite  ||  isNaN  ||  denominator;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite  ||  isNaN  ||  denominator;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite  ||  isNaN  ||  denominator;	  return    isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	8	None	replace
41	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    real));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
42	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    real));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
43	[BUG]  [BUGGY]  nisip  =  Math.log(abs()),  isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  nisip  =  Math.log(abs()),  isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	nisip  =  Math.log(abs()),  isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    real));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
44	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    real));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
45	[BUG]  [BUGGY]  SimpleMath.log(abs()),  imaginary,  isNaN);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  imaginary,  isNaN);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  imaginary,  isNaN);	  SimpleMath.log(abs()),    real,    isNaN);    	non-compiled	[CE]  not  a  statement	13	None	replace
46	[BUG]  [BUGGY]  SimpleMath.log(abs()),  real,  imaginary);  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  real,  imaginary);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  real,  imaginary);	  SimpleMath.log(abs()),    real,    isNaN);    	non-compiled	[CE]  not  a  statement	13	None	replace
47	[BUG]  [BUGGY]  SimpleMath.log(abs()),  real,  realistic);  [CE]  not  a  statement  [FE]                              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  real,  realistic);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  real,  realistic);	  SimpleMath.log(abs()),    real,    isNaN);    	non-compiled	[CE]  not  a  statement	13	None	replace
48	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".);  }	  Context.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
49	[BUG]  [BUGGY]  Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ".);  }	  Context.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
50	[BUG]  [BUGGY]  return(isNaN  ||  isInfinite)?  null  :  this.isInfinite;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return(isNaN  ||  isInfinite)?  null  :  this.isInfinite;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return(isNaN  ||  isInfinite)?  null  :  this.isInfinite;	  return    this.isInfinite;    	non-compiled	[CE]  not  a  statement	85	None	replace
51	[BUG]  [BUGGY]  return  this.isInfinite?  null  :  this.isInfinite;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  this.isInfinite?  null  :  this.isInfinite;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  this.isInfinite?  null  :  this.isInfinite;	  return    this.isInfinite;    	non-compiled	[CE]  not  a  statement	85	None	replace
52	[BUG]  [BUGGY]  return  createComplex(FastMath.atan2(imaginary,  real));  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  createComplex(FastMath.atan2(imaginary,  real));  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  createComplex(FastMath.atan2(imaginary,  real));	  return    createComplex(FastMath.atan2(imaginary,    imaginary));    	non-compiled	[CE]  not  a  statement	93	None	replace
53	[BUG]  [BUGGY]  return  createInfinite(FastMath.atan2(imaginary,  imaginary));  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  createInfinite(FastMath.atan2(imaginary,  imaginary));  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  createInfinite(FastMath.atan2(imaginary,  imaginary));	  return    createComplex(FastMath.atan2(imaginary,    imaginary));    	non-compiled	[CE]  not  a  statement	93	None	replace
54	[BUG]  [BUGGY]  return  createComplex(FastMath.atan2(imaginary,  denominator));  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  createComplex(FastMath.atan2(imaginary,  denominator));  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  createComplex(FastMath.atan2(imaginary,  denominator));	  return    createComplex(FastMath.atan2(imaginary,    imaginary));    	non-compiled	[CE]  not  a  statement	93	None	replace
55	[BUG]  [BUGGY]  Complex  real  =  createComplex(denominator);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(denominator);	  Complex    real    =    createComplex(divisor);    	non-compiled	[CE]  not  a  statement	32	None	replace
56	[BUG]  [BUGGY]  Complex  real  =  createComplex(divisor,  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(divisor,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(divisor,  imaginary);	  Complex    real    =    createComplex(divisor);    	non-compiled	[CE]  not  a  statement	32	None	replace
57	[BUG]  [BUGGY]  return  isNaN?  Complex.ZERO  :  NaN;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  Complex.ZERO  :  NaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  Complex.ZERO  :  NaN;	  return    isNaN?    NaN    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	17	None	replace
58	[BUG]  [BUGGY]  return  isInfinite?  NaN  :  Complex.ZERO;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite?  NaN  :  Complex.ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  NaN  :  Complex.ZERO;	  return    isNaN?    NaN    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	17	None	replace
59	[BUG]  [BUGGY]  return  isNaN?  Complex.ONE  :  NaN;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  Complex.ONE  :  NaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  Complex.ONE  :  NaN;	  return    isNaN?    NaN    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	17	None	replace
60	[BUG]  [BUGGY]  Complex  real  =  getDivisor(),  denominator;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getDivisor(),  denominator;  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDivisor(),  denominator;	  Complex    real    =    getDivisor();    	non-compiled	[CE]  not  a  statement	53	None	replace
61	[BUG]  [BUGGY]  Complex  real  =  getDivisor(),  isNaN);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getDivisor(),  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDivisor(),  isNaN);	  Complex    real    =    getDivisor();    	non-compiled	[CE]  not  a  statement	53	None	replace
62	[BUG]  [BUGGY]  if(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }	  if(isInfinite    ||    isNaN)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	20	None	replace
63	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  denominator,  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  null,  denominator,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  denominator,  imaginary);	  Complex    real    =    createComplex(null,    null,    denominator);    	non-compiled	[CE]  not  a  statement	33	None	replace
64	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  divisor);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  null,  divisor);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  divisor);	  Complex    real    =    createComplex(null,    null,    denominator);    	non-compiled	[CE]  not  a  statement	33	None	replace
65	[BUG]  [BUGGY]  Complex  real  =  createComplex(divisor,  null,  denominator);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(divisor,  null,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(divisor,  null,  denominator);	  Complex    real    =    createComplex(null,    null,    denominator);    	non-compiled	[CE]  not  a  statement	33	None	replace
66	[BUG]  [BUGGY]  Complex  real  =  createComplex(false,  null,  denominator);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(false,  null,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(false,  null,  denominator);	  Complex    real    =    createComplex(null,    null,    denominator);    	non-compiled	[CE]  not  a  statement	33	None	replace
67	[BUG]  [BUGGY]  return  isNaN?  null  :  isInfinite;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  null  :  isInfinite;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  null  :  isInfinite;	  return    isInfinite?    null    :    isNaN;    	non-compiled	[CE]  not  a  statement	9	None	replace
68	[BUG]  [BUGGY]  return  isInfinite?  null  :  isNaN  +  1;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite?  null  :  isNaN  +  1;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  null  :  isNaN  +  1;	  return    isInfinite?    null    :    isNaN;    	non-compiled	[CE]  not  a  statement	9	None	replace
69	[BUG]  [BUGGY]  If(isInfinite  &&  isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  If(isInfinite  &&  isNaN)  {  return  NaN;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isInfinite  &&  isNaN)  {  return  NaN;  }	  If(isInfinite    ||    isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	48	None	replace
70	[BUG]  [BUGGY]  If(isInfinite  ||  isNaN)  {  return  INF;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  If(isInfinite  ||  isNaN)  {  return  INF;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isInfinite  ||  isNaN)  {  return  INF;  }	  If(isInfinite    ||    isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	48	None	replace
71	[BUG]  [BUGGY]  If(isNaN  ||  isInfinite)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  If(isNaN  ||  isInfinite)  {  return  NaN;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isNaN  ||  isInfinite)  {  return  NaN;  }	  If(isInfinite    ||    isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	48	None	replace
72	[BUG]  [BUGGY]  SimpleMath.log(isInfinite  ||  isNaN));  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite  ||  isNaN));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite  ||  isNaN));	  SimpleMath.log(isNaN    ||    isInfinite));    	non-compiled	[CE]  not  a  statement	110	None	replace
73	[BUG]  [BUGGY]  SimpleMath.log(isNaN  &&  isInfinite));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN  &&  isInfinite));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN  &&  isInfinite));	  SimpleMath.log(isNaN    ||    isInfinite));    	non-compiled	[CE]  not  a  statement	110	None	replace
74	[BUG]  [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite,  real));  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite,  real));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN  ||  isInfinite,  real));	  SimpleMath.log(isNaN    ||    isInfinite));    	non-compiled	[CE]  not  a  statement	110	None	replace
75	[BUG]  [BUGGY]  SimpleMath.atan2(abs(),  real));  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(abs(),  real));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(abs(),  real));	  SimpleMath.atan2(abs()));    	non-compiled	[CE]  not  a  statement	28	None	replace
76	[BUG]  [BUGGY]  SimpleMath.atan2(isNaN));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(isNaN));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(isNaN));	  SimpleMath.atan2(abs()));    	non-compiled	[CE]  not  a  statement	28	None	replace
77	[BUG]  [BUGGY]  SimpleMath.atan2(naN));  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(naN));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(naN));	  SimpleMath.atan2(abs()));    	non-compiled	[CE]  not  a  statement	28	None	replace
78	[BUG]  [BUGGY]  SimpleMath.atan2(real));  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(real));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(real));	  SimpleMath.atan2(abs()));    	non-compiled	[CE]  not  a  statement	28	None	replace
79	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  createComplex(false);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  isNaN)  {  return  createComplex(false);  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN)  {  return  createComplex(false);  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(false);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
80	[BUG]  [BUGGY]  ||  isInfinite)  {  return  createComplex(false);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||  isInfinite)  {  return  createComplex(false);  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||  isInfinite)  {  return  createComplex(false);  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(false);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
81	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  createComplex(true);  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  isNaN)  {  return  createComplex(true);  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN)  {  return  createComplex(true);  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(false);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
82	[BUG]  [BUGGY]  Context.checkInfinite(denominator);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(denominator);	  Context.checkInfinite(isInfinite);    	non-compiled	[CE]  not  a  statement	26	None	replace
83	[BUG]  [BUGGY]  Context.checkInfinite(divisor);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(divisor);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(divisor);	  Context.checkInfinite(isInfinite);    	non-compiled	[CE]  not  a  statement	26	None	replace
84	[BUG]  [BUGGY]  Complex  real  =  createInfinite(imaginary);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createInfinite(imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createInfinite(imaginary);	  Complex    real    =    createComplex(real);    	non-compiled	[CE]  not  a  statement	107	None	replace
85	[BUG]  [BUGGY]  Complex  real  =  createInfinite(real);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createInfinite(real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createInfinite(real);	  Complex    real    =    createComplex(real);    	non-compiled	[CE]  not  a  statement	107	None	replace
86	[BUG]  [BUGGY]  Complex  real  =  createImaginary(real);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createImaginary(real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createImaginary(real);	  Complex    real    =    createComplex(real);    	non-compiled	[CE]  not  a  statement	107	None	replace
87	[BUG]  [BUGGY]  If(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  If(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }	  If(isInfinite    ||    isNaN)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
88	[BUG]  [BUGGY]  If(isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  If(isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }	  If(isInfinite    ||    isNaN)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
89	[BUG]  [BUGGY]  If(isInfinite  ||  isNaN  ||  isNaN)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  If(isInfinite  ||  isNaN  ||  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isInfinite  ||  isNaN  ||  isNaN)  {  return  Complex.ZERO;  }	  If(isInfinite    ||    isNaN)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
90	[BUG]  [BUGGY]  nisip  =  Math.log(abs()),  isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  nisip  =  Math.log(abs()),  isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	nisip  =  Math.log(abs()),  isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    imaginary));    }    	non-compiled	[CE]  not  a  statement	76	None	replace
91	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  denominator));  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  denominator));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  denominator));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    imaginary));    }    	non-compiled	[CE]  not  a  statement	76	None	replace
92	[BUG]  [BUGGY]  return  isNaN  &&  ZERO;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  &&  ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  &&  ZERO;	  return    isNaN    ||    ZERO;    	non-compiled	[CE]  not  a  statement	80	None	replace
93	[BUG]  [BUGGY]  return  isNaN  ||  ONE;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  ONE;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  ONE;	  return    isNaN    ||    ZERO;    	non-compiled	[CE]  not  a  statement	80	None	replace
94	[BUG]  [BUGGY]  SimpleMath.log(abs()),  NaN  +  1);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  NaN  +  1);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  NaN  +  1);	  SimpleMath.log(abs()),    isNaN    +    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
95	[BUG]  [BUGGY]  SimpleMath.log(abs(),  isNaN  +  1);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  isNaN  +  1);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  isNaN  +  1);	  SimpleMath.log(abs()),    isNaN    +    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
96	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  imaginary,  denominator);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  null,  imaginary,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  imaginary,  denominator);	  Complex    real    =    createComplex(null,    null,    imaginary);    	non-compiled	[CE]  not  a  statement	88	None	replace
97	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  null,  null);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(imaginary,  null,  null);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(imaginary,  null,  null);	  Complex    real    =    createComplex(null,    null,    imaginary);    	non-compiled	[CE]  not  a  statement	88	None	replace
98	[BUG]  [BUGGY]  Complex  real  =  createComplex(false,  null,  imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(false,  null,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(false,  null,  imaginary);	  Complex    real    =    createComplex(null,    null,    imaginary);    	non-compiled	[CE]  not  a  statement	88	None	replace
99	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  null,  denominator);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(imaginary,  null,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(imaginary,  null,  denominator);	  Complex    real    =    createComplex(imaginary,    null);    	non-compiled	[CE]  not  a  statement	68	None	replace
100	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  null);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(real,  null);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(real,  null);	  Complex    real    =    createComplex(imaginary,    null);    	non-compiled	[CE]  not  a  statement	68	None	replace
101	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  null,  ZERO);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(imaginary,  null,  ZERO);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(imaginary,  null,  ZERO);	  Complex    real    =    createComplex(imaginary,    null);    	non-compiled	[CE]  not  a  statement	68	None	replace
102	[BUG]  [BUGGY]  SimpleMath.log(abs())  &&  isNaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs())  &&  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs())  &&  isNaN);	  SimpleMath.log(isInfinite)&&    isNaN);    	non-compiled	[CE]  not  a  statement	109	None	replace
103	[BUG]  [BUGGY]  SimpleMath.log(isNaN)&&  isInfinite);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN)&&  isInfinite);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN)&&  isInfinite);	  SimpleMath.log(isInfinite)&&    isNaN);    	non-compiled	[CE]  not  a  statement	109	None	replace
104	[BUG]  [BUGGY]  SimpleMath.log(isNaN)&&  isInfinite;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN)&&  isInfinite;  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN)&&  isInfinite;	  SimpleMath.log(isInfinite)&&    isNaN);    	non-compiled	[CE]  not  a  statement	109	None	replace
105	[BUG]  [BUGGY]  return  isInfinite?  NaN  :  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite?  NaN  :  1;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  NaN  :  1;	  return    isNaN?    NaN    :    1;    	non-compiled	[CE]  not  a  statement	16	None	replace
106	[BUG]  [BUGGY]  return  isNaN?  NaN  :  2;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  NaN  :  2;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  2;	  return    isNaN?    NaN    :    1;    	non-compiled	[CE]  not  a  statement	16	None	replace
107	[BUG]  [BUGGY]  return  isNaN?  NaN  :  INF.ZERO;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  NaN  :  INF.ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  INF.ZERO;	  return    isNaN?    NaN    :    1;    	non-compiled	[CE]  not  a  statement	16	None	replace
108	[BUG]  [BUGGY]  return  isNaN  &&  real;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  &&  real;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  &&  real;	  return    isNaN    &&    isInfinite;    	non-compiled	[CE]  not  a  statement	22	None	replace
109	[BUG]  [BUGGY]  return  isInfinite?  NaN  :  INF.log();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite?  NaN  :  INF.log();  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  NaN  :  INF.log();	  return    isNaN?    NaN    :    INF.log();    	non-compiled	[CE]  not  a  statement	89	None	replace
110	[BUG]  [BUGGY]  return  isNaN?  NaN  :  INF.log(abs());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  NaN  :  INF.log(abs());  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  INF.log(abs());	  return    isNaN?    NaN    :    INF.log();    	non-compiled	[CE]  not  a  statement	89	None	replace
111	[BUG]  [BUGGY]  return  isNaN?  NaN  :  INF.createComplex(abs());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  NaN  :  INF.createComplex(abs());  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  INF.createComplex(abs());	  return    isNaN?    NaN    :    INF.log();    	non-compiled	[CE]  not  a  statement	89	None	replace
112	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ".);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ".);  }	  Parchet.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
113	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ".);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ".);  }	  Parchet.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
114	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Infinite.ZERO;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  NaN  :  Infinite.ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  Infinite.ZERO;	  return    isInfinite?    NaN    :    Infinite.ZERO;    	non-compiled	[CE]  not  a  statement	102	None	replace
115	[BUG]  [BUGGY]  return  isInfinite?  NaN  :  Infinite.ONE;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite?  NaN  :  Infinite.ONE;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  NaN  :  Infinite.ONE;	  return    isInfinite?    NaN    :    Infinite.ZERO;    	non-compiled	[CE]  not  a  statement	102	None	replace
116	[BUG]  [BUGGY]  Complex  real  =  createComplex(false,  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(false,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(false,  imaginary);	  Complex    real    =    createComplex(null,    imaginary);    	non-compiled	[CE]  not  a  statement	67	None	replace
117	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  imaginary,  denominator);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  imaginary,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  imaginary,  denominator);	  Complex    real    =    createComplex(null,    imaginary);    	non-compiled	[CE]  not  a  statement	67	None	replace
118	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  denominator);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  denominator);	  Complex    real    =    createComplex(null,    imaginary);    	non-compiled	[CE]  not  a  statement	67	None	replace
119	[BUG]  [BUGGY]  return  this.isNaN  ||  isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  this.isNaN  ||  isInfinite;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  this.isNaN  ||  isInfinite;	  return    this.isNaN;    	non-compiled	[CE]  not  a  statement	87	None	replace
120	[BUG]  [BUGGY]  return(isNaN  ||  isInfinite)?  null  :  this.isNaN;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return(isNaN  ||  isInfinite)?  null  :  this.isNaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return(isNaN  ||  isInfinite)?  null  :  this.isNaN;	  return    this.isNaN;    	non-compiled	[CE]  not  a  statement	87	None	replace
121	[BUG]  [BUGGY]  return(isNaN  ||  isInfinite)?  this  :  null;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return(isNaN  ||  isInfinite)?  this  :  null;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return(isNaN  ||  isInfinite)?  this  :  null;	  return    this.isNaN;    	non-compiled	[CE]  not  a  statement	87	None	replace
122	[BUG]  [BUGGY]  Parchet.checkState(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	41	None	replace
123	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	41	None	replace
124	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  ONE);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  null,  ONE);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  ONE);	  Complex    real    =    createComplex(null,    null,    ZERO);    	non-compiled	[CE]  not  a  statement	35	None	replace
125	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  0,  ZERO);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  null,  0,  ZERO);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  0,  ZERO);	  Complex    real    =    createComplex(null,    null,    ZERO);    	non-compiled	[CE]  not  a  statement	35	None	replace
126	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  ZERO,  denominator);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  null,  ZERO,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  ZERO,  denominator);	  Complex    real    =    createComplex(null,    null,    ZERO);    	non-compiled	[CE]  not  a  statement	35	None	replace
127	[BUG]  [BUGGY]  Complex  real  =  getReal();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getReal();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getReal();	  Complex    real    =    getImaginary();    	non-compiled	[CE]  not  a  statement	58	None	replace
128	[BUG]  [BUGGY]  Context.checkInfinite(true,  INF);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(true,  INF);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(true,  INF);	  Context.checkInfinite(false,    INF);    	non-compiled	[CE]  not  a  statement	103	None	replace
129	[BUG]  [BUGGY]  Context.checkInfinite(false,  NaN);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false,  NaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  NaN);	  Context.checkInfinite(false,    INF);    	non-compiled	[CE]  not  a  statement	103	None	replace
130	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  INF);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN,  INF);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  INF);	  Context.checkInfinite(false,    INF);    	non-compiled	[CE]  not  a  statement	103	None	replace
131	[BUG]  [BUGGY]  return  Complex.NaN,  isNaN  ||  isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  isNaN  ||  isInfinite;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isNaN  ||  isInfinite;	  return    Complex.NaN,    isInfinite;    	non-compiled	[CE]  not  a  statement	5	None	replace
132	[BUG]  [BUGGY]  return  Complex.NaN,  denominator;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  denominator;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  denominator;	  return    Complex.NaN,    isInfinite;    	non-compiled	[CE]  not  a  statement	5	None	replace
133	[BUG]  [BUGGY]  return  Complex.NaN,  isNaN  &&  isInfinite;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  isNaN  &&  isInfinite;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isNaN  &&  isInfinite;	  return    Complex.NaN,    isInfinite;    	non-compiled	[CE]  not  a  statement	5	None	replace
134	[BUG]  [BUGGY]  return  Complex.NaN,  isNaN;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  isNaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isNaN;	  return    Complex.NaN,    isInfinite;    	non-compiled	[CE]  not  a  statement	5	None	replace
135	[BUG]  [BUGGY]  Context.checkInfinite(imaginary);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(imaginary);	  Context.checkInfinite(real);    	non-compiled	[CE]  not  a  statement	59	None	replace
136	[BUG]  [BUGGY]  Context.checkInfinite(imaginary,  real);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(imaginary,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(imaginary,  real);	  Context.checkInfinite(real);    	non-compiled	[CE]  not  a  statement	59	None	replace
137	[BUG]  [BUGGY]  Context.checkInfinite(divisor,  real);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(divisor,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(divisor,  real);	  Context.checkInfinite(real);    	non-compiled	[CE]  not  a  statement	59	None	replace
138	[BUG]  [BUGGY]  return  isInfinite?  Complex.ONE  :  Complex.ZERO;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite?  Complex.ONE  :  Complex.ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  Complex.ONE  :  Complex.ZERO;	  return    isNaN?    Complex.ONE    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	71	None	replace
139	[BUG]  [BUGGY]  return  isNaN?  Complex.ONE  :  INF.ZERO;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  Complex.ONE  :  INF.ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  Complex.ONE  :  INF.ZERO;	  return    isNaN?    Complex.ONE    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	71	None	replace
140	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  &&  isInfinite)&&  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN  &&  isInfinite)&&  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  &&  isInfinite)&&  throw  new  IllegalArgumentException( " ");	  Parchet.checkInfinite(isNaN    ||    isInfinite)&&    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	99	None	replace
141	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  ||  isDenominator)&&  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN  ||  isDenominator)&&  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  ||  isDenominator)&&  throw  new  IllegalArgumentException( " ");	  Parchet.checkInfinite(isNaN    ||    isInfinite)&&    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	99	None	replace
142	[BUG]  [BUGGY]  Context.checkInfinite(false,  true);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false,  true);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  true);	  Context.checkInfinite(false,    false);    	non-compiled	[CE]  not  a  statement	46	None	replace
143	[BUG]  [BUGGY]  Context.checkInfinite(true,  true);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(true,  true);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(true,  true);	  Context.checkInfinite(false,    false);    	non-compiled	[CE]  not  a  statement	46	None	replace
144	[BUG]  [BUGGY]  Context.checkInfinite(true,  false);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(true,  false);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(true,  false);	  Context.checkInfinite(false,    false);    	non-compiled	[CE]  not  a  statement	46	None	replace
145	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  false);  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN,  false);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  false);	  Context.checkInfinite(false,    false);    	non-compiled	[CE]  not  a  statement	46	None	replace
146	[BUG]  [BUGGY]  SimpleMath.log(abs()),  RealMath.atan2(imaginary,  real);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  RealMath.atan2(imaginary,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  RealMath.atan2(imaginary,  real);	  SimpleMath.log(abs()),    isNaN,    real);    	non-compiled	[CE]  not  a  statement	56	None	replace
147	[BUG]  [BUGGY]  SimpleMath.log(abs()),  isNaN,  imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  isNaN,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  isNaN,  imaginary);	  SimpleMath.log(abs()),    isNaN,    real);    	non-compiled	[CE]  not  a  statement	56	None	replace
148	[BUG]  [BUGGY]  SimpleMath.log(abs(),  real,  isNaN);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  real,  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  real,  isNaN);	  SimpleMath.log(abs()),    isNaN,    real);    	non-compiled	[CE]  not  a  statement	56	None	replace
149	[BUG]  [BUGGY]  return  Complex.NaN  &&  isInfinite;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN  &&  isInfinite;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN  &&  isInfinite;	  return    Complex.NaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	4	None	replace
150	[BUG]  [BUGGY]  return  Complex.NaN  ||  isNaN;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN  ||  isNaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN  ||  isNaN;	  return    Complex.NaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	4	None	replace
151	[BUG]  [BUGGY]  return  isInfinite  ||  Complex.NaN;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite  ||  Complex.NaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite  ||  Complex.NaN;	  return    Complex.NaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	4	None	replace
152	[BUG]  [BUGGY]  return  isNaN  ||  Complex.NaN;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  Complex.NaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  Complex.NaN;	  return    Complex.NaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	4	None	replace
153	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  denominator);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  denominator);	  Context.checkInfinite(isNaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	27	None	replace
154	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  divisor);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN,  divisor);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  divisor);	  Context.checkInfinite(isNaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	27	None	replace
155	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  isInfinite,  denominator);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN,  isInfinite,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  isInfinite,  denominator);	  Context.checkInfinite(isNaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	27	None	replace
156	[BUG]  [BUGGY]  return  isInfinite?  Complex.ZERO  :  INF.ZERO;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite?  Complex.ZERO  :  INF.ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  Complex.ZERO  :  INF.ZERO;	  return    isNaN?    Complex.ZERO    :    INF.ZERO;    	non-compiled	[CE]  not  a  statement	19	None	replace
157	[BUG]  [BUGGY]  return  isNaN?  Complex.ZERO  :  NaN.ZERO;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  Complex.ZERO  :  NaN.ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  Complex.ZERO  :  NaN.ZERO;	  return    isNaN?    Complex.ZERO    :    INF.ZERO;    	non-compiled	[CE]  not  a  statement	19	None	replace
158	[BUG]  [BUGGY]  return  isNaN?  Complex.ZERO  :  INF.ONE;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  Complex.ZERO  :  INF.ONE;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  Complex.ZERO  :  INF.ONE;	  return    isNaN?    Complex.ZERO    :    INF.ZERO;    	non-compiled	[CE]  not  a  statement	19	None	replace
159	[BUG]  [BUGGY]  SimpleMath.atan2(real,  imaginary));  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(real,  imaginary));  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(real,  imaginary));	  SimpleMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	12	None	replace
160	[BUG]  [BUGGY]  SimpleMath.atan2(imaginary,  real),  denominator);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(imaginary,  real),  denominator);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(imaginary,  real),  denominator);	  SimpleMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	12	None	replace
161	[BUG]  [BUGGY]  SimpleMath.atan2(imaginary,  imaginary));  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(imaginary,  imaginary));  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(imaginary,  imaginary));	  SimpleMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	12	None	replace
162	[BUG]  [BUGGY]  SimpleMath.atan2(real,  imagine));  [CE]  not  a  statement  [FE]                              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(real,  imagine));  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(real,  imagine));	  SimpleMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	12	None	replace
163	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  ||  isNaN);	  Parchet.checkState(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	101	None	replace
164	[BUG]  [BUGGY]  Parchet.checkState(isNaN  &&  isInfinite);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  &&  isInfinite);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  &&  isInfinite);	  Parchet.checkState(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	101	None	replace
165	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite,  denominator);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite,  denominator);	  Parchet.checkState(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	101	None	replace
166	[BUG]  [BUGGY]  return  Complex.NaN,  denominator);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  denominator);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  denominator);	  return    Complex.NaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	6	None	replace
167	[BUG]  [BUGGY]  return  Complex.NaN,  isNaN,  denominator);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  isNaN,  denominator);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isNaN,  denominator);	  return    Complex.NaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	6	None	replace
168	[BUG]  [BUGGY]  return  Complex.NaN,  isInfinite  &&  isNaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  isInfinite  &&  isNaN);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isInfinite  &&  isNaN);	  return    Complex.NaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	6	None	replace
169	[BUG]  [BUGGY]  return  Complex.NaN,  isNaN);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  isNaN);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isNaN);	  return    Complex.NaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	6	None	replace
170	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  INF;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  isNaN)  {  return  INF;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN)  {  return  INF;  }	  if(isNaN    ||    isInfinite)    {    return    INF;    }    	non-compiled	[CE]  not  a  statement	104	None	replace
171	[BUG]  [BUGGY]  Context.checkInfinite(true,  isNaN);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(true,  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(true,  isNaN);	  Context.checkInfinite(false,    isNaN);    	non-compiled	[CE]  not  a  statement	44	None	replace
172	[BUG]  [BUGGY]  Context.checkInfinite(false,  isNaN,  real);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false,  isNaN,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  isNaN,  real);	  Context.checkInfinite(false,    isNaN);    	non-compiled	[CE]  not  a  statement	44	None	replace
173	[BUG]  [BUGGY]  Context.checkInfinite(false,  isNaN,  imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false,  isNaN,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  isNaN,  imaginary);	  Context.checkInfinite(false,    isNaN);    	non-compiled	[CE]  not  a  statement	44	None	replace
174	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  this;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  isNaN)  {  return  this;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN)  {  return  this;  }	  if(isNaN    ||    isInfinite)    {    return    this;    }    	non-compiled	[CE]  not  a  statement	61	None	replace
175	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  null;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isNaN  ||  isInfinite)  {  return  null;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite)  {  return  null;  }	  if(isNaN    ||    isInfinite)    {    return    this;    }    	non-compiled	[CE]  not  a  statement	61	None	replace
176	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  null;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  isNaN)  {  return  null;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN)  {  return  null;  }	  if(isNaN    ||    isInfinite)    {    return    this;    }    	non-compiled	[CE]  not  a  statement	61	None	replace
177	[BUG]  [BUGGY]  While(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  While(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	While(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
178	[BUG]  [BUGGY]  Parchet.checkState(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
179	[BUG]  [BUGGY]  Parchet.checkState(isInfinite);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite);	  if(isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
180	[BUG]  [BUGGY]  Parchet.checkNotNull(real);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkNotNull(real);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkNotNull(real);	  if(isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
181	[BUG]  [BUGGY]  Complex  real  =  createInfinite(Imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createInfinite(Imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createInfinite(Imaginary);	  Complex    real    =    createComplex(Imaginary);    	non-compiled	[CE]  not  a  statement	66	None	replace
182	[BUG]  [BUGGY]  Complex  real  =  createComplex(Divisor);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(Divisor);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(Divisor);	  Complex    real    =    createComplex(Imaginary);    	non-compiled	[CE]  not  a  statement	66	None	replace
183	[BUG]  [BUGGY]  Complex  real  =  createComplex(Imaginary,  denominator);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(Imaginary,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(Imaginary,  denominator);	  Complex    real    =    createComplex(Imaginary);    	non-compiled	[CE]  not  a  statement	66	None	replace
184	[BUG]  [BUGGY]  Complex  real  =  createNaN(Imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createNaN(Imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createNaN(Imaginary);	  Complex    real    =    createComplex(Imaginary);    	non-compiled	[CE]  not  a  statement	66	None	replace
185	[BUG]  [BUGGY]  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
186	[BUG]  [BUGGY]  ||  divisor)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||  divisor)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||  divisor)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
187	[BUG]  [BUGGY]  ||  denominator)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||  denominator)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||  denominator)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
188	[BUG]  [BUGGY]  return  Complex.NaN  /  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN  /  1;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN  /  1;	  return    Complex.NaN    -    1;    	non-compiled	[CE]  not  a  statement	78	None	replace
189	[BUG]  [BUGGY]  return  Complex.NaN  -  2;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN  -  2;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN  -  2;	  return    Complex.NaN    -    1;    	non-compiled	[CE]  not  a  statement	78	None	replace
190	[BUG]  [BUGGY]  SimpleMath.log(abs(),  isNaN));  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  isNaN));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  isNaN));	  SimpleMath.log(isNaN));    	non-compiled	[CE]  not  a  statement	69	None	replace
191	[BUG]  [BUGGY]  SimpleMath.log(isInfinite));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite));	  SimpleMath.log(isNaN));    	non-compiled	[CE]  not  a  statement	69	None	replace
192	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.abs(real),  imaginary);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  Math.abs(real),  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.abs(real),  imaginary);	  SimpleMath.log(abs(),    Math.abs(imaginary),    imaginary);    	non-compiled	[CE]  not  a  statement	106	None	replace
193	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.abs(imaginary),  denominator);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  Math.abs(imaginary),  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.abs(imaginary),  denominator);	  SimpleMath.log(abs(),    Math.abs(imaginary),    imaginary);    	non-compiled	[CE]  not  a  statement	106	None	replace
194	[BUG]  [BUGGY]  return  isNaN  &&  isInfinite  +  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  &&  isInfinite  +  1;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  &&  isInfinite  +  1;	  return    isNaN    ||    isInfinite    +    1;    	non-compiled	[CE]  not  a  statement	94	None	replace
195	[BUG]  [BUGGY]  return  isInfinite  ||  isNaN  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite  ||  isNaN  +  1;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite  ||  isNaN  +  1;	  return    isNaN    ||    isInfinite    +    1;    	non-compiled	[CE]  not  a  statement	94	None	replace
196	[BUG]  [BUGGY]  return  isNaN  ||  isNaN  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  isNaN  +  1;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  isNaN  +  1;	  return    isNaN    ||    isInfinite    +    1;    	non-compiled	[CE]  not  a  statement	94	None	replace
197	[BUG]  [BUGGY]  return  isInfinite?  NaN  :  ONE;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite?  NaN  :  ONE;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  NaN  :  ONE;	  return    isNaN?    NaN    :    ZERO;    	non-compiled	[CE]  not  a  statement	15	None	replace
198	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	96	None	replace
199	[BUG]  [BUGGY]  Parchet.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	96	None	replace
200	[BUG]  [BUGGY]  Parchet.checkArgument(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkArgument(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkArgument(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	96	None	replace
201	[BUG]  [BUGGY]  Parchet.checkState(isNaN  &&  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  &&  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  &&  isInfinite)  {  throw  new  IllegalStateException( " ");  }	  Parchet.checkState(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	52	None	replace
202	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalStateException( " ");  }	  Parchet.checkState(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	52	None	replace
203	[BUG]  [BUGGY]  Context.checkInfinite(true,  null);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(true,  null);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(true,  null);	  Context.checkInfinite(false,    null);    	non-compiled	[CE]  not  a  statement	45	None	replace
204	[BUG]  [BUGGY]  Context.checkInfinite(false,  null,  real);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false,  null,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  null,  real);	  Context.checkInfinite(false,    null);    	non-compiled	[CE]  not  a  statement	45	None	replace
205	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  null);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN,  null);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  null);	  Context.checkInfinite(false,    null);    	non-compiled	[CE]  not  a  statement	45	None	replace
206	[BUG]  [BUGGY]  Context.checkInfinite(null,  false);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(null,  false);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(null,  false);	  Context.checkInfinite(false,    null);    	non-compiled	[CE]  not  a  statement	45	None	replace
207	[BUG]  [BUGGY]  return  isInfinite  &&  real;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite  &&  real;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite  &&  real;	  return    isInfinite    &&    isNaN;    	non-compiled	[CE]  not  a  statement	7	None	replace
208	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  divisor)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  isNaN  ||  divisor)  {  return  NaN;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN  ||  divisor)  {  return  NaN;  }	  if(isInfinite    ||    isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	47	None	replace
209	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  return  NaN;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isInfinite  ||  isNaN)  {  return  NaN;  }	  if(isInfinite    ||    isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	47	None	replace
210	[BUG]  [BUGGY]  FragmentFactory  factory  =  getFactory().getConstructor();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  FragmentFactory  factory  =  getFactory().getConstructor();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	FragmentFactory  factory  =  getFactory().getConstructor();	  FragmentFactory    factory    =    getFactory().getFactory();    	non-compiled	[CE]  not  a  statement	73	None	replace
211	[BUG]  [BUGGY]  FragmentFactory  factory  =  getFactory().getComplexFactory();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  FragmentFactory  factory  =  getFactory().getComplexFactory();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	FragmentFactory  factory  =  getFactory().getComplexFactory();	  FragmentFactory    factory    =    getFactory().getFactory();    	non-compiled	[CE]  not  a  statement	73	None	replace
212	[BUG]  [BUGGY]  FragmentFactory  factory  =  getFactory().getConfig().getFactory();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  FragmentFactory  factory  =  getFactory().getConfig().getFactory();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	FragmentFactory  factory  =  getFactory().getConfig().getFactory();	  FragmentFactory    factory    =    getFactory().getFactory();    	non-compiled	[CE]  not  a  statement	73	None	replace
213	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  &&  isInfinite)  {  throw  new  IllegalStateException( " ");  }	  Parchet.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
214	[BUG]  [BUGGY]  Parchet.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }	  Parchet.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
215	[BUG]  [BUGGY]  While(isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  While(isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	While(isInfinite)  {  throw  new  IllegalStateException( " ");  }	  if(isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
216	[BUG]  [BUGGY]  While(isNaN)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  While(isNaN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	While(isNaN)  {  throw  new  IllegalStateException( " ");  }	  if(isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
217	[BUG]  [BUGGY]  Parchet.checkState(isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite)  {  throw  new  IllegalStateException( " ");  }	  if(isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
218	[BUG]  [BUGGY]  Context.checkInfinite(real,  isNaN);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(real,  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(real,  isNaN);	  Context.checkInfinite(isNaN,    real);    	non-compiled	[CE]  not  a  statement	60	None	replace
219	[BUG]  [BUGGY]  Context.checkInfinite(imaginary,  isNaN);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(imaginary,  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(imaginary,  isNaN);	  Context.checkInfinite(isNaN,    real);    	non-compiled	[CE]  not  a  statement	60	None	replace
220	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  imaginary);	  Context.checkInfinite(isNaN,    real);    	non-compiled	[CE]  not  a  statement	60	None	replace
221	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  real,  imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN,  real,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  real,  imaginary);	  Context.checkInfinite(isNaN,    real);    	non-compiled	[CE]  not  a  statement	60	None	replace
222	[BUG]  [BUGGY]  Complex  real  =  createComplex(true);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(true);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(true);	  Complex    real    =    createComplex(false);    	non-compiled	[CE]  not  a  statement	31	None	replace
223	[BUG]  [BUGGY]  Complex  real  =  createInfinite(false);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createInfinite(false);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createInfinite(false);	  Complex    real    =    createComplex(false);    	non-compiled	[CE]  not  a  statement	31	None	replace
224	[BUG]  [BUGGY]  Complex  real  =  createNaN(false);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createNaN(false);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createNaN(false);	  Complex    real    =    createComplex(false);    	non-compiled	[CE]  not  a  statement	31	None	replace
225	[BUG]  [BUGGY]  SimpleMath.log(abs()),  INF,  NaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  INF,  NaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  INF,  NaN);	  SimpleMath.log(abs()),    NaN);    	non-compiled	[CE]  not  a  statement	63	None	replace
226	[BUG]  [BUGGY]  SimpleMath.log(abs()),  ZERO);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  ZERO);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  ZERO);	  SimpleMath.log(abs()),    NaN);    	non-compiled	[CE]  not  a  statement	63	None	replace
227	[BUG]  [BUGGY]  SimpleMath.log(abs()),  imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  imaginary);	  SimpleMath.log(abs()),    real);    	non-compiled	[CE]  not  a  statement	30	None	replace
228	[BUG]  [BUGGY]  SimpleMath.log(abs()),  RealMath.atan2(imaginary,  real));  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  RealMath.atan2(imaginary,  real));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  RealMath.atan2(imaginary,  real));	  SimpleMath.log(abs()),    real);    	non-compiled	[CE]  not  a  statement	30	None	replace
229	[BUG]  [BUGGY]  SimpleMath.log(abs()),  imaginary,  real);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  imaginary,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  imaginary,  real);	  SimpleMath.log(abs()),    real);    	non-compiled	[CE]  not  a  statement	30	None	replace
230	[BUG]  [BUGGY]  Context.checkInfinite(true,  imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(true,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(true,  imaginary);	  Context.checkInfinite(false,    imaginary);    	non-compiled	[CE]  not  a  statement	74	None	replace
231	[BUG]  [BUGGY]  Context.checkInfinite(false,  real);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  real);	  Context.checkInfinite(false,    imaginary);    	non-compiled	[CE]  not  a  statement	74	None	replace
232	[BUG]  [BUGGY]  Context.checkInfinite(false,  imaginary,  real);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false,  imaginary,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  imaginary,  real);	  Context.checkInfinite(false,    imaginary);    	non-compiled	[CE]  not  a  statement	74	None	replace
233	[BUG]  [BUGGY]  Context.checkInfinite(false,  imaginary,  denominator);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false,  imaginary,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  imaginary,  denominator);	  Context.checkInfinite(false,    imaginary);    	non-compiled	[CE]  not  a  statement	74	None	replace
234	[BUG]  [BUGGY]  Complex  real  =  createComplex(true,  null);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(true,  null);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(true,  null);	  Complex    real    =    createComplex(false,    null);    	non-compiled	[CE]  not  a  statement	34	None	replace
235	[BUG]  [BUGGY]  return  isNaN  &&  isInfinite  ||  divisor;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  &&  isInfinite  ||  divisor;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  &&  isInfinite  ||  divisor;	  return    isNaN    ||    isInfinite    ||    divisor;    	non-compiled	[CE]  not  a  statement	23	None	replace
236	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite  &&  divisor;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  isInfinite  &&  divisor;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  isInfinite  &&  divisor;	  return    isNaN    ||    isInfinite    ||    divisor;    	non-compiled	[CE]  not  a  statement	23	None	replace
237	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite  ||  denominator;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  isInfinite  ||  denominator;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  isInfinite  ||  denominator;	  return    isNaN    ||    isInfinite    ||    divisor;    	non-compiled	[CE]  not  a  statement	23	None	replace
238	[BUG]  [BUGGY]  return  isNaN  ||  divisor  ||  isInfinite;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  divisor  ||  isInfinite;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  divisor  ||  isInfinite;	  return    isNaN    ||    isInfinite    ||    divisor;    	non-compiled	[CE]  not  a  statement	23	None	replace
239	[BUG]  [BUGGY]  Complex  real  =  getInfinite();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getInfinite();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getInfinite();	  Complex    real    =    getINF();    	non-compiled	[CE]  not  a  statement	54	None	replace
240	[BUG]  [BUGGY]  Complex  real  =  getDestinator();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getDestinator();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDestinator();	  Complex    real    =    getDenominator();    	non-compiled	[CE]  not  a  statement	55	None	replace
241	[BUG]  [BUGGY]  Complex  real  =  getDenominator(),  isNaN);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getDenominator(),  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDenominator(),  isNaN);	  Complex    real    =    getDenominator();    	non-compiled	[CE]  not  a  statement	55	None	replace
242	[BUG]  [BUGGY]  return  isNaN  &&  divisor;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  &&  divisor;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  &&  divisor;	  return    isNaN    ||    divisor;    	non-compiled	[CE]  not  a  statement	24	None	replace
243	[BUG]  [BUGGY]  return  isNaN  ||  denominator;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  denominator;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  denominator;	  return    isNaN    ||    divisor;    	non-compiled	[CE]  not  a  statement	24	None	replace
244	[BUG]  [BUGGY]  return  isInfinite  ||  divisor;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite  ||  divisor;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite  ||  divisor;	  return    isNaN    ||    divisor;    	non-compiled	[CE]  not  a  statement	24	None	replace
245	[BUG]  [BUGGY]  return  isNaN  ||  divisor.denominator;  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  divisor.denominator;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  divisor.denominator;	  return    isNaN    ||    divisor;    	non-compiled	[CE]  not  a  statement	24	None	replace
246	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  &&  isInfinite);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN  &&  isInfinite);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  &&  isInfinite);	  Context.checkInfinite(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	25	None	replace
247	[BUG]  [BUGGY]  Context.checkInfinite(isInfinite  ||  isNaN);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isInfinite  ||  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isInfinite  ||  isNaN);	  Context.checkInfinite(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	25	None	replace
248	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite,  denominator);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  ||  isInfinite,  denominator);	  Context.checkInfinite(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	25	None	replace
249	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  &&  isInfinite)]  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN  &&  isInfinite)]  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  &&  isInfinite)]  throw  new  IllegalArgumentException( " ");	  Parchet.checkInfinite(isNaN    ||    isInfinite)]    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	97	None	replace
250	[BUG]  [BUGGY]  Parchet.checkInfinite(isInfinite  ||  isNaN)]  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isInfinite  ||  isNaN)]  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isInfinite  ||  isNaN)]  throw  new  IllegalArgumentException( " ");	  Parchet.checkInfinite(isNaN    ||    isInfinite)]    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	97	None	replace
251	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".);  }	  Parchet.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	40	None	replace
252	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ".);  }	  Parchet.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	40	None	replace
253	[BUG]  [BUGGY]  return  isNaN  &&  imaginary;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  &&  imaginary;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  &&  imaginary;	  return    isNaN    ||    imaginary;    	non-compiled	[CE]  not  a  statement	79	None	replace
254	[BUG]  [BUGGY]  return  isInfinite  ||  imaginary;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite  ||  imaginary;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite  ||  imaginary;	  return    isNaN    ||    imaginary;    	non-compiled	[CE]  not  a  statement	79	None	replace
255	[BUG]  [BUGGY]  SimpleMath.info(abs(),  real));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.info(abs(),  real));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.info(abs(),  real));	  SimpleMath.info(abs()));    	non-compiled	[CE]  not  a  statement	29	None	replace
256	[BUG]  [BUGGY]  SimpleMath.info(abs(),  imaginary));  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.info(abs(),  imaginary));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.info(abs(),  imaginary));	  SimpleMath.info(abs()));    	non-compiled	[CE]  not  a  statement	29	None	replace
257	[BUG]  [BUGGY]  SimpleMath.info(isNaN));  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.info(isNaN));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.info(isNaN));	  SimpleMath.info(abs()));    	non-compiled	[CE]  not  a  statement	29	None	replace
258	[BUG]  [BUGGY]  SimpleMath.info(false));  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.info(false));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.info(false));	  SimpleMath.info(abs()));    	non-compiled	[CE]  not  a  statement	29	None	replace
259	[BUG]  [BUGGY]  SimpleMath.log(abs(),  real,  imaginary,  denominator);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  real,  imaginary,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  real,  imaginary,  denominator);	  SimpleMath.log(abs(),    real,    imaginary);    	non-compiled	[CE]  not  a  statement	36	None	replace
260	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.abs(imaginary),  real,  denominator);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  Math.abs(imaginary),  real,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.abs(imaginary),  real,  denominator);	  SimpleMath.log(abs(),    Math.abs(imaginary),    real);    	non-compiled	[CE]  not  a  statement	3	None	replace
261	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.abs(imaginary)/  2,  real);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  Math.abs(imaginary)/  2,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.abs(imaginary)/  2,  real);	  SimpleMath.log(abs(),    Math.abs(imaginary),    real);    	non-compiled	[CE]  not  a  statement	3	None	replace
262	[BUG]  [BUGGY]  SimpleMath.log(isNaN,  imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN,  imaginary);	  SimpleMath.log(isNaN,    real);    	non-compiled	[CE]  not  a  statement	105	None	replace
263	[BUG]  [BUGGY]  SimpleMath.log(isInfinite,  real);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite,  real);	  SimpleMath.log(isNaN,    real);    	non-compiled	[CE]  not  a  statement	105	None	replace
264	[BUG]  [BUGGY]  SimpleMath.log(real,  isNaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(real,  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(real,  isNaN);	  SimpleMath.log(isNaN,    real);    	non-compiled	[CE]  not  a  statement	105	None	replace
265	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  Complex.ONE;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  isNaN)  {  return  Complex.ONE;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN)  {  return  Complex.ONE;  }	  if(isNaN    ||    isInfinite)    {    return    Complex.ONE;    }    	non-compiled	[CE]  not  a  statement	62	None	replace
266	[BUG]  [BUGGY]  If(isInfinite  ||  isNaN)  {  return  Complex.ONE;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  If(isInfinite  ||  isNaN)  {  return  Complex.ONE;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isInfinite  ||  isNaN)  {  return  Complex.ONE;  }	  if(isNaN    ||    isInfinite)    {    return    Complex.ONE;    }    	non-compiled	[CE]  not  a  statement	62	None	replace
267	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ".);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalStateException( " ".);  }	  Context.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
268	[BUG]  [BUGGY]  Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ".);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalStateException( " ".);  }	  Context.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
269	[BUG]  [BUGGY]  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||  isNaN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||  isNaN)  {  throw  new  IllegalStateException( " ");  }	  ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	51	None	replace
270	[BUG]  [BUGGY]  ||  divisor)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||  divisor)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||  divisor)  {  throw  new  IllegalStateException( " ");  }	  ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	51	None	replace
271	[BUG]  [BUGGY]  ||  isInfinite)  {  throw  new  IllegalStateException( " ".);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||  isInfinite)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||  isInfinite)  {  throw  new  IllegalStateException( " ".);  }	  ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	51	None	replace
272	[BUG]  [BUGGY]  SimpleMath.info(abs(),  Math.abs(imaginary));  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.info(abs(),  Math.abs(imaginary));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.info(abs(),  Math.abs(imaginary));	  SimpleMath.log(abs(),    Math.abs(real));    	non-compiled	[CE]  not  a  statement	1	None	replace
273	[BUG]  [BUGGY]  SimpleMath.atan2(abs(),  Math.abs(imaginary));  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(abs(),  Math.abs(imaginary));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(abs(),  Math.abs(imaginary));	  SimpleMath.log(abs(),    Math.abs(real));    	non-compiled	[CE]  not  a  statement	1	None	replace
274	[BUG]  [BUGGY]  return  isNaN  ||  real.isInfinite();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  real.isInfinite();  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  real.isInfinite();	  return    isNaN    ||    real;    	non-compiled	[CE]  not  a  statement	81	None	replace
275	[BUG]  [BUGGY]  return  isNaN  ||  real.denominator;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  real.denominator;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  real.denominator;	  return    isNaN    ||    real;    	non-compiled	[CE]  not  a  statement	81	None	replace
276	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imagination));  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imagination));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imagination));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    imaginary));    }    	non-compiled	[CE]  not  a  statement	76	None	replace
277	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginative));  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginative));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginative));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    imaginary));    }    	non-compiled	[CE]  not  a  statement	76	None	replace
278	[BUG]  [BUGGY]  SimpleMath.log(isNaN),  NaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN),  NaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN),  NaN);	  SimpleMath.log(abs()),    NaN);    	non-compiled	[CE]  not  a  statement	63	None	replace
279	[BUG]  [BUGGY]  SimpleMath.log(isNaN()),  NaN);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN()),  NaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN()),  NaN);	  SimpleMath.log(abs()),    NaN);    	non-compiled	[CE]  not  a  statement	63	None	replace
280	[BUG]  [BUGGY]  SimpleMath.log(abs()),  INF);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  INF);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  INF);	  SimpleMath.log(abs()),    NaN);    	non-compiled	[CE]  not  a  statement	63	None	replace
281	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  null,  INF,  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  null,  INF,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  null,  INF,  imaginary);	  Complex    real    =    createComplex(null,    null,    INF);    	non-compiled	[CE]  not  a  statement	91	None	replace
282	[BUG]  [BUGGY]  return  isNaN?  NaN  :  0;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  NaN  :  0;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  0;	  return    isNaN?    NaN    :    1;    	non-compiled	[CE]  not  a  statement	16	None	replace
283	[BUG]  [BUGGY]  Complex  real  =  createNaN(imaginary);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createNaN(imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createNaN(imaginary);	  Complex    real    =    createComplex(imaginary);    	non-compiled	[CE]  not  a  statement	65	None	replace
284	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  denominator);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(imaginary,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(imaginary,  denominator);	  Complex    real    =    createComplex(imaginary);    	non-compiled	[CE]  not  a  statement	65	None	replace
285	[BUG]  [BUGGY]  Parchet.checkNotNull(imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkNotNull(imaginary);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkNotNull(imaginary);	  if(isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
286	[BUG]  [BUGGY]  FragmentFactory  factory  =  FastMath.getFactory();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  FragmentFactory  factory  =  FastMath.getFactory();  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	FragmentFactory  factory  =  FastMath.getFactory();	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    real));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
287	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    real));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
288	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  return  createComplex(FastMath.atan2(real,  imaginary));  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN)  {  return  createComplex(FastMath.atan2(real,  imaginary));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  ||  isNaN)  {  return  createComplex(FastMath.atan2(real,  imaginary));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    real));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
289	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  null,  isNaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(imaginary,  null,  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(imaginary,  null,  isNaN);	  Complex    real    =    createComplex(imaginary,    null);    	non-compiled	[CE]  not  a  statement	68	None	replace
290	[BUG]  [BUGGY]  SimpleMath.log(abs(),  RealMath.atan1(imaginary,  real));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  RealMath.atan1(imaginary,  real));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  RealMath.atan1(imaginary,  real));	  SimpleMath.log(abs(),    RealMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	38	None	replace
291	[BUG]  [BUGGY]  SimpleMath.log(abb(),  Math.abs(imaginary));  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abb(),  Math.abs(imaginary));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abb(),  Math.abs(imaginary));	  SimpleMath.log(abs(),    Math.abs(real));    	non-compiled	[CE]  not  a  statement	1	None	replace
292	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  createComplex(true);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isNaN  ||  isInfinite)  {  return  createComplex(true);  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite)  {  return  createComplex(true);  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(false);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
293	[BUG]  [BUGGY]  return  createComplex(FastMath.atan2(real,  imaginary));  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  createComplex(FastMath.atan2(real,  imaginary));  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  createComplex(FastMath.atan2(real,  imaginary));	  return    createComplex(FastMath.atan2(imaginary,    imaginary));    	non-compiled	[CE]  not  a  statement	93	None	replace
294	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  &&  isInfinite);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN  &&  isInfinite);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  &&  isInfinite);	  Parchet.checkInfinite(isNaN);    	non-compiled	[CE]  not  a  statement	98	None	replace
295	[BUG]  [BUGGY]  return  Complex.NaN,  isNaN  +  1);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  isNaN  +  1);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isNaN  +  1);	  return    Complex.NaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	6	None	replace
296	[BUG]  [BUGGY]  return  Complex.NaN,  isNaN  -  1);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  isNaN  -  1);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isNaN  -  1);	  return    Complex.NaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	6	None	replace
297	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite,  imaginary);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  ||  isInfinite,  imaginary);	  Context.checkInfinite(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	25	None	replace
298	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite,  real);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  ||  isInfinite,  real);	  Context.checkInfinite(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	25	None	replace
299	[BUG]  [BUGGY]  return  isNaN  ||  real.infinite;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  real.infinite;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  real.infinite;	  return    isNaN    ||    real;    	non-compiled	[CE]  not  a  statement	81	None	replace
300	[BUG]  [BUGGY]  return  real  ||  isNaN;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  real  ||  isNaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  real  ||  isNaN;	  return    isNaN    ||    real;    	non-compiled	[CE]  not  a  statement	81	None	replace
301	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite  ||  imaginary;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  isInfinite  ||  imaginary;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  isInfinite  ||  imaginary;	  return    isNaN    ||    isInfinite    ||    divisor;    	non-compiled	[CE]  not  a  statement	23	None	replace
302	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite  ||  factor;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  isInfinite  ||  factor;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  isInfinite  ||  factor;	  return    isNaN    ||    isInfinite    ||    divisor;    	non-compiled	[CE]  not  a  statement	23	None	replace
303	[BUG]  [BUGGY]  if(isInfinite  &&  isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  &&  isNaN)  {  return  NaN;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  &&  isNaN)  {  return  NaN;  }	  if(isInfinite    ||    isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	47	None	replace
304	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  imaginary)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  isNaN  ||  imaginary)  {  return  NaN;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN  ||  imaginary)  {  return  NaN;  }	  if(isInfinite    ||    isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	47	None	replace
305	[BUG]  [BUGGY]  return  isNaN?  NaN  :  INF.createComplex(real);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  NaN  :  INF.createComplex(real);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  INF.createComplex(real);	  return    isNaN?    NaN    :    INF.log();    	non-compiled	[CE]  not  a  statement	89	None	replace
306	[BUG]  [BUGGY]  return  isNaN?  NaN  :  INF.log(real);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  NaN  :  INF.log(real);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  INF.log(real);	  return    isNaN?    NaN    :    INF.log();    	non-compiled	[CE]  not  a  statement	89	None	replace
307	[BUG]  [BUGGY]  return  Complex.NaN,  isNaN  +  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  isNaN  +  1;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isNaN  +  1;	  return    Complex.NaN,    isInfinite;    	non-compiled	[CE]  not  a  statement	5	None	replace
308	[BUG]  [BUGGY]  return  Complex.NaN,  isNaN  -  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  isNaN  -  1;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isNaN  -  1;	  return    Complex.NaN,    isInfinite;    	non-compiled	[CE]  not  a  statement	5	None	replace
309	[BUG]  [BUGGY]  SimpleMath.log(isNaN),  real);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN),  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN),  real);	  SimpleMath.log(abs()),    real);    	non-compiled	[CE]  not  a  statement	30	None	replace
310	[BUG]  [BUGGY]  SimpleMath.atan1(imaginary,  real));  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan1(imaginary,  real));  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan1(imaginary,  real));	  SimpleMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	12	None	replace
311	[BUG]  [BUGGY]  SimpleMath.atan2(imaginary,  real),  ZERO);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(imaginary,  real),  ZERO);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(imaginary,  real),  ZERO);	  SimpleMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	12	None	replace
312	[BUG]  [BUGGY]  return  Complex.NaN  ||  imaginary;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN  ||  imaginary;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN  ||  imaginary;	  return    Complex.NaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	4	None	replace
313	[BUG]  [BUGGY]  Context.checkInfinite(naN);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(naN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(naN);	  Context.checkInfinite(isInfinite);    	non-compiled	[CE]  not  a  statement	26	None	replace
314	[BUG]  [BUGGY]  Context.checkInfinite(real,  imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(real,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(real,  imaginary);	  Context.checkInfinite(false,    imaginary);    	non-compiled	[CE]  not  a  statement	74	None	replace
315	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)&&  throw  new  IllegalArgumentException( " ".);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)&&  throw  new  IllegalArgumentException( " ".);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  ||  isInfinite)&&  throw  new  IllegalArgumentException( " ".);	  Parchet.checkInfinite(isNaN    ||    isInfinite)&&    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	99	None	replace
316	[BUG]  [BUGGY]  ||  isNaN)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||  isNaN)  {  return  Complex.ZERO;  }	  if(isNaN    &&    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	83	None	replace
317	[BUG]  [BUGGY]  SimpleMath.log(abs()),  real,  illusion);  [CE]  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs()),  real,  illusion);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs()),  real,  illusion);	  SimpleMath.log(abs()),    real,    isNaN);    	non-compiled	[CE]  	13	None	replace
318	[BUG]  [BUGGY]  Complex  real  =  createComplex(Imaginary,  ZERO);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(Imaginary,  ZERO);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(Imaginary,  ZERO);	  Complex    real    =    createComplex(Imaginary);    	non-compiled	[CE]  not  a  statement	66	None	replace
319	[BUG]  [BUGGY]  Complex  real  =  createComplex(Imaginary,  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(Imaginary,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(Imaginary,  imaginary);	  Complex    real    =    createComplex(Imaginary);    	non-compiled	[CE]  not  a  statement	66	None	replace
320	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  false);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  false);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  false);	  Complex    real    =    createComplex(false,    null);    	non-compiled	[CE]  not  a  statement	34	None	replace
321	[BUG]  [BUGGY]  ||!isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||!isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||!isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
322	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Complex.ONE;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  NaN  :  Complex.ONE;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  Complex.ONE;	  return    isNaN?    NaN    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	17	None	replace
323	[BUG]  [BUGGY]  ||!isNaN)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||!isNaN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||!isNaN)  {  throw  new  IllegalStateException( " ");  }	  ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	51	None	replace
324	[BUG]  [BUGGY]  ||!isInfinite)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||!isInfinite)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||!isInfinite)  {  throw  new  IllegalStateException( " ");  }	  ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	51	None	replace
325	[BUG]  [BUGGY]  SimpleMath.atan1(abs()));  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan1(abs()));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan1(abs()));	  SimpleMath.atan2(abs()));    	non-compiled	[CE]  not  a  statement	28	None	replace
326	[BUG]  [BUGGY]  SimpleMath.atan2(imaginary));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(imaginary));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(imaginary));	  SimpleMath.atan2(abs()));    	non-compiled	[CE]  not  a  statement	28	None	replace
327	[BUG]  [BUGGY]  SimpleMath.atan(abs()));  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan(abs()));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan(abs()));	  SimpleMath.atan2(abs()));    	non-compiled	[CE]  not  a  statement	28	None	replace
328	[BUG]  [BUGGY]  SimpleMath.log(abs(),  FastMath.atan1(imaginary,  real));  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  FastMath.atan1(imaginary,  real));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  FastMath.atan1(imaginary,  real));	  SimpleMath.log(abs(),    FastMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	2	None	replace
329	[BUG]  [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real),  denominator);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real),  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real),  denominator);	  SimpleMath.log(abs(),    FastMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	2	None	replace
330	[BUG]  [BUGGY]  return  Complex.NaN  -  1L;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN  -  1L;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN  -  1L;	  return    Complex.NaN    -    1;    	non-compiled	[CE]  not  a  statement	78	None	replace
331	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  INF,  imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  INF,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  INF,  imaginary);	  Complex    real    =    createComplex(null,    INF);    	non-compiled	[CE]  not  a  statement	108	None	replace
332	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  INF);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(imaginary,  INF);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(imaginary,  INF);	  Complex    real    =    createComplex(null,    INF);    	non-compiled	[CE]  not  a  statement	108	None	replace
333	[BUG]  [BUGGY]  return  isNaN?  Infinite.ZERO  :  NaN;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  Infinite.ZERO  :  NaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  Infinite.ZERO  :  NaN;	  return    isInfinite?    NaN    :    Infinite.ZERO;    	non-compiled	[CE]  not  a  statement	102	None	replace
334	[BUG]  [BUGGY]  SimpleMath.log(isInfinite),  isNaN  +  1);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite),  isNaN  +  1);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite),  isNaN  +  1);	  SimpleMath.log(isInfinite),    isNaN);    	non-compiled	[CE]  not  a  statement	64	None	replace
335	[BUG]  [BUGGY]  SimpleMath.log(isInfinite),  ZERO);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite),  ZERO);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite),  ZERO);	  SimpleMath.log(isInfinite),    isNaN);    	non-compiled	[CE]  not  a  statement	64	None	replace
336	[BUG]  [BUGGY]  SimpleMath.log(isInfinite),  isNaN  +  1;  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite),  isNaN  +  1;  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite),  isNaN  +  1;	  SimpleMath.log(isInfinite),    isNaN);    	non-compiled	[CE]  not  a  statement	64	None	replace
337	[BUG]  [BUGGY]  Context.checkInfinite(false,  null,  imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false,  null,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  null,  imaginary);	  Context.checkInfinite(false,    null);    	non-compiled	[CE]  not  a  statement	45	None	replace
338	[BUG]  [BUGGY]  if(isNaN  &&  isInfinite)  {  return  INF;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isNaN  &&  isInfinite)  {  return  INF;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  &&  isInfinite)  {  return  INF;  }	  if(isNaN    ||    isInfinite)    {    return    INF;    }    	non-compiled	[CE]  not  a  statement	104	None	replace
339	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(imaginary,  imaginary);	  Complex    real    =    createComplex(null,    imaginary);    	non-compiled	[CE]  not  a  statement	67	None	replace
340	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(real,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(real,  imaginary);	  Complex    real    =    createComplex(null,    imaginary);    	non-compiled	[CE]  not  a  statement	67	None	replace
341	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite  +  1L;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  isInfinite  +  1L;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  isInfinite  +  1L;	  return    isNaN    ||    isInfinite    +    1;    	non-compiled	[CE]  not  a  statement	94	None	replace
342	[BUG]  [BUGGY]  Context.checkInfinite(imaginary,  infinite);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(imaginary,  infinite);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(imaginary,  infinite);	  Context.checkInfinite(infinite);    	non-compiled	[CE]  not  a  statement	90	None	replace
343	[BUG]  [BUGGY]  Context.checkInfinite(real,  infinite);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(real,  infinite);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(real,  infinite);	  Context.checkInfinite(infinite);    	non-compiled	[CE]  not  a  statement	90	None	replace
344	[BUG]  [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite,  imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN  ||  isInfinite,  imaginary);	  SimpleMath.log(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	111	None	replace
345	[BUG]  [BUGGY]  SimpleMath.log(isInfinite)&&  ZERO);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite)&&  ZERO);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite)&&  ZERO);	  SimpleMath.log(isInfinite)&&    isNaN);    	non-compiled	[CE]  not  a  statement	109	None	replace
346	[BUG]  [BUGGY]  SimpleMath.log(isInfinite)&&  real);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite)&&  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite)&&  real);	  SimpleMath.log(isInfinite)&&    isNaN);    	non-compiled	[CE]  not  a  statement	109	None	replace
347	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite,  imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite,  imaginary);	  Parchet.checkState(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	101	None	replace
348	[BUG]  [BUGGY]  Complex  real  =  getDivisor(imaginary);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getDivisor(imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDivisor(imaginary);	  Complex    real    =    getDivisor();    	non-compiled	[CE]  not  a  statement	53	None	replace
349	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Real);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  Real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Real);	  SimpleMath.log(abs(),    imaginary);    	non-compiled	[CE]  not  a  statement	37	None	replace
350	[BUG]  [BUGGY]  return(isNaN  ||  isInfinite);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return(isNaN  ||  isInfinite);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return(isNaN  ||  isInfinite);	  return    this.isInfinite;    	non-compiled	[CE]  not  a  statement	85	None	replace
351	[BUG]  [BUGGY]  If(isInfinite  ||  isNaN  ||  imaginary)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  If(isInfinite  ||  isNaN  ||  imaginary)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isInfinite  ||  isNaN  ||  imaginary)  {  return  Complex.ZERO;  }	  If(isInfinite    ||    isNaN)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
352	[BUG]  [BUGGY]  Context.checkNotInfinite(imaginary);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkNotInfinite(imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkNotInfinite(imaginary);	  Context.checkInfinite(real);    	non-compiled	[CE]  not  a  statement	59	None	replace
353	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  null,  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(imaginary,  null,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(imaginary,  null,  imaginary);	  Complex    real    =    createComplex(null,    null,    imaginary);    	non-compiled	[CE]  not  a  statement	88	None	replace
354	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  imaginary,  null);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  imaginary,  null);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  imaginary,  null);	  Complex    real    =    createComplex(null,    null,    imaginary);    	non-compiled	[CE]  not  a  statement	88	None	replace
355	[BUG]  [BUGGY]  If(isInfinite  ||  isNaN)  {  return  this;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  If(isInfinite  ||  isNaN)  {  return  this;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isInfinite  ||  isNaN)  {  return  this;  }	  If(isInfinite    ||    isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	48	None	replace
356	[BUG]  [BUGGY]  If(isInfinite  ||  isNaN  ||  imaginary)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  If(isInfinite  ||  isNaN  ||  imaginary)  {  return  NaN;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	If(isInfinite  ||  isNaN  ||  imaginary)  {  return  NaN;  }	  If(isInfinite    ||    isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	48	None	replace
357	[BUG]  [BUGGY]  SimpleMath.log(isNaN),  NaN  +  1);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN),  NaN  +  1);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN),  NaN  +  1);	  SimpleMath.log(abs()),    isNaN    +    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
358	[BUG]  [BUGGY]  Context.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  Context.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
359	[BUG]  [BUGGY]  Context.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isInfinite  &&  isNaN)  {  throw  new  IllegalStateException( " ");  }	  Context.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
360	[BUG]  [BUGGY]  return  isNaN  ||  imaginary  =  Complex.ZERO;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  imaginary  =  Complex.ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  imaginary  =  Complex.ZERO;	  return    isNaN    ||    imaginary;    	non-compiled	[CE]  not  a  statement	79	None	replace
361	[BUG]  [BUGGY]  SimpleMath.atan2(imaginary,  isNaN));  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(imaginary,  isNaN));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(imaginary,  isNaN));	  SimpleMath.log(isNaN));    	non-compiled	[CE]  not  a  statement	69	None	replace
362	[BUG]  [BUGGY]  SimpleMath.log(false));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(false));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(false));	  SimpleMath.log(isNaN));    	non-compiled	[CE]  not  a  statement	69	None	replace
363	[BUG]  [BUGGY]  return(isNaN  ||  isInfinite)?  this  :  Complex.ZERO;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return(isNaN  ||  isInfinite)?  this  :  Complex.ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return(isNaN  ||  isInfinite)?  this  :  Complex.ZERO;	  return    this.isNaN;    	non-compiled	[CE]  not  a  statement	87	None	replace
364	[BUG]  [BUGGY]  return  this.isNaN  &&  isInfinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  this.isNaN  &&  isInfinite;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  this.isNaN  &&  isInfinite;	  return    this.isNaN;    	non-compiled	[CE]  not  a  statement	87	None	replace
365	[BUG]  [BUGGY]  return  this.isNaN  ||  this.isInfinite;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  this.isNaN  ||  this.isInfinite;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  this.isNaN  ||  this.isInfinite;	  return    this.isNaN;    	non-compiled	[CE]  not  a  statement	87	None	replace
366	[BUG]  [BUGGY]  Complex  real  =  getDenominator(imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getDenominator(imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDenominator(imaginary);	  Complex    real    =    getDenominator();    	non-compiled	[CE]  not  a  statement	55	None	replace
367	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)],  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)],  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  ||  isInfinite)],  throw  new  IllegalArgumentException( " ");	  Parchet.checkInfinite(isNaN    ||    isInfinite)]    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	97	None	replace
368	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite):  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite):  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  ||  isInfinite):  throw  new  IllegalArgumentException( " ");	  Parchet.checkInfinite(isNaN    ||    isInfinite)]    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	97	None	replace
369	[BUG]  [BUGGY]  Context.checkContent(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkContent(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkContent(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  Context.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	84	None	replace
370	[BUG]  [BUGGY]  return  isNaN  ||  NaN;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  NaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  NaN;	  return    isNaN    ||    ZERO;    	non-compiled	[CE]  not  a  statement	80	None	replace
371	[BUG]  [BUGGY]  Context.checkInfinite(false, "NaN ");  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false, "NaN ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false, "NaN ");	  Context.checkInfinite(true);    	non-compiled	[CE]  not  a  statement	43	None	replace
372	[BUG]  [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite),  ZERO);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN  ||  isInfinite),  ZERO);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN  ||  isInfinite),  ZERO);	  SimpleMath.log(isNaN    ||    isInfinite));    	non-compiled	[CE]  not  a  statement	110	None	replace
373	[BUG]  [BUGGY]  if(isNaN  &&  isInfinite)  {  return  Complex.ONE;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isNaN  &&  isInfinite)  {  return  Complex.ONE;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  &&  isInfinite)  {  return  Complex.ONE;  }	  if(isNaN    ||    isInfinite)    {    return    Complex.ONE;    }    	non-compiled	[CE]  not  a  statement	62	None	replace
374	[BUG]  [BUGGY]  SimpleMath.log(imaginary,  real);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(imaginary,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(imaginary,  real);	  SimpleMath.log(isNaN,    real);    	non-compiled	[CE]  not  a  statement	105	None	replace
375	[BUG]  [BUGGY]  SimpleMath.log(info,  real);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(info,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(info,  real);	  SimpleMath.log(isNaN,    real);    	non-compiled	[CE]  not  a  statement	105	None	replace
376	[BUG]  [BUGGY]  Context.checkInfinite(false,  NaN.valueOf(imaginary));  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false,  NaN.valueOf(imaginary));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  NaN.valueOf(imaginary));	  Context.checkInfinite(false,    isNaN);    	non-compiled	[CE]  not  a  statement	44	None	replace
377	[BUG]  [BUGGY]  Complex  real  =  createNaN(divisor);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createNaN(divisor);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createNaN(divisor);	  Complex    real    =    createComplex(divisor);    	non-compiled	[CE]  not  a  statement	32	None	replace
378	[BUG]  [BUGGY]  Complex  real  =  createInfinite(divisor);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createInfinite(divisor);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createInfinite(divisor);	  Complex    real    =    createComplex(divisor);    	non-compiled	[CE]  not  a  statement	32	None	replace
379	[BUG]  [BUGGY]  Complex  real  =  createImaginary(divisor);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createImaginary(divisor);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createImaginary(divisor);	  Complex    real    =    createComplex(divisor);    	non-compiled	[CE]  not  a  statement	32	None	replace
380	[BUG]  [BUGGY]  FragmentFactory  factory  =  getFactory().getInfiniteFactory();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  FragmentFactory  factory  =  getFactory().getInfiniteFactory();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	FragmentFactory  factory  =  getFactory().getInfiniteFactory();	  FragmentFactory    factory    =    getFactory().getFactory();    	non-compiled	[CE]  not  a  statement	73	None	replace
381	[BUG]  [BUGGY]  FragmentFactory  factory  =  getFactory().getFactory(real);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  FragmentFactory  factory  =  getFactory().getFactory(real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	FragmentFactory  factory  =  getFactory().getFactory(real);	  FragmentFactory    factory    =    getFactory().getFactory();    	non-compiled	[CE]  not  a  statement	73	None	replace
382	[BUG]  [BUGGY]  if(isNaN  ||  imaginary  ||  isInfinite)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isNaN  ||  imaginary  ||  isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  imaginary  ||  isInfinite)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite    ||    imaginary)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
383	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite  &&  imaginary)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isNaN  ||  isInfinite  &&  imaginary)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite  &&  imaginary)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite    ||    imaginary)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
384	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite  ||  imaginary)  {  return  this;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isNaN  ||  isInfinite  ||  imaginary)  {  return  this;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite  ||  imaginary)  {  return  this;  }	  if(isNaN    ||    isInfinite)    {    return    this;    }    	non-compiled	[CE]  not  a  statement	61	None	replace
385	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite  ||  factor)  {  return  INF;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isNaN  ||  isInfinite  ||  factor)  {  return  INF;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite  ||  factor)  {  return  INF;  }	  if(isNaN    ||    isInfinite)    {    return    INF;    }    	non-compiled	[CE]  not  a  statement	104	None	replace
386	[BUG]  [BUGGY]  return  isNaN?  Infinite.ZERO  :  Infinite.ZERO;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  Infinite.ZERO  :  Infinite.ZERO;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  Infinite.ZERO  :  Infinite.ZERO;	  return    isInfinite?    NaN    :    Infinite.ZERO;    	non-compiled	[CE]  not  a  statement	102	None	replace
387	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  real)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  isNaN  ||  real)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  isNaN  ||  real)  {  return  Complex.ZERO;  }	  if(isInfinite    ||    isNaN)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	20	None	replace
388	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite),  throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite),  throw  new  IllegalStateException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  ||  isInfinite),  throw  new  IllegalStateException( " ");	  Context.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	72	None	replace
389	[BUG]  [BUGGY]  SimpleMath.log(false,  real);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(false,  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(false,  real);	  SimpleMath.log(isNaN,    real);    	non-compiled	[CE]  not  a  statement	105	None	replace
390	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite,  ZERO);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite,  ZERO);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  ||  isInfinite,  ZERO);	  Context.checkInfinite(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	25	None	replace
391	[BUG]  [BUGGY]  SimpleMath.log(isNaN(),  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN(),  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN(),  imaginary);	  SimpleMath.log(abs(),    imaginary);    	non-compiled	[CE]  not  a  statement	37	None	replace
392	[BUG]  [BUGGY]  Context.checkInfinite(false,  false,  imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(false,  false,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(false,  false,  imaginary);	  Context.checkInfinite(false,    false);    	non-compiled	[CE]  not  a  statement	46	None	replace
393	[BUG]  [BUGGY]  SimpleMath.atan2(divisor,  ab()));  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.atan2(divisor,  ab()));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.atan2(divisor,  ab()));	  SimpleMath.atan2(abs()));    	non-compiled	[CE]  not  a  statement	28	None	replace
394	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN),  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN),  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  ||  isNaN),  throw  new  IllegalArgumentException( " ");	  Parchet.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	40	None	replace
395	[BUG]  [BUGGY]  ||!isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  ||!isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	||!isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
396	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite  ||  divisor  ==  null;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  isInfinite  ||  divisor  ==  null;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  isInfinite  ||  divisor  ==  null;	  return    isNaN    ||    isInfinite    ||    divisor;    	non-compiled	[CE]  not  a  statement	23	None	replace
397	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite  ||  divisor!=  null;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  isInfinite  ||  divisor!=  null;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  isInfinite  ||  divisor!=  null;	  return    isNaN    ||    isInfinite    ||    divisor;    	non-compiled	[CE]  not  a  statement	23	None	replace
398	[BUG]  [BUGGY]  return  isNaN  ||  imaginary  <  =  ONE;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  imaginary  <  =  ONE;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  imaginary  <  =  ONE;	  return    isNaN    ||    imaginary;    	non-compiled	[CE]  not  a  statement	79	None	replace
399	[BUG]  [BUGGY]  [Delete]  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  [Delete]  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	[Delete]	  if(isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
400	[BUG]  [BUGGY]  return  isNaN?  NaN  :  INF.createComplex();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN?  NaN  :  INF.createComplex();  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN?  NaN  :  INF.createComplex();	  return    isNaN?    NaN    :    INF.log();    	non-compiled	[CE]  not  a  statement	89	None	replace
401	[BUG]  [BUGGY]  SimpleMath.log(abs(),  imaginary,  imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  imaginary,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  imaginary,  imaginary);	  SimpleMath.log(abs(),    real,    imaginary);    	non-compiled	[CE]  not  a  statement	36	None	replace
402	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite  ||  imaginary)  {  return  Complex.ONE;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isNaN  ||  isInfinite  ||  imaginary)  {  return  Complex.ONE;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isNaN  ||  isInfinite  ||  imaginary)  {  return  Complex.ONE;  }	  if(isNaN    ||    isInfinite)    {    return    Complex.ONE;    }    	non-compiled	[CE]  not  a  statement	62	None	replace
403	[BUG]  [BUGGY]  Complex  real  =  getDivisor2();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getDivisor2();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDivisor2();	  Complex    real    =    getDivisor();    	non-compiled	[CE]  not  a  statement	53	None	replace
404	[BUG]  [BUGGY]  Complex  real  =  getDivisor(real);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getDivisor(real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDivisor(real);	  Complex    real    =    getDivisor();    	non-compiled	[CE]  not  a  statement	53	None	replace
405	[BUG]  [BUGGY]  SimpleMath.log(isNaN  +  1);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN  +  1);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN  +  1);	  SimpleMath.log(isNaN));    	non-compiled	[CE]  not  a  statement	69	None	replace
406	[BUG]  [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)&&  throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(isNaN  ||  isInfinite)&&  throw  new  IllegalStateException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(isNaN  ||  isInfinite)&&  throw  new  IllegalStateException( " ");	  Parchet.checkInfinite(isNaN    ||    isInfinite)&&    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	99	None	replace
407	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  divisor);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(imaginary,  divisor);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(imaginary,  divisor);	  Complex    real    =    createComplex(divisor);    	non-compiled	[CE]  not  a  statement	32	None	replace
408	[BUG]  [BUGGY]  try  ==  false  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  try  ==  false  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	try  ==  false  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    imaginary));    }    	non-compiled	[CE]  not  a  statement	76	None	replace
409	[BUG]  [BUGGY]  try  ==  false)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  try  ==  false)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	try  ==  false)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    imaginary));    }    	non-compiled	[CE]  not  a  statement	76	None	replace
410	[BUG]  [BUGGY]  try  ==  false  &&  isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  try  ==  false  &&  isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	try  ==  false  &&  isNaN  ||  isInfinite)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    imaginary));    }    	non-compiled	[CE]  not  a  statement	76	None	replace
411	[BUG]  [BUGGY]  try  ==  false  &&  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  try  ==  false  &&  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	try  ==  false  &&  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  imaginary));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    imaginary));    }    	non-compiled	[CE]  not  a  statement	76	None	replace
412	[BUG]  [BUGGY]  Context.checkInfinite(isInfinite,  isNaN);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isInfinite,  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isInfinite,  isNaN);	  Context.checkInfinite(false,    isNaN);    	non-compiled	[CE]  not  a  statement	44	None	replace
413	[BUG]  [BUGGY]  Complex  real  =  createNaN(real);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createNaN(real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createNaN(real);	  Complex    real    =    createComplex(real);    	non-compiled	[CE]  not  a  statement	107	None	replace
414	[BUG]  [BUGGY]  Complex  real  =  createComplex(null,  ZERO);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(null,  ZERO);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(null,  ZERO);	  Complex    real    =    createComplex(null,    INF);    	non-compiled	[CE]  not  a  statement	108	None	replace
415	[BUG]  [BUGGY]  if(!isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(!isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(!isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }	  if(isNaN    &&    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	83	None	replace
416	[BUG]  [BUGGY]  return  isInfinite?  Complex.ZERO  :  NaN;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite?  Complex.ZERO  :  NaN;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite?  Complex.ZERO  :  NaN;	  return    isNaN?    NaN    :    Complex.ZERO;    	non-compiled	[CE]  not  a  statement	17	None	replace
417	[BUG]  [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real),  imaginary));  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real),  imaginary));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  FastMath.atan2(imaginary,  real),  imaginary));	  SimpleMath.log(abs(),    FastMath.atan2(imaginary,    real));    	non-compiled	[CE]  not  a  statement	2	None	replace
418	[BUG]  [BUGGY]  return  isInfinite  &&  divisor;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite  &&  divisor;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite  &&  divisor;	  return    isInfinite    &&    isNaN;    	non-compiled	[CE]  not  a  statement	7	None	replace
419	[BUG]  [BUGGY]  return  Complex.NaN,  isNaN  ||  isInfinite);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  Complex.NaN,  isNaN  ||  isInfinite);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  Complex.NaN,  isNaN  ||  isInfinite);	  return    Complex.NaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	6	None	replace
420	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  null,  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(real,  null,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(real,  null,  imaginary);	  Complex    real    =    createComplex(null,    null,    imaginary);    	non-compiled	[CE]  not  a  statement	88	None	replace
421	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  null,  denominator);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(real,  null,  denominator);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(real,  null,  denominator);	  Complex    real    =    createComplex(null,    null,    denominator);    	non-compiled	[CE]  not  a  statement	33	None	replace
422	[BUG]  [BUGGY]  return  isInfinite  ||  isNaN  ||  imaginary;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isInfinite  ||  isNaN  ||  imaginary;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isInfinite  ||  isNaN  ||  imaginary;	  return    isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	8	None	replace
423	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN),  throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN),  throw  new  IllegalStateException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  ||  isNaN),  throw  new  IllegalStateException( " ");	  Parchet.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
424	[BUG]  [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN  =  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isInfinite  ||  isNaN  =  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isInfinite  ||  isNaN  =  false)  {  throw  new  IllegalStateException( " ");  }	  Parchet.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
425	[BUG]  [BUGGY]  Complex  real  =  getDenimal();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getDenimal();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDenimal();	  Complex    real    =    getDenominator();    	non-compiled	[CE]  not  a  statement	55	None	replace
426	[BUG]  [BUGGY]  Complex  real  =  getDiminator();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  getDiminator();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  getDiminator();	  Complex    real    =    getDenominator();    	non-compiled	[CE]  not  a  statement	55	None	replace
427	[BUG]  [BUGGY]  SimpleMath.log(isInfinite)&&!isNaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite)&&!isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite)&&!isNaN);	  SimpleMath.log(isInfinite)&&    isNaN);    	non-compiled	[CE]  not  a  statement	109	None	replace
428	[BUG]  [BUGGY]  Parchet.checkInfinite(false);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkInfinite(false);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkInfinite(false);	  Parchet.checkInfinite(isNaN);    	non-compiled	[CE]  not  a  statement	98	None	replace
429	[BUG]  [BUGGY]  try  ==  false  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  try  ==  false  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	try  ==  false  ||  isNaN)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    real));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
430	[BUG]  [BUGGY]  try  ==  false)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  try  ==  false)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	try  ==  false)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    real));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
431	[BUG]  [BUGGY]  aughtExceptionHandler(false)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  aughtExceptionHandler(false)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	aughtExceptionHandler(false)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    real));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
432	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  nsee)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  nsee)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	try  {  [Delete]  catch(NoSuchElementException  nsee)  {  return  createComplex(FastMath.atan2(imaginary,  real));  }	  if(isNaN    ||    isInfinite)    {    return    createComplex(FastMath.atan2(imaginary,    real));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
433	[BUG]  [BUGGY]  return  isNaN  ||  factor;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  factor;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  factor;	  return    isNaN    ||    divisor;    	non-compiled	[CE]  not  a  statement	24	None	replace
434	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN  ||  imaginary)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isInfinite  ||  isNaN  ||  imaginary)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isInfinite  ||  isNaN  ||  imaginary)  {  throw  new  IllegalStateException( " ");  }	  Context.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
435	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN),  throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isInfinite  ||  isNaN),  throw  new  IllegalStateException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isInfinite  ||  isNaN),  throw  new  IllegalStateException( " ");	  Context.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
436	[BUG]  [BUGGY]  return  isNaN  ||  imaginary  +  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  imaginary  +  1;  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  imaginary  +  1;	  return    isNaN    ||    isInfinite    +    1;    	non-compiled	[CE]  not  a  statement	94	None	replace
437	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  ONE);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN,  ONE);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  ONE);	  Context.checkInfinite(isNaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	27	None	replace
438	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  implicit);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN,  implicit);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN,  implicit);	  Context.checkInfinite(isNaN,    isInfinite);    	non-compiled	[CE]  not  a  statement	27	None	replace
439	[BUG]  [BUGGY]  SimpleMath.log(isInfinite),  real);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite),  real);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite),  real);	  SimpleMath.log(abs()),    isNaN,    real);    	non-compiled	[CE]  not  a  statement	56	None	replace
440	[BUG]  [BUGGY]  SimpleMath.log(isNaN)&&  NaN;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN)&&  NaN;  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN)&&  NaN;	  SimpleMath.log(abs()),    NaN);    	non-compiled	[CE]  not  a  statement	63	None	replace
441	[BUG]  [BUGGY]  FragmentFactory  factory  =  getFactory().getFactoryFactory();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  FragmentFactory  factory  =  getFactory().getFactoryFactory();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	FragmentFactory  factory  =  getFactory().getFactoryFactory();	  FragmentFactory    factory    =    getFactory().getFactory();    	non-compiled	[CE]  not  a  statement	73	None	replace
442	[BUG]  [BUGGY]  FragmentFactory  factory  =  getFactory().getFactoryInstance();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  FragmentFactory  factory  =  getFactory().getFactoryInstance();  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	FragmentFactory  factory  =  getFactory().getFactoryInstance();	  FragmentFactory    factory    =    getFactory().getFactory();    	non-compiled	[CE]  not  a  statement	73	None	replace
443	[BUG]  [BUGGY]  SimpleMath.log(isNaN  +  1),  isNaN  +  1);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN  +  1),  isNaN  +  1);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN  +  1),  isNaN  +  1);	  SimpleMath.log(abs()),    isNaN    +    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
444	[BUG]  [BUGGY]  SimpleMath.log(isNaN)/  2,  isNaN  +  1);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isNaN)/  2,  isNaN  +  1);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isNaN)/  2,  isNaN  +  1);	  SimpleMath.log(abs()),    isNaN    +    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
445	[BUG]  [BUGGY]  SimpleMath.log(isInfinite),  isNaN,  imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(isInfinite),  isNaN,  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(isInfinite),  isNaN,  imaginary);	  SimpleMath.log(isInfinite),    isNaN);    	non-compiled	[CE]  not  a  statement	64	None	replace
446	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isInfinite  ||  isNaN  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isInfinite  ||  isNaN  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }	  Context.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
447	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN),  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkState(isInfinite  ||  isNaN),  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkState(isInfinite  ||  isNaN),  throw  new  IllegalArgumentException( " ");	  Context.checkState(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
448	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite),  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(isNaN  ||  isInfinite),  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(isNaN  ||  isInfinite),  throw  new  IllegalArgumentException( " ");	  Context.checkInfinite(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	84	None	replace
449	[BUG]  [BUGGY]  if(isInfinite  ||  imaginary)  {  return  Complex.ZERO;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  if(isInfinite  ||  imaginary)  {  return  Complex.ZERO;  }  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	if(isInfinite  ||  imaginary)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite    ||    imaginary)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
450	[BUG]  [BUGGY]  SimpleMath.info(isNaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.info(isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.info(isNaN);	  SimpleMath.info(abs()));    	non-compiled	[CE]  not  a  statement	29	None	replace
451	[BUG]  [BUGGY]  SimpleMath.info(divisor));  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.info(divisor));  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.info(divisor));	  SimpleMath.info(abs()));    	non-compiled	[CE]  not  a  statement	29	None	replace
452	[BUG]  [BUGGY]  return  isNaN  ||  real.equals(imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  return  isNaN  ||  real.equals(imaginary);  [BUGGY]      }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	return  isNaN  ||  real.equals(imaginary);	  return    isNaN    ||    real;    	non-compiled	[CE]  not  a  statement	81	None	replace
453	[BUG]  [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite  +  1);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Parchet.checkState(isNaN  ||  isInfinite  +  1);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Parchet.checkState(isNaN  ||  isInfinite  +  1);	  Parchet.checkState(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	101	None	replace
454	[BUG]  [BUGGY]  Complex  real  =  createComplex(Imaginary,  INF);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Complex  real  =  createComplex(Imaginary,  INF);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Complex  real  =  createComplex(Imaginary,  INF);	  Complex    real    =    createComplex(Imaginary);    	non-compiled	[CE]  not  a  statement	66	None	replace
455	[BUG]  [BUGGY]  Context.checkInfinite(real,  null);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  Context.checkInfinite(real,  null);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	Context.checkInfinite(real,  null);	  Context.checkInfinite(false,    null);    	non-compiled	[CE]  not  a  statement	45	None	replace
456	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(imaginary),  isNaN);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(imaginary),  isNaN);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.sqrt(imaginary),  isNaN);	  SimpleMath.log(abs(),    Math.sqrt(imaginary));    	non-compiled	[CE]  not  a  statement	86	None	replace
457	[BUG]  [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(imaginary),  imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  log()  {  if  (isNaN)  {      [BUGGY]  SimpleMath.log(abs(),  Math.sqrt(imaginary),  imaginary);  [BUGGY]      return  NaN;  }  return  createComplex(FastMath.log(abs()),  FastMath.atan2(imaginary,  real));  }  [CLASS]  Complex  [METHOD]  log  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	747	747	2	replace	SimpleMath.log(abs(),  Math.sqrt(imaginary),  imaginary);	  SimpleMath.log(abs(),    Math.sqrt(imaginary));    	non-compiled	[CE]  not  a  statement	86	None	replace
