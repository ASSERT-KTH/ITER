bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINF());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINF());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getINF());	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	33	None	replace
2	[BUG]  [BUGGY]  Real  +  addend.getReal(),  real  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  real  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  real  +  addend.getImaginary());	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	33	None	replace
3	[BUG]  [BUGGY]  Real  +  addend.getINF(),  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getINF(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getINF(),  imaginary  +  addend.getImaginary());	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	33	None	replace
4	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getINF();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getINF();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary  =  real  +  addend.getINF();	  Real    real    =    getReal(),    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
5	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getINFImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getINFImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary  =  real  +  addend.getINFImaginary();	  Real    real    =    getReal(),    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
6	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  imaginary  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary  =  imaginary  +  addend.getImaginary();	  Real    real    =    getReal(),    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
7	[BUG]  [BUGGY]  Real  real  =  createReal(real,  ZERO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  ZERO);	  Real    real    =    createReal(real,    q);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  Real  real  =  createReal(real,  ONE);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  ONE);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  ONE);	  Real    real    =    createReal(real,    q);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
9	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getInfinite();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getInfinite();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real  +  addend.getInfinite();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getINF();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
10	[BUG]  [BUGGY]  Real  real  =  createReal(addend,  real);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(addend,  real);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(addend,  real);	  Real    real    =    createReal(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
11	[BUG]  [BUGGY]  Real  real  =  createReal(addend,  addend);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(addend,  addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(addend,  addend);	  Real    real    =    createReal(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
12	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  q);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  q);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary,  q);	  Real    real    =    createReal(imaginary,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
13	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  false);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary,  false);	  Real    real    =    createReal(imaginary,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
14	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  true);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary,  true);	  Real    real    =    createReal(imaginary,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
15	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getImaginary()  :  null;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getImaginary()  :  null;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getImaginary()  :  null;	  Real    real    =    getReal();    imaginary    =    real!=    null?    real.getImaginary()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
16	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  ==  null?  real.getImaginary()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  ==  null?  real.getImaginary()  :  null;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  imaginary  ==  null?  real.getImaginary()  :  null;	  Real    real    =    getReal();    imaginary    =    real!=    null?    real.getImaginary()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
17	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getNaN();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getNaN();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary  =  real  +  addend.getNaN();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
18	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getInf());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getInf());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getInf());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getInf());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
19	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getInf());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getInf());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(real  +  addend.getReal(),  real  +  addend.getInf());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getInf());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
20	[BUG]  [BUGGY]  Real  =  createComplex(addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  createComplex(addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  createComplex(addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    =    addend.getReal();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  Real  =  createComplex(addend.getReal(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  createComplex(addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  createComplex(addend.getReal(),  imaginary);	  Real    =    addend.getReal();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINFImaginary();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINFImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getINFImaginary();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	16	None	replace
23	[BUG]  [BUGGY]  Real  +  addend.getINF(),  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getINF(),  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getINF(),  imaginary  +  addend.getImaginary();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	16	None	replace
24	[BUG]  [BUGGY]  Real  +  addend.getReal(),  real  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  real  +  addend.getImaginary();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	16	None	replace
25	[BUG]  [BUGGY]  Real  real  =  getInfinite();  imaginary  =  real  +  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getInfinite();  imaginary  =  real  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getInfinite();  imaginary  =  real  +  addend.getReal();	  Real    real    =    getInfinite();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
26	[BUG]  [BUGGY]  Real  real  =  getInfinite(),  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getInfinite(),  imaginary  =  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getInfinite(),  imaginary  =  real  +  addend.getImaginary();	  Real    real    =    getInfinite();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
27	[BUG]  [BUGGY]  Real  +  addend.getInf();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInf();  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getInf();  imaginary  +  addend.getImaginary());	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	34	None	replace
28	[BUG]  [BUGGY]  Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary());	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	34	None	replace
29	[BUG]  [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getNaN();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getNaN();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal();  imaginary  +  addend.getNaN();	  Real    +    addend.getReal();    imaginary    +    addend.getINF();    	non-compiled	[CE]  not  a  statement	67	None	replace
30	[BUG]  [BUGGY]  Real  =  real.getReal();  imaginary  =  this.real.getImaginary();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();  imaginary  =  this.real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  real.getReal();  imaginary  =  this.real.getImaginary();	  Real    =    this.real.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  real  +  addend.getMask());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  real  +  addend.getMask());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(imaginary  +  addend.getImaginary(),  real  +  addend.getMask());	  return    createComplex(real    +    addend.getImaginary(),    imaginary    +    addend.getMask());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
32	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getINF(),  imaginary  +  addend.getMask());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getINF(),  imaginary  +  addend.getMask());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(real  +  addend.getINF(),  imaginary  +  addend.getMask());	  return    createComplex(real    +    addend.getImaginary(),    imaginary    +    addend.getMask());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
33	[BUG]  [BUGGY]  Real  =  q.getReal();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  q.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  q.getReal();	  Real    =    imaginary.getReal();    	non-compiled	[CE]  ';'  expected	52	None	replace
34	[BUG]  [BUGGY]  Real  real  =  createComplex();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex();	  Real    real    =    createReal();    	non-compiled	[CE]  ';'  expected	68	None	replace
35	[BUG]  [BUGGY]  Real  real  =  createInfinite();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createInfinite();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createInfinite();	  Real    real    =    createReal();    	non-compiled	[CE]  ';'  expected	68	None	replace
36	[BUG]  [BUGGY]  Real  real  =  addend  +  real.getReal();  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend  +  real.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  addend  +  real.getReal();	  Real    real    =    real    +    addend.getReal();    	non-compiled	[CE]  ';'  expected	11	None	replace
37	[BUG]  [BUGGY]  Real  real  =  createComplex(addend,  real);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(addend,  real);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(addend,  real);	  Real    real    =    createComplex(real,    addend);    	non-compiled	[CE]  ';'  expected	50	None	replace
38	[BUG]  [BUGGY]  Real  =  addend.getReal();  imaginary  =  imaginary;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getReal();  imaginary  =  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  addend.getReal();  imaginary  =  imaginary;	  Real    =    real.getReal();    imaginary    =    imaginary;    	non-compiled	[CE]  ';'  expected	72	None	replace
39	[BUG]  [BUGGY]  Real  =  q.getReal();  imaginary  =  imaginary;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  q.getReal();  imaginary  =  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  q.getReal();  imaginary  =  imaginary;	  Real    =    real.getReal();    imaginary    =    imaginary;    	non-compiled	[CE]  ';'  expected	72	None	replace
40	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getINF();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getINF();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real.getINF();	  Real    real    =    getReal();    imaginary    =    real.getInfinite();    	non-compiled	[CE]  ';'  expected	55	None	replace
41	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  =  addend.getImaginary());  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  =  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getReal();  imaginary  =  addend.getImaginary());	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary());    	non-compiled	[CE]  ';'  expected	71	None	replace
42	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  =  addend.getImaginary());  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  =  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  =  addend.getImaginary());	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary());    	non-compiled	[CE]  ';'  expected	71	None	replace
43	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  /  addend.getImaginary();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  /  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  imaginary  /  addend.getImaginary();	  Real    real    =    getReal();    imaginary    =    real    /    addend.getImaginary();    	non-compiled	[CE]  ';'  expected	76	None	replace
44	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  *  addend.getImaginary();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  *  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  imaginary  *  addend.getImaginary();	  Real    real    =    getReal();    imaginary    =    real    /    addend.getImaginary();    	non-compiled	[CE]  ';'  expected	76	None	replace
45	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  *  addend.getImaginary();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real  *  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real  *  addend.getImaginary();	  Real    real    =    getReal();    imaginary    =    real    /    addend.getImaginary();    	non-compiled	[CE]  ';'  expected	76	None	replace
46	[BUG]  [BUGGY]  Real  +  addend.getInf();  imaginary  +  addend.getImaginary();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInf();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getInf();  imaginary  +  addend.getImaginary();	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  ';'  expected	17	None	replace
47	[BUG]  [BUGGY]  Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary();	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  ';'  expected	17	None	replace
48	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.add(imaginary,  addend.getImaginary());  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real.add(imaginary,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real.add(imaginary,  addend.getImaginary());	  Real    real    =    getReal();    imaginary    =    real.add(imaginary);    	non-compiled	[CE]  ';'  expected	42	None	replace
49	[BUG]  [BUGGY]  imaginary  +  addend.getImaginary();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	imaginary  +  addend.getImaginary();	  real    +    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  ';'  expected	75	None	replace
50	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  imaginary);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  imaginary);	  Real    real    =    Real.create(real,    addend);    	non-compiled	[CE]  ';'  expected	39	None	replace
51	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  =  addend.getImaginary();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getReal();  imaginary  =  addend.getImaginary();	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary();    	non-compiled	[CE]  ';'  expected	66	None	replace
52	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  =  addend.getImaginary();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  =  addend.getImaginary();	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	66	None	replace
53	[BUG]  [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  real.getReal();  imaginary  =  imaginary.getImaginary();	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
54	[BUG]  [BUGGY]  Complex  real  =  createComplex(real  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Complex  real  =  createComplex(real  +  addend.getReal());	  Complex    real    =    createComplex(imaginary    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
55	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary);	  Complex    real    =    createComplex(imaginary    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
56	[BUG]  [BUGGY]  Real  real  =  Real.create(real  +  addend.getReal(),  imaginary);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real  +  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real  +  addend.getReal(),  imaginary);	  Real    real    =    Real.create(real    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
57	[BUG]  [BUGGY]  Real  real  =  Real.create(real  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real  +  addend.getImaginary());	  Real    real    =    Real.create(real    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
58	[BUG]  [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getNaN());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getNaN());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal();  imaginary  +  addend.getNaN());	  Real    +    addend.getReal();    imaginary    +    addend.getINF());    	non-compiled	[CE]  not  a  statement	51	None	replace
59	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary);	  Real    real    =    createComplex(imaginary    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
60	[BUG]  [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real  +  addend.getReal());	  Real    real    =    createComplex(imaginary    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
61	[BUG]  [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real  +  addend.getReal(),  imaginary);	  Real    real    =    createComplex(imaginary    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
62	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getINF());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getINF());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(real  +  addend.getReal(),  real  +  addend.getINF());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getINF());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
63	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  imagine  +  addend.getINF());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getReal(),  imagine  +  addend.getINF());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(real  +  addend.getReal(),  imagine  +  addend.getINF());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getINF());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  addend.getReal()  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  addend.getReal()  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  addend.getReal()  +  addend.getImaginary());	  Real    real    =    createComplex(real,    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
65	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  true);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  true);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  true);	  Real    real    =    createComplex(imaginary,    real);    	non-compiled	[CE]  :  expected	49	None	replace
66	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  addend.getReal(),  imaginary);  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  addend.getReal(),  imaginary);	  Real    real    =    createComplex(real,    addend.getReal());    	non-compiled	[CE]  :  expected	48	None	replace
67	[BUG]  [BUGGY]  Real  real  =  createComplex(addend,  addend.getReal());  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(addend,  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(addend,  addend.getReal());	  Real    real    =    createComplex(real,    addend.getReal());    	non-compiled	[CE]  :  expected	48	None	replace
68	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  addend.getImaginary());  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  addend.getImaginary());	  Real    real    =    createComplex(real,    addend.getReal());    	non-compiled	[CE]  :  expected	48	None	replace
69	[BUG]  [BUGGY]  Real  real  =  createReal(real  +  addend.getReal(),  imaginary);  [CE]  :  expected  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real  +  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real  +  addend.getReal(),  imaginary);	  Real    real    =    createReal(real    +    addend.getReal());    	non-compiled	[CE]  :  expected	58	None	replace
70	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getReal());  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary  +  addend.getReal());	  Real    real    =    createReal(real    +    addend.getReal());    	non-compiled	[CE]  :  expected	58	None	replace
71	[BUG]  [BUGGY]  Real  real  =  getNaN();  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getNaN();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getNaN();	  Real    real    =    getINF();    	non-compiled	[CE]  :  expected	5	None	replace
72	[BUG]  [BUGGY]  Real  real  =  getInfinite();  imaginary  =  imaginary.add(real);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getInfinite();  imaginary  =  imaginary.add(real);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getInfinite();  imaginary  =  imaginary.add(real);	  Real    real    =    getReal();    imaginary    =    imaginary.add(real);    	non-compiled	[CE]  :  expected	69	None	replace
73	[BUG]  [BUGGY]  Real  real  =  getINF();  imaginary  =  imaginary.add(real);  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getINF();  imaginary  =  imaginary.add(real);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getINF();  imaginary  =  imaginary.add(real);	  Real    real    =    getReal();    imaginary    =    imaginary.add(real);    	non-compiled	[CE]  :  expected	69	None	replace
74	[BUG]  [BUGGY]  Real  real  =  createReal(real,  true);  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  true);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  true);	  Real    real    =    createReal(imaginary,    real);    	non-compiled	[CE]  :  expected	62	None	replace
75	[BUG]  [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getINFImaginary());  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getINFImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getINFImaginary());	  Real    real    =    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  :  expected	9	None	replace
76	[BUG]  [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getNumberOfImaginary());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getNumberOfImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getNumberOfImaginary());	  Real    real    =    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
77	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  real  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  real  +  addend.getImaginary());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(imaginary  +  addend.getImaginary(),  real  +  addend.getImaginary());	  return    createComplex(real    +    addend.getImaginary(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
78	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getINF(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getINF(),  imaginary  +  addend.getImaginary());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(real  +  addend.getINF(),  imaginary  +  addend.getImaginary());	  return    createComplex(real    +    addend.getImaginary(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
79	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getRandom();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getRandom();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary  =  real  +  addend.getRandom();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getRandom();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
80	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getINFRandom();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getINFRandom();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real  +  addend.getINFRandom();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getRandom();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
81	[BUG]  [BUGGY]  Real  real  =  createReal(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    createReal(real,    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
82	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    createReal(real,    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
83	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary,  ZERO);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  imaginary,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  imaginary,  ZERO);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
84	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary,  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  imaginary,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  imaginary,  addend.getImaginary());	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
85	[BUG]  [BUGGY]  Real  real  =  createReal(real,  ZERO,  imaginary,  q);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  ZERO,  imaginary,  q);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  ZERO,  imaginary,  q);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
86	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary,  q,  ZERO);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  imaginary,  q,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  imaginary,  q,  ZERO);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
87	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getNaNImaginary();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getNaNImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real.getNaNImaginary();	  Real    real    =    getReal();    imaginary    =    real.getINFImaginary();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
88	[BUG]  [BUGGY]  Real  =  addend.getReal(),  imaginary;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getReal(),  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  addend.getReal(),  imaginary;	  Real    =    real.getReal(),    imaginary;    	non-compiled	[CE]  ';'  expected	2	None	replace
89	[BUG]  [BUGGY]  Real  =  real.getReal(),  imaginary  +  addend.getImaginary();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal(),  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  real.getReal(),  imaginary  +  addend.getImaginary();	  Real    =    real.getReal(),    imaginary;    	non-compiled	[CE]  ';'  expected	2	None	replace
90	[BUG]  [BUGGY]  Real  =  real.getReal(),  imaginary  +  addend.getImaginary());  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  real.getReal(),  imaginary  +  addend.getImaginary());	  Real    =    real.getReal(),    imaginary;    	non-compiled	[CE]  ';'  expected	2	None	replace
91	[BUG]  [BUGGY]  Real  =  imaginary.getReal(),  real;  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  imaginary.getReal(),  real;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  imaginary.getReal(),  real;	  Real    =    real.getReal(),    imaginary;    	non-compiled	[CE]  ';'  expected	2	None	replace
92	[BUG]  [BUGGY]  Real  real  =  getINF();  imaginary  =  real.getNaN();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getINF();  imaginary  =  real.getNaN();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getINF();  imaginary  =  real.getNaN();	  Real    real    =    getReal();    imaginary    =    real.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
93	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  addend.getReal(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  addend.getReal(),  imaginary);	  Real    real    =    Real.create(real,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
94	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  addend.getImaginary());	  Real    real    =    Real.create(real,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
95	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  addend.getINF());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  addend.getINF());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  addend.getINF());	  Real    real    =    Real.create(real,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
96	[BUG]  [BUGGY]  Real  real  =  getInfinite(real);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getInfinite(real);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getInfinite(real);	  Real    real    =    getInfinite();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
97	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getMask());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getMask());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(real  +  addend.getReal(),  real  +  addend.getMask());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getMask());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
98	[BUG]  [BUGGY]  Real  real  =  createReal(addend);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(addend);	  Real    real    =    createReal(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
99	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary);	  Real    real    =    createReal(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
100	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  addend);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary,  addend);	  Real    real    =    createReal(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
101	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINFImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINFImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINFImaginary());	  Real    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
102	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNumberOfImaginaries());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNumberOfImaginaries());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNumberOfImaginaries());	  Real    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
103	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary,  addend.getReal()  -  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary,  addend.getReal()  -  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary,  addend.getReal()  -  addend.getReal());	  Real    real    =    createComplex(real,    imaginary    -    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
104	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  imaginary  -  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  imaginary  -  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  imaginary  -  addend.getImaginary());	  Real    real    =    createComplex(real,    imaginary    -    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
105	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary  +  addend.getReal(),  addend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  imaginary  +  addend.getReal(),  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  imaginary  +  addend.getReal(),  addend.getImaginary());	  Real    real    =    createReal(real,    imaginary    +    addend.getReal());    	non-compiled	[CE]  not  a  statement	63	None	replace
106	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    createComplex(real,    imaginary,    addend.getReal());    	non-compiled	[CE]  not  a  statement	29	None	replace
107	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  addend.getReal(),  imaginary,  addend.getImaginary());  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  addend.getReal(),  imaginary,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  addend.getReal(),  imaginary,  addend.getImaginary());	  Real    real    =    createComplex(real,    imaginary,    addend.getReal());    	non-compiled	[CE]  not  a  statement	29	None	replace
108	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary,  addend.getReal());  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary,  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary,  addend.getReal());	  Real    real    =    createComplex(real,    imaginary,    addend.getReal());    	non-compiled	[CE]  not  a  statement	29	None	replace
109	[BUG]  [BUGGY]  Real  real  =  getInfinite();  imaginary  =  real.getImaginary();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getInfinite();  imaginary  =  real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getInfinite();  imaginary  =  real.getImaginary();	  Real    real    =    getINF();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	47	None	replace
110	[BUG]  [BUGGY]  Real  real  =  getNaN();  imaginary  =  real.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getNaN();  imaginary  =  real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getNaN();  imaginary  =  real.getImaginary();	  Real    real    =    getINF();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	47	None	replace
111	[BUG]  [BUGGY]  Real  =  real.getReal();  imaginary  =  addend.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();  imaginary  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  real.getReal();  imaginary  =  addend.getImaginary();	  Real    =    addend.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	13	None	replace
112	[BUG]  [BUGGY]  Real  =  q.getReal();  imaginary  =  real.getImaginary();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  q.getReal();  imaginary  =  real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  q.getReal();  imaginary  =  real.getImaginary();	  Real    =    addend.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	13	None	replace
113	[BUG]  [BUGGY]  Real  =  real.getReal();Imaginary  =  addend.getImaginary();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();Imaginary  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  real.getReal();Imaginary  =  addend.getImaginary();	  Real    =    addend.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	13	None	replace
114	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getImaginary();  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary  +  addend.getImaginary();	  Real    real    =    getReal(),    imaginary;    	non-compiled	[CE]  	6	None	replace
115	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  +  1;  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  +  1;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary  +  1;	  Real    real    =    getReal(),    imaginary;    	non-compiled	[CE]  	6	None	replace
116	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getImaginary());  [CE]  [FE]                          AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    getReal(),    imaginary;    	non-compiled	[CE]  	6	None	replace
117	[BUG]  [BUGGY]  Real  real  =  getReal(),  real;  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  real;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  real;	  Real    real    =    getReal(),    imaginary;    	non-compiled	[CE]  not  a  statement	6	None	replace
118	[BUG]  [BUGGY]  Real  real  =  getInfinite();  imaginary  =  real.add(real);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getInfinite();  imaginary  =  real.add(real);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getInfinite();  imaginary  =  real.add(real);	  Real    real    =    getINF();    imaginary    =    real.add(real);    	non-compiled	[CE]  not  a  statement	44	None	replace
119	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  imaginary  +  addend.getReal(),  imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  imaginary  +  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  imaginary  +  addend.getReal(),  imaginary);	  Real    real    =    createComplex(real,    imaginary    +    addend.getReal());    	non-compiled	[CE]  not  a  statement	27	None	replace
120	[BUG]  [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  real.add(real,  addend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  real.add(real,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  addend.getReal();  imaginary  =  real.add(real,  addend.getImaginary());	  Real    real    =    getReal();    imaginary    =    real.add(real,    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	57	None	replace
121	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary.add(real,  addend.getImaginary());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary.add(real,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  imaginary.add(real,  addend.getImaginary());	  Real    real    =    getReal();    imaginary    =    real.add(real,    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	57	None	replace
122	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  ZERO);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  ZERO);	  Real    real    =    Real.create(real,    q);    	non-compiled	[CE]  not  a  statement	41	None	replace
123	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  double.valueOf(q));  [CE]  class  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  double.valueOf(q));  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  double.valueOf(q));	  Real    real    =    Real.create(real,    q);    	non-compiled	[CE]  class  expected	41	None	replace
124	[BUG]  [BUGGY]  Real  =  this.real.getReal(),  imaginary;  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  this.real.getReal(),  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  this.real.getReal(),  imaginary;	  Real    =    this.real.getReal();    	non-compiled	[CE]  	3	None	replace
125	[BUG]  [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  addend.getReal();  imaginary  =  real  +  addend.getImaginary();	  Real    real    =    getImaginary();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
126	[BUG]  [BUGGY]  real  =  getReal();  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  real  =  getReal();  imaginary  =  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	real  =  getReal();  imaginary  =  real  +  addend.getImaginary();	  Real    real    =    getImaginary();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
127	[BUG]  [BUGGY]  Real  real  =  getRaw();  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getRaw();  imaginary  =  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getRaw();  imaginary  =  real  +  addend.getImaginary();	  Real    real    =    getImaginary();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
128	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());	  Complex    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
129	[BUG]  [BUGGY]  Real  -  addend.getINF();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getINF();  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getINF();  imaginary  +  addend.getImaginary());	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	35	None	replace
130	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getINF());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getINF());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getReal();  imaginary  +  addend.getINF());	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	35	None	replace
131	[BUG]  [BUGGY]  Real  -  addend.getRaw();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getRaw();  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getRaw();  imaginary  +  addend.getImaginary());	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	35	None	replace
132	[BUG]  [BUGGY]  Real  -  addend.getINF();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getINF();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getINF();  imaginary  +  addend.getImaginary();	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	18	None	replace
133	[BUG]  [BUGGY]  Real  -  addend.getRaw();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getRaw();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getRaw();  imaginary  +  addend.getImaginary();	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	18	None	replace
134	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getINF();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getINF();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getReal();  imaginary  +  addend.getINF();	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	18	None	replace
135	[BUG]  [BUGGY]  Real  =  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  addend.getImaginary();	  Real    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
136	[BUG]  [BUGGY]  Real  =  createComplex(real.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  createComplex(real.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  createComplex(real.getReal(),  imaginary  +  addend.getImaginary());	  Real    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
137	[BUG]  [BUGGY]  Real  =  q.getImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  q.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  q.getImaginary();	  Real    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
138	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getEarNaN();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getEarNaN();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real  +  addend.getEarNaN();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
139	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  +  addend.getImaginary());	  Real    real    =    createComplex(imaginary    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
140	[BUG]  [BUGGY]  Real  real  =  Real.create(imaginary  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(imaginary  +  addend.getReal());	  Real    real    =    Real.create(real    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
141	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  -  addend.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  -  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getReal();  imaginary  -  addend.getImaginary();	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	18	None	replace
142	[BUG]  [BUGGY]  Real  real  =  addend.add(real,  getReal());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.add(real,  getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  addend.add(real,  getReal());	  Real    real    =    getReal();    imaginary    =    real.add(real,    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
143	[BUG]  [BUGGY]  Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary());	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	34	None	replace
144	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary.add(real  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary.add(real  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  imaginary.add(real  +  addend.getImaginary());	  Real    real    =    getReal();    imaginary    =    imaginary.add(real);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
145	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary.add(real,  isNaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary.add(real,  isNaN);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  imaginary.add(real,  isNaN);	  Real    real    =    getReal();    imaginary    =    imaginary.add(real);    	non-compiled	[CE]  not  a  statement	69	None	replace
146	[BUG]  [BUGGY]  Real  =  this.real.add(real);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  this.real.add(real);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  this.real.add(real);	  Real    =    this.real.getReal();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
147	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());	  Real    real    =    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
148	[BUG]  [BUGGY]  Real  real  =  createInfinite(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createInfinite(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createInfinite(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
149	[BUG]  [BUGGY]  Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary();	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	17	None	replace
150	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  ZERO);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary,  ZERO);	  Real    real    =    createReal(imaginary,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
151	[BUG]  [BUGGY]  Real  real  =  createInfinite(addend.getReal());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createInfinite(addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createInfinite(addend.getReal());	  Real    real    =    getInfinite();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
152	[BUG]  [BUGGY]  Real  real  =  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  addend.getReal();	  Real    real    =    getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
153	[BUG]  [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  real.getReal();  imaginary  =  imaginary  +  addend.getImaginary();	  Real    =    real.getReal();    imaginary    =    imaginary;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
154	[BUG]  [BUGGY]  Real  =  addend.getReal();  imaginary  =  real;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getReal();  imaginary  =  real;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  addend.getReal();  imaginary  =  real;	  Real    =    real.getReal();    imaginary    =    imaginary;    	non-compiled	[CE]  not  a  statement	72	None	replace
155	[BUG]  [BUGGY]  Real  real  =  getINF();  imaginary  =  real.getReal();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getINF();  imaginary  =  real.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getINF();  imaginary  =  real.getReal();	  Real    real    =    getINF();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	47	None	replace
156	[BUG]  [BUGGY]  Real  =  ONE.getReal();  imaginary  =  ONE.getImaginary();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  ONE.getReal();  imaginary  =  ONE.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  ONE.getReal();  imaginary  =  ONE.getImaginary();	  Real    =    q.getReal();    imaginary    =    q.getImaginary();    	non-compiled	[CE]  not  a  statement	14	None	replace
157	[BUG]  [BUGGY]  Real  real  =  isNaN  +  addend.getReal();  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  isNaN  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  isNaN  +  addend.getReal();	  Real    real    =    imaginary    +    addend.getReal();    	non-compiled	[CE]  not  a  statement	81	None	replace
158	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getReal(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary  +  addend.getReal(),  imaginary);	  Real    real    =    createReal(real,    imaginary    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
159	[BUG]  [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getInfinite();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getInfinite();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal();  imaginary  +  addend.getInfinite();	  Real    +    addend.getReal();    imaginary    +    addend.getINF();    	non-compiled	[CE]  not  a  statement	67	None	replace
160	[BUG]  [BUGGY]  Real  real  =  createReal(real,  addend.getReal());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  addend.getReal());	  Real    real    =    createReal(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
161	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getReal();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary  +  addend.getReal();	  Real    real    =    getReal(),    imaginary;    	non-compiled	[CE]  ';'  expected	6	None	replace
162	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  ==  null?  real.getImaginary()  :  null;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real  ==  null?  real.getImaginary()  :  null;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real  ==  null?  real.getImaginary()  :  null;	  Real    real    =    getReal();    imaginary    =    real!=    null?    real.getImaginary()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
163	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  addend.doubleValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  addend.doubleValue());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  addend.doubleValue());	  Real    real    =    Real.create(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
164	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  q.add(real,  isNaN);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  q.add(real,  isNaN);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  q.add(real,  isNaN);	  Real    real    =    getReal();    imaginary    =    q.add(real);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
165	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  ZERO);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  ZERO);	  Real    real    =    createComplex(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
166	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getRandom();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getRandom();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real.getRandom();	  Real    real    =    getReal();    imaginary    =    real.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
167	[BUG]  [BUGGY]  Real  =  createComplex(imaginary.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  createComplex(imaginary.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  createComplex(imaginary.getReal(),  imaginary  +  addend.getImaginary());	  Real    =    imaginary.getReal();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
168	[BUG]  [BUGGY]  Real  =  isNaN?  imaginary  :  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  isNaN?  imaginary  :  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  isNaN?  imaginary  :  addend.getReal();	  Real    =    imaginary.getReal();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
169	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getReal());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getReal());	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	33	None	replace
170	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  ONE);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  ONE);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  ONE);	  Real    real    =    Real.create(real,    q);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
171	[BUG]  [BUGGY]  Real  real  =  createComplex(addend);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(addend);	  Real    real    =    createComplex(real);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
172	[BUG]  [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getInfinite());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getInfinite());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal();  imaginary  +  addend.getInfinite());	  Real    +    addend.getReal();    imaginary    +    addend.getINF());    	non-compiled	[CE]  not  a  statement	51	None	replace
173	[BUG]  [BUGGY]  Real  =  addend.getReal();  imaginary  =  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getReal();  imaginary  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  addend.getReal();  imaginary  =  addend.getImaginary();	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
174	[BUG]  [BUGGY]  Real  =  addend.getReal();  imaginary  =  addend.getImaginary());  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getReal();  imaginary  =  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  addend.getReal();  imaginary  =  addend.getImaginary());	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary());    	non-compiled	[CE]  ';'  expected	71	None	replace
175	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getReal());	  Complex    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
176	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary,  -  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary,  -  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary,  -  addend.getReal());	  Real    real    =    createComplex(real,    imaginary    -    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
177	[BUG]  [BUGGY]  Real  real  =  addend.getInfinite();  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getInfinite();  imaginary  =  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  addend.getInfinite();  imaginary  =  real  +  addend.getImaginary();	  Real    real    =    getInfinite();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
178	[BUG]  [BUGGY]  SimpleNode  real  =  createComplex(imaginary  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  SimpleNode  real  =  createComplex(imaginary  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	SimpleNode  real  =  createComplex(imaginary  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();	  Complex    real    =    createComplex(imaginary    +    addend.getReal());    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	60	None	replace
179	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  /  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  /  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  /  addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
180	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNaN());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNaN());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNaN());	  Real    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
181	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getReal();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getReal();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	16	None	replace
182	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINF();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINF();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getINF();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	16	None	replace
183	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getRandom();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getRandom();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getRandom();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	16	None	replace
184	[BUG]  [BUGGY]  Real  real  =  createReal(real,  ONE,  q);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  ONE,  q);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  ONE,  q);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
185	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  addend,  q);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  addend,  q);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary,  addend,  q);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
186	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary,  addend);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  imaginary,  addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  imaginary,  addend);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
187	[BUG]  [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  addend);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real  +  addend.getReal(),  addend);	  Real    real    =    createComplex(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
188	[BUG]  [BUGGY]  Real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    =    addend.getReal();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
189	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());	  Real    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
190	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getImaginary());	  Complex    real    =    createComplex(imaginary    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
191	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  addend.getReal(),  imaginary  -  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  addend.getReal(),  imaginary  -  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  -  addend.getReal(),  imaginary  -  addend.getImaginary());	  Real    real    =    createComplex(real,    imaginary    -    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
192	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary,  imaginary  -  addend.getReal());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary,  imaginary  -  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary,  imaginary  -  addend.getReal());	  Real    real    =    createComplex(real,    imaginary    -    addend.getReal());    	non-compiled	[CE]  not  a  statement	73	None	replace
193	[BUG]  [BUGGY]  Real  =  imaginary.getImaginary();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  imaginary.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  imaginary.getImaginary();	  Real    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	78	None	replace
194	[BUG]  [BUGGY]  Real  real  =  createReal(real,  false);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  false);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  false);	  Real    real    =    createReal(imaginary,    real);    	non-compiled	[CE]  not  a  statement	62	None	replace
195	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getMask());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getMask());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getMask());	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	33	None	replace
196	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  double.doubleValue());  [CE]  class  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  double.doubleValue());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  double.doubleValue());	  Real    real    =    Real.create(real,    q);    	non-compiled	[CE]  class  expected	41	None	replace
197	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  INF);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  INF);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  INF);	  Real    real    =    Real.create(real,    q);    	non-compiled	[CE]  not  a  statement	41	None	replace
198	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  -  addend.getImaginary());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  -  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getReal();  imaginary  -  addend.getImaginary());	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	35	None	replace
199	[BUG]  [BUGGY]  Real  real  =  createComplex(Imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(Imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(Imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	9	None	replace
200	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getINF()  :  null;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getINF()  :  null;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getINF()  :  null;	  Real    real    =    getReal();    imaginary    =    real!=    null?    real.getImaginary()    :    null;    	non-compiled	[CE]  not  a  statement	70	None	replace
201	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  getReal());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  getReal());	  Real    real    =    Real.create(real,    addend);    	non-compiled	[CE]  not  a  statement	39	None	replace
202	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real!=  null?  real.getNaN()  :  imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real!=  null?  real.getNaN()  :  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real!=  null?  real.getNaN()  :  imaginary;	  Real    real    =    getReal();    imaginary    =    real.getNaN();    	non-compiled	[CE]  not  a  statement	46	None	replace
203	[BUG]  [BUGGY]  Real  =  this.real.getReal();  imaginary  =  imaginary;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  this.real.getReal();  imaginary  =  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  this.real.getReal();  imaginary  =  imaginary;	  Real    =    this.real.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	15	None	replace
204	[BUG]  [BUGGY]  Real  =  isNaN  ||  imaginary.getReal();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  isNaN  ||  imaginary.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  isNaN  ||  imaginary.getReal();	  Real    =    imaginary.getReal();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
205	[BUG]  [BUGGY]  Real  real  =  isNaN?  getInfinite()  :  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  isNaN?  getInfinite()  :  null;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  isNaN?  getInfinite()  :  null;	  Real    real    =    getInfinite();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
206	[BUG]  [BUGGY]  Real  real  =  isNaN?  getInfinite()  :  NONE;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  isNaN?  getInfinite()  :  NONE;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  isNaN?  getInfinite()  :  NONE;	  Real    real    =    getInfinite();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
207	[BUG]  [BUGGY]  Real  real  =  realistic  +  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  realistic  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  realistic  +  addend.getReal();	  Real    real    =    real    +    addend.getReal();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
208	[BUG]  [BUGGY]  Real  real  =  imagined  +  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  imagined  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  imagined  +  addend.getReal();	  Real    real    =    real    +    addend.getReal();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
209	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getMask());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getMask());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getMask());	  return    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getMask());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
210	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  imaginary  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  imaginary  +  addend.getReal());	  Real    real    =    Real.create(real,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
211	[BUG]  [BUGGY]  return  createComplex(imaginary  /  addend.getReal(),  imaginary  +  addend.getINF());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  /  addend.getReal(),  imaginary  +  addend.getINF());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(imaginary  /  addend.getReal(),  imaginary  +  addend.getINF());	  return    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getINF());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
212	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());	  Real    real    =    createComplex(imaginary    +    addend.getReal());    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
213	[BUG]  [BUGGY]  Real  real  =  createComplex(real.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real.getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
214	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());	  Complex    real    =    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
215	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  virtual  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  virtual  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary  =  virtual  +  addend.getImaginary();	  Real    real    =    getReal(),    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
216	[BUG]  [BUGGY]  Real  real  =  createImaginary(imaginary);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createImaginary(imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createImaginary(imaginary);	  Real    real    =    createReal(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
217	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getMask();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getMask();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getMask();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	16	None	replace
218	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
219	[BUG]  [BUGGY]  Real  =  imaginary  +  addend.getReal();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  imaginary  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  imaginary  +  addend.getReal();	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	66	None	replace
220	[BUG]  [BUGGY]  Real  =  imaginary;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  imaginary;	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
221	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary,  ONE);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  imaginary,  ONE);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  imaginary,  ONE);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
222	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  /  addend.getNaN();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real  /  addend.getNaN();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real  /  addend.getNaN();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
223	[BUG]  [BUGGY]  Real  =  this.real.getImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  this.real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  this.real.getImaginary();	  Real    =    this.real.getReal();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
224	[BUG]  [BUGGY]  Real  real  =  createReal(real,  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  addend.getImaginary());	  Real    real    =    createReal(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
225	[BUG]  [BUGGY]  Real  real  =  createReal(real  +  addend,  addend);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real  +  addend,  addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real  +  addend,  addend);	  Real    real    =    createReal(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
226	[BUG]  [BUGGY]  Real  real  =  imaginary  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  imaginary  +  addend.getImaginary();	  Real    real    =    imaginary    +    addend.getReal();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
227	[BUG]  [BUGGY]  Real  real  =  getreal();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getreal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getreal();	  Real    real    =    getINF();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
228	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  q);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  q);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  q);	  Real    real    =    createComplex(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
229	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  Imagine.INFINITE);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  Imagine.INFINITE);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  Imagine.INFINITE);	  Real    real    =    createComplex(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
230	[BUG]  [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary.getImaginary());  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  real.getReal();  imaginary  =  imaginary.getImaginary());	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary());    	non-compiled	[CE]  	71	None	replace
