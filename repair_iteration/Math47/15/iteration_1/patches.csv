bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Real  =  addend.getReal();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  =  addend.getReal();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  addend.getReal();	      Real    =    real.getReal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
2	[BUG]  [BUGGY]  Real  =  real.getReal(),  imaginary;  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  =  real.getReal(),  imaginary;  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  real.getReal(),  imaginary;	      Real    =    real.getReal();    	non-compiled	[CE]  ';'  expected	17	None	replace
3	[BUG]  [BUGGY]  Real  =  this.real.getReal();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  =  this.real.getReal();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  this.real.getReal();	      Real    =    real.getReal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
4	[BUG]  [BUGGY]  Real  real  =  getInfinite();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getInfinite();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getInfinite();	      Real    real    =    getReal();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  Real  real  =  getINF();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getINF();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getINF();	      Real    real    =    getReal();    	non-compiled	[CE]  not  a  statement	4	None	replace
6	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal(),  imaginary;  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary;	      Real    real    =    getReal();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getINF());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getINF());  [BUGGY]    imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getINF());	  return    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getINF());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
8	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());  [BUGGY]    imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());	  return    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getINF());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
9	[BUG]  [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());	      Complex    real    =    createComplex(real    +    addend.getReal());    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();	      Complex    real    =    createComplex(real    +    addend.getReal());    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  Real  real  =  real  +  addend.getReal();  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  real  +  addend.getReal();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  real  +  addend.getReal();	      Complex    real    =    createComplex(real    +    addend.getReal());    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	13	None	replace
12	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getImaginary());  [BUGGY]    imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(real  +  addend.getReal(),  real  +  addend.getImaginary());	  return    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  Real  =  addend.getReal();  imaginary  =  real.getImaginary();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  =  addend.getReal();  imaginary  =  real.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  addend.getReal();  imaginary  =  real.getImaginary();	      Real    =    real.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  Real  =  q.getReal();  imaginary  =  q.getImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  =  q.getReal();  imaginary  =  q.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  q.getReal();  imaginary  =  q.getImaginary();	      Real    =    real.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  Real  =  this.real.getReal();  imaginary  =  real.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  =  this.real.getReal();  imaginary  =  real.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  this.real.getReal();  imaginary  =  real.getImaginary();	      Real    =    real.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	12	None	replace
16	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getImaginary();	      Real    +    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	10	None	replace
17	[BUG]  [BUGGY]  Real  +  addend.getINF();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  +  addend.getINF();  imaginary  +  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getINF();  imaginary  +  addend.getImaginary();	      Real    +    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	10	None	replace
18	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getReal();  imaginary  +  addend.getImaginary();	      Real    +    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	10	None	replace
19	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getReal());  [CE]  [FE]        AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getReal());  [BUGGY]    imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getReal());	  return    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getReal());    	non-compiled	[CE]  	14	None	replace
20	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(real  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [BUGGY]    imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(real  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());	  return    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getReal());    	non-compiled	[CE]  ';'  expected	14	None	replace
21	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createReal(real,  imaginary  +  addend.getImaginary());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  imaginary  +  addend.getImaginary());	      Real    real    =    createReal(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary,  q);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createReal(real,  imaginary,  q);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  imaginary,  q);	      Real    real    =    createReal(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  Real  real  =  createReal(real,  q);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createReal(real,  q);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  q);	      Real    real    =    createReal(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  Real  real  =  createReal(real,  addend);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createReal(real,  addend);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  addend);	      Real    real    =    createReal(real);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());	      Complex    real    =    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());	      Complex    real    =    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  imaginary  +  addend.getReal());  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(real,  imaginary  +  addend.getReal());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  imaginary  +  addend.getReal());	      Real    real    =    createComplex(real,    imaginary);    	non-compiled	[CE]  not  a  statement	5	None	replace
28	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(real,  imaginary  +  addend.getImaginary());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  imaginary  +  addend.getImaginary());	      Real    real    =    createComplex(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  imaginary,  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(real,  imaginary,  addend.getReal());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  imaginary,  addend.getReal());	      Real    real    =    createComplex(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getMask());  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getMask());  [BUGGY]    imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getMask());	  return    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getMask());    	non-compiled	[CE]  not  a  statement	8	None	replace
31	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getMask());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getMask());  [BUGGY]    imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getMask());	  return    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getMask());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getImaginary(),  imaginary  +  addend.getMask());  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(real  +  addend.getImaginary(),  imaginary  +  addend.getMask());  [BUGGY]    imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(real  +  addend.getImaginary(),  imaginary  +  addend.getMask());	  return    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getMask());    	non-compiled	[CE]  not  a  statement	8	None	replace
33	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getImaginary());	      Real    +    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	11	None	replace
34	[BUG]  [BUGGY]  Real  +  addend.getINF();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  +  addend.getINF();  imaginary  +  addend.getImaginary());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getINF();  imaginary  +  addend.getImaginary());	      Real    +    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	11	None	replace
35	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getImaginary());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  -  addend.getReal();  imaginary  +  addend.getImaginary());	      Real    +    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	11	None	replace
36	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getImaginary();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal(),  imaginary  =  real  +  addend.getImaginary();	      Real    real    =    getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	16	None	replace
37	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getINF();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getINF();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real  +  addend.getINF();	      Real    real    =    getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	16	None	replace
38	[BUG]  [BUGGY]  Real  real  =  getInfinite();  imaginary  =  real  +  addend.getImaginary();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getInfinite();  imaginary  =  real  +  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getInfinite();  imaginary  =  real  +  addend.getImaginary();	      Real    real    =    getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	16	None	replace
39	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  addend);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  Real.create(real,  addend);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  addend);	      Real    real    =    Real.create(real);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  addend.getReal());  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  Real.create(real,  addend.getReal());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  addend.getReal());	      Real    real    =    Real.create(real);    	non-compiled	[CE]  not  a  statement	2	None	replace
41	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  q);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  Real.create(real,  q);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real,  q);	      Real    real    =    Real.create(real);    	non-compiled	[CE]  not  a  statement	2	None	replace
42	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.add(imaginary);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  real.add(imaginary);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real.add(imaginary);	      Real    real    =    getReal();    imaginary    =    real.add(real);    	non-compiled	[CE]  not  a  statement	18	None	replace
43	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  q.add(real);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  q.add(real);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  q.add(real);	      Real    real    =    getReal();    imaginary    =    real.add(real);    	non-compiled	[CE]  not  a  statement	18	None	replace
44	[BUG]  [BUGGY]  Real  real  =  getINF();  imaginary  =  real.add(real);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getINF();  imaginary  =  real.add(real);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getINF();  imaginary  =  real.add(real);	      Real    real    =    getReal();    imaginary    =    real.add(real);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
45	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getINFImaginary();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getINFImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real.getINFImaginary();	      Real    real    =    getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	15	None	replace
46	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getNaN();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getNaN();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real.getNaN();	      Real    real    =    getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	15	None	replace
47	[BUG]  [BUGGY]  Real  real  =  getINF();  imaginary  =  real.getImaginary();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getINF();  imaginary  =  real.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getINF();  imaginary  =  real.getImaginary();	      Real    real    =    getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	15	None	replace
48	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  addend.getReal());  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(real,  addend.getReal());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  addend.getReal());	      Real    real    =    createComplex(real,    imaginary);    	non-compiled	[CE]  not  a  statement	5	None	replace
49	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary,  real);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(imaginary,  real);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary,  real);	      Real    real    =    createComplex(real,    imaginary);    	non-compiled	[CE]  not  a  statement	5	None	replace
50	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  addend);  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(real,  addend);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  addend);	      Real    real    =    createComplex(real,    imaginary);    	non-compiled	[CE]  not  a  statement	5	None	replace
51	[BUG]  [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getINF());  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getINF());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal();  imaginary  +  addend.getINF());	      Real    +    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	11	None	replace
52	[BUG]  [BUGGY]  Real  =  imaginary.getReal();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  =  imaginary.getReal();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  imaginary.getReal();	      Real    =    real.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
53	[BUG]  [BUGGY]  Real  real  =  Real.create(real  +  addend.getReal());  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  Real.create(real  +  addend.getReal());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  Real.create(real  +  addend.getReal());	      Real    real    =    Real.create(real);    	non-compiled	[CE]  not  a  statement	2	None	replace
54	[BUG]  [BUGGY]  Real  real  =  getImaginary();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getImaginary();	      Real    real    =    getReal();    	non-compiled	[CE]  not  a  statement	4	None	replace
55	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getInfinite();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getInfinite();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real.getInfinite();	      Real    real    =    getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	15	None	replace
56	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());	      Complex    real    =    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	9	None	replace
57	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.add(real,  addend.getImaginary());  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  real.add(real,  addend.getImaginary());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real.add(real,  addend.getImaginary());	      Real    real    =    getReal();    imaginary    =    real.add(real);    	non-compiled	[CE]  not  a  statement	18	None	replace
58	[BUG]  [BUGGY]  Real  real  =  createReal(real  +  addend.getReal());  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createReal(real  +  addend.getReal());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real  +  addend.getReal());	      Real    real    =    createReal(real);    	non-compiled	[CE]  not  a  statement	1	None	replace
59	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createReal(imaginary);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary);	      Real    real    =    createReal(real);    	non-compiled	[CE]  not  a  statement	1	None	replace
60	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();	      Complex    real    =    createComplex(real    +    addend.getReal());    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	13	None	replace
61	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal());  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getReal());	      Complex    real    =    createComplex(real    +    addend.getReal());    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	13	None	replace
62	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  real);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createReal(imaginary,  real);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary,  real);	      Real    real    =    createReal(real,    imaginary);    	non-compiled	[CE]  not  a  statement	3	None	replace
63	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createReal(real,  imaginary  +  addend.getReal());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(real,  imaginary  +  addend.getReal());	      Real    real    =    createReal(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getNaN();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getNaN();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real  +  addend.getNaN();	      Real    real    =    getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
65	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getRandom();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getRandom();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real  +  addend.getRandom();	      Real    real    =    getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
66	[BUG]  [BUGGY]  Real  +  addend.getReal();  imaginary  =  addend.getImaginary();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  +  addend.getReal();  imaginary  =  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal();  imaginary  =  addend.getImaginary();	      Real    +    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	10	None	replace
67	[BUG]  [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getINF();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getINF();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal();  imaginary  +  addend.getINF();	      Real    +    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	10	None	replace
68	[BUG]  [BUGGY]  Real  real  =  createReal();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createReal();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal();	      Real    real    =    getReal();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary.add(real);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary.add(real);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  imaginary.add(real);	      Real    real    =    getReal();    imaginary    =    real.add(real);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
70	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real!=  null?  real.getImaginary()  :  null;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  real!=  null?  real.getImaginary()  :  null;  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real!=  null?  real.getImaginary()  :  null;	      Real    real    =    getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  Real  +  addend.getReal();  imaginary  =  addend.getImaginary());  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  +  addend.getReal();  imaginary  =  addend.getImaginary());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  +  addend.getReal();  imaginary  =  addend.getImaginary());	      Real    +    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	11	None	replace
72	[BUG]  [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary;  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  real.getReal();  imaginary  =  imaginary;	      Real    =    real.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  imaginary  -  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(real,  imaginary  -  addend.getReal());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real,  imaginary  -  addend.getReal());	      Real    real    =    createComplex(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  Real  real  =  createComplex(real);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(real);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(real);	      Real    real    =    createReal(real);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
75	[BUG]  [BUGGY]  real  +  addend.getReal();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  real  +  addend.getReal();  imaginary  +  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	real  +  addend.getReal();  imaginary  +  addend.getImaginary();	      Real    +    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	10	None	replace
76	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  /  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getReal();  imaginary  =  real  /  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getReal();  imaginary  =  real  /  addend.getImaginary();	      Real    real    =    getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
77	[BUG]  [BUGGY]  Real  real  =  getImaginary();  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  getImaginary();  imaginary  =  real  +  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  getImaginary();  imaginary  =  real  +  addend.getImaginary();	      Real    real    =    getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
78	[BUG]  [BUGGY]  Real  =  real.getImaginary();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  =  real.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  =  real.getImaginary();	      Real    =    real.getReal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
79	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal());  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal());	      Complex    real    =    createComplex(real    +    addend.getReal());    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
80	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();	      Complex    real    =    createComplex(real    +    addend.getReal());    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
81	[BUG]  [BUGGY]  Real  real  =  imaginary  +  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  imaginary  +  addend.getReal();  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  imaginary  +  addend.getReal();	      Complex    real    =    createComplex(real    +    addend.getReal());    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
82	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getInf());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getInf());  [BUGGY]    imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getInf());	  return    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getINF());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
83	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  imaginary);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }    [BUGGY]  Real  real  =  createReal(imaginary,  imaginary);  [BUGGY]    return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	162	163	2	replace	Real  real  =  createReal(imaginary,  imaginary);	      Real    real    =    createReal(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
