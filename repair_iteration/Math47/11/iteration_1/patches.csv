bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  c  =  d  *  c  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  *  c  +  1;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  *  c  +  1;	      double    c    =    d    *    c;    	non-compiled	[CE]  not  a  statement	15	None	replace
2	[BUG]  [BUGGY]  double  c  =  d  *  c  +  c;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  *  c  +  c;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  *  c  +  c;	      double    c    =    d    *    c;    	non-compiled	[CE]  not  a  statement	15	None	replace
3	[BUG]  [BUGGY]  double  q  =  c  /  d  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  q  =  c  /  d  +  1;  [BUGGY]    double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  c  /  d  +  1;	  double    q    =    d    /    c    +    1;    	non-compiled	[CE]  not  a  statement	7	None	replace
4	[BUG]  [BUGGY]  double  q  =  d  *  c  +  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  q  =  d  *  c  +  1;  [BUGGY]    double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  d  *  c  +  1;	  double    q    =    d    /    c    +    1;    	non-compiled	[CE]  not  a  statement	7	None	replace
5	[BUG]  [BUGGY]  double  c  =  d  *  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  *  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  *  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    real)/    denominator,    (real    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
6	[BUG]  [BUGGY]  double  c  =  denominator  /  d;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  denominator  /  d;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  denominator  /  d;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    real)/    denominator,    (real    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
7	[BUG]  [BUGGY]  double  d  =  c  /  d  +  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  d  =  c  /  d  +  1;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  d  =  c  /  d  +  1;	      double    d    =    c    /    d;    	non-compiled	[CE]  not  a  statement	16	None	replace
8	[BUG]  [BUGGY]  double  d  =  c  /  c;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  d  =  c  /  c;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  d  =  c  /  c;	      double    d    =    c    /    d;    	non-compiled	[CE]  not  a  statement	16	None	replace
9	[BUG]  [BUGGY]  double  c  =  d  /  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  /  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  /  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (imaginary  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    real)/    denominator,    (imaginary    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
10	[BUG]  [BUGGY]  double  c  =  d  *  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  *  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  *  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    real)/    denominator,    (imaginary    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
11	[BUG]  [BUGGY]  double  c  =  real  *  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  real  *  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  real  *  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    real)/    denominator,    (imaginary    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
12	[BUG]  [BUGGY]  double  c  =  d  %  c;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  %  c;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  %  c;	      double    c    =    d    -    c;    	non-compiled	[CE]  not  a  statement	10	None	replace
13	[BUG]  [BUGGY]  double  d  =  d  /  c  +  1;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  d  =  d  /  c  +  1;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  d  =  d  /  c  +  1;	      double    d    =    d    /    c;    	non-compiled	[CE]  not  a  statement	5	None	replace
14	[BUG]  [BUGGY]  double  d  =  d  *  c;  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  d  =  d  *  c;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  d  =  d  *  c;	      double    d    =    d    /    c;    	non-compiled	[CE]  not  a  statement	5	None	replace
15	[BUG]  [BUGGY]  double  q  =  d  *  d;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  q  =  d  *  d;  [BUGGY]    double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  d  *  d;	  double    q    =    d    /    d;    	non-compiled	[CE]  not  a  statement	17	None	replace
16	[BUG]  [BUGGY]  double  c  =  d  *  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  *  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  *  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    imaginary)/    denominator,    (real    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
17	[BUG]  [BUGGY]  double  c  =  real  *  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  real  *  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  real  *  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    imaginary)/    denominator,    (real    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
18	[BUG]  [BUGGY]  double  q  =  c  /  d  +  2;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  q  =  c  /  d  +  2;  [BUGGY]    double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  c  /  d  +  2;	  double    q    =    d    /    c    +    2;    	non-compiled	[CE]  not  a  statement	13	None	replace
19	[BUG]  [BUGGY]  double  q  =  d  *  c  +  2;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  q  =  d  *  c  +  2;  [BUGGY]    double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  d  *  c  +  2;	  double    q    =    d    /    c    +    2;    	non-compiled	[CE]  not  a  statement	13	None	replace
20	[BUG]  [BUGGY]  double  q  =  d  *  q  +  c;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  q  =  d  *  q  +  c;  [BUGGY]    double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  d  *  q  +  c;	  double    q    =    d    *    c;    	non-compiled	[CE]  not  a  statement	8	None	replace
21	[BUG]  [BUGGY]  double  q  =  d  *  q;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  q  =  d  *  q;  [BUGGY]    double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  d  *  q;	  double    q    =    d    *    c;    	non-compiled	[CE]  not  a  statement	8	None	replace
22	[BUG]  [BUGGY]  double  q  =  c  *  d;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  q  =  c  *  d;  [BUGGY]    double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  c  *  d;	  double    q    =    d    *    c;    	non-compiled	[CE]  not  a  statement	8	None	replace
23	[BUG]  [BUGGY]  double  q  =  d  *  c  +  c;  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  q  =  d  *  c  +  c;  [BUGGY]    double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  d  *  c  +  c;	  double    q    =    d    *    c;    	non-compiled	[CE]  not  a  statement	8	None	replace
24	[BUG]  [BUGGY]  double  c  =  d  /  c  +  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  /  c  +  1;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  /  c  +  1;	      double    c    =    d    /    c;    	non-compiled	[CE]  not  a  statement	1	None	replace
25	[BUG]  [BUGGY]  double  c  =  d  /  denominator;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  /  denominator;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  /  denominator;	      double    c    =    d    /    c;    	non-compiled	[CE]  not  a  statement	1	None	replace
26	[BUG]  [BUGGY]  Double  c  =  d  /  c  +  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  Double  c  =  d  /  c  +  1;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	Double  c  =  d  /  c  +  1;	      Double    c    =    d    /    c;    	non-compiled	[CE]  not  a  statement	9	None	replace
27	[BUG]  [BUGGY]  Double  c  =  d  *  c;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  Double  c  =  d  *  c;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	Double  c  =  d  *  c;	      Double    c    =    d    /    c;    	non-compiled	[CE]  not  a  statement	9	None	replace
28	[BUG]  [BUGGY]  Double  d  =  c  /  d;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  Double  d  =  c  /  d;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	Double  d  =  c  /  d;	      Double    d    =    d    /    c;    	non-compiled	[CE]  not  a  statement	14	None	replace
29	[BUG]  [BUGGY]  Double  d  =  d  /  c  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  Double  d  =  d  /  c  +  1;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	Double  d  =  d  /  c  +  1;	      Double    d    =    d    /    c;    	non-compiled	[CE]  not  a  statement	14	None	replace
30	[BUG]  [BUGGY]  double  c  =  d  /  c  +  denominator;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  /  c  +  denominator;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  /  c  +  denominator;	      double    c    =    d    /    c    +    real;    	non-compiled	[CE]  not  a  statement	12	None	replace
31	[BUG]  [BUGGY]  double  c  =  d  *  c  +  real;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  *  c  +  real;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  *  c  +  real;	      double    c    =    d    /    c    +    real;    	non-compiled	[CE]  not  a  statement	12	None	replace
32	[BUG]  [BUGGY]  double  c  =  c  /  d;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  c  /  d;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  c  /  d;	      double    c    =    c    /    c;    	non-compiled	[CE]  not  a  statement	11	None	replace
33	[BUG]  [BUGGY]  double  c  =  value  /  c;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  value  /  c;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  value  /  c;	      double    c    =    c    /    c;    	non-compiled	[CE]  not  a  statement	11	None	replace
34	[BUG]  [BUGGY]  double  c  =  cr  /  c;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  cr  /  c;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  cr  /  c;	      double    c    =    c    /    c;    	non-compiled	[CE]  not  a  statement	11	None	replace
35	[BUG]  [BUGGY]  double  q  =  c  /  d  +  c;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  q  =  c  /  d  +  c;  [BUGGY]    double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  c  /  d  +  c;	  double    q    =    c    /    d;    	non-compiled	[CE]  not  a  statement	6	None	replace
36	[BUG]  [BUGGY]  double  c  =  value  -  c;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  value  -  c;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  value  -  c;	      double    c    =    d    -    c;    	non-compiled	[CE]  not  a  statement	10	None	replace
37	[BUG]  [BUGGY]  Double  c  =  d  /  c  +  real;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  Double  c  =  d  /  c  +  real;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	Double  c  =  d  /  c  +  real;	      Double    c    =    d    /    c;    	non-compiled	[CE]  not  a  statement	9	None	replace
38	[BUG]  [BUGGY]  Double  c  =  d  /  real;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  Double  c  =  d  /  real;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	Double  c  =  d  /  real;	      Double    c    =    d    /    c;    	non-compiled	[CE]  not  a  statement	9	None	replace
39	[BUG]  [BUGGY]  double  d  =  d  /  c  +  2;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  d  =  d  /  c  +  2;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  d  =  d  /  c  +  2;	      double    d    =    d    /    c;    	non-compiled	[CE]  not  a  statement	5	None	replace
40	[BUG]  [BUGGY]  Double  d  =  d  /  c  +  2;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  Double  d  =  d  /  c  +  2;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	Double  d  =  d  /  c  +  2;	      Double    d    =    d    /    c;    	non-compiled	[CE]  not  a  statement	14	None	replace
41	[BUG]  [BUGGY]  double  c  =  real  /  c;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  real  /  c;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  real  /  c;	      double    c    =    c    /    c;    	non-compiled	[CE]  not  a  statement	11	None	replace
42	[BUG]  [BUGGY]  double  c  =  p  /  c;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  p  /  c;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  p  /  c;	      double    c    =    c    /    c;    	non-compiled	[CE]  not  a  statement	11	None	replace
43	[BUG]  [BUGGY]  double  c  =  real  *  q  +  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  real  *  q  +  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  real  *  q  +  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    real)/    denominator,    (real    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
44	[BUG]  [BUGGY]  double  c  =  real  *  q  +  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  real  *  q  +  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  real  *  q  +  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    real)/    denominator,    (imaginary    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
45	[BUG]  [BUGGY]  double  c  =  real  *  q;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  real  *  q;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  real  *  q;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    real)/    denominator,    (imaginary    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
46	[BUG]  [BUGGY]  double  c  =  real  *  q  +  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  real  *  q  +  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  real  *  q  +  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    imaginary)/    denominator,    (real    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
47	[BUG]  [BUGGY]  double  c  =  d  /  c  +  imaginary;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  /  c  +  imaginary;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  /  c  +  imaginary;	      double    c    =    d    /    c    +    real;    	non-compiled	[CE]  not  a  statement	12	None	replace
48	[BUG]  [BUGGY]  Double  c  =  d  /  d;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  Double  c  =  d  /  d;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	Double  c  =  d  /  d;	      Double    c    =    d    /    c;    	non-compiled	[CE]  not  a  statement	9	None	replace
49	[BUG]  [BUGGY]  double  d  =  c  /  d  +  2;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  d  =  c  /  d  +  2;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  d  =  c  /  d  +  2;	      double    d    =    c    /    d;    	non-compiled	[CE]  not  a  statement	16	None	replace
50	[BUG]  [BUGGY]  Double  d  =  d  *  c;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  Double  d  =  d  *  c;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	Double  d  =  d  *  c;	      Double    d    =    d    /    c;    	non-compiled	[CE]  not  a  statement	14	None	replace
51	[BUG]  [BUGGY]  double  c  =  d  -  c  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  -  c  +  1;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  -  c  +  1;	      double    c    =    d    -    c;    	non-compiled	[CE]  not  a  statement	10	None	replace
52	[BUG]  [BUGGY]  double  c  =  d  *  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  *  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  *  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (imaginary  *  q  -  real)/  denominator);	      double    c    =    d    /    c;    return    createComplex((    real    *    q    +    real)/    denominator,    (imaginary    *    q    -    real)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
53	[BUG]  [BUGGY]  double  c  =  Math.pow(10,  c);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  Math.pow(10,  c);  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  Math.pow(10,  c);	      double    c    =    c    /    c;    	non-compiled	[CE]  not  a  statement	11	None	replace
54	[BUG]  [BUGGY]  double  c  =  d  /  d;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {    [BUGGY]  double  c  =  d  /  d;  [BUGGY]    double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  c  =  d  /  d;	      double    c    =    d    /    c;    	non-compiled	[CE]  not  a  statement	1	None	replace
