bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double  c  =  d  /  c;  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    double  c  =  d  /  c;  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    double  c  =  d  /  c;		non-compiled	[CE]  not  a  statement	22	None	add
2	[BUG]  [BUGGY]    double  c  =  d  /  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    double  c  =  d  /  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    double  c  =  d  /  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (real  *  q  -  real)/  denominator);		non-compiled	[CE]  not  a  statement	22	None	add
3	[BUG]  [BUGGY]    double  c  =  d  /  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    double  c  =  d  /  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    double  c  =  d  /  c;  return  createComplex((  real  *  q  +  real)/  denominator,  (imaginary  *  q  -  real)/  denominator);		non-compiled	[CE]  not  a  statement	22	None	add
4	[BUG]  [BUGGY]    double  c  =  d  /  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);  [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    double  c  =  d  /  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    double  c  =  d  /  c;  return  createComplex((  real  *  q  +  imaginary)/  denominator,  (real  *  q  -  real)/  denominator);		non-compiled	[CE]  not  a  statement	22	None	add
5	[BUG]  [BUGGY]    double  d  =  d  /  c;  [CE]  not  a  statement  [FE]            AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    double  d  =  d  /  c;  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    double  d  =  d  /  c;		non-compiled	[CE]  not  a  statement	22	None	add
6	[BUG]  [BUGGY]  double  q  =  c  /  d;  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]  double  q  =  c  /  d;  [BUGGY]  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  c  /  d;	double  q  =  d  /  c;  	non-compiled	[CE]  not  a  statement	21	None	replace
7	[BUG]  [BUGGY]  double  q  =  d  /  c  +  1;  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]  double  q  =  d  /  c  +  1;  [BUGGY]  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  d  /  c  +  1;	double  q  =  d  /  c;  	non-compiled	[CE]  not  a  statement	21	None	replace
8	[BUG]  [BUGGY]  double  q  =  d  *  c;  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]  double  q  =  d  *  c;  [BUGGY]  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  d  *  c;	double  q  =  d  /  c;  	non-compiled	[CE]  not  a  statement	21	None	replace
9	[BUG]  [BUGGY]    Double  c  =  d  /  c;  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    Double  c  =  d  /  c;  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    Double  c  =  d  /  c;		non-compiled	[CE]  not  a  statement	22	None	add
10	[BUG]  [BUGGY]    double  c  =  d  -  c;  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    double  c  =  d  -  c;  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    double  c  =  d  -  c;		non-compiled	[CE]  not  a  statement	22	None	add
11	[BUG]  [BUGGY]    double  c  =  c  /  c;  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    double  c  =  c  /  c;  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    double  c  =  c  /  c;		non-compiled	[CE]  not  a  statement	22	None	add
12	[BUG]  [BUGGY]    double  c  =  d  /  c  +  real;  [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    double  c  =  d  /  c  +  real;  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    double  c  =  d  /  c  +  real;		non-compiled	[CE]  not  a  statement	22	None	add
13	[BUG]  [BUGGY]  double  q  =  d  /  c  +  2;  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]  double  q  =  d  /  c  +  2;  [BUGGY]  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  d  /  c  +  2;	double  q  =  d  /  c;  	non-compiled	[CE]  not  a  statement	21	None	replace
14	[BUG]  [BUGGY]    Double  d  =  d  /  c;  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    Double  d  =  d  /  c;  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    Double  d  =  d  /  c;		non-compiled	[CE]  not  a  statement	22	None	add
15	[BUG]  [BUGGY]    double  c  =  d  *  c;  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    double  c  =  d  *  c;  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    double  c  =  d  *  c;		non-compiled	[CE]  not  a  statement	22	None	add
16	[BUG]  [BUGGY]    double  d  =  c  /  d;  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]    double  d  =  c  /  d;  [BUGGY]  double  q  =  d  /  c;  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	    double  d  =  c  /  d;		non-compiled	[CE]  not  a  statement	22	None	add
17	[BUG]  [BUGGY]  double  q  =  d  /  d;  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  if  (FastMath.abs(c)  <  FastMath.abs(d))  {  double  q  =  c  /  d;  double  denominator  =  c  *  q  +  d;  return  createComplex((real  *  q  +  imaginary)  /  denominator,  (imaginary  *  q  -  real)  /  denominator);  }  else  {  [BUGGY]  double  q  =  d  /  d;  [BUGGY]  double  denominator  =  d  *  q  +  c;  return  createComplex((imaginary  *  q  +  real)  /  denominator,  (imaginary  -  real  *  q)  /  denominator);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java	0.2672612419124244	273	273	2	replace	double  q  =  d  /  d;	double  q  =  d  /  c;  	non-compiled	[CE]  not  a  statement	21	None	replace
