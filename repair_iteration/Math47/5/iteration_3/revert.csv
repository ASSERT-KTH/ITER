projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkNotNull(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkNotNull(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkNotNull(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor!=null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251if(divisor!=null){divisor=newComplex(real);}else{divisor.setImaginary(imaginary);}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isNaN(),divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getDenominator(),divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=divisor.getDenominator(),divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN(),divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN()&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)this.divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)super.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)denominator.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251NeighborDivisor<N>divisor=newNeighborDivisor<N>(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor==null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor!=null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor==null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getINFDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkNotNull(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkArgument(divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkState(divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()>=divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisorInfinite();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)denominator.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)divisor.getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisorInstance();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isNaN()&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,ZERO);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkNotNull(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkArgument(divisor!=null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDivisor(divisor!=null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==real.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getDenominator(),imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,ZERO);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==0.0);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkNotNull(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor.getDenominator(),divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor2();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real).getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDeniminator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisor=divisor.getDivisors().iterator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominator<N>divisor=newMutableDenominator(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisor=divisors.iterator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)this.denominator.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(real,divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isInfinite(),divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isNaN(),divisor.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isNaN(),divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)this.super.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(Divisor.ZERO);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(Divisor.NaN);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(imaginary,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Realdivisor=getDivisor(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,imaginary,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,imaginary,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(imaginary,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominator<N>divisor=newMutableDenominator(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominator<N>divisor=newMutableDenominator(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominator<N>divisor=newMutableDenominator(real,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominator<N>divisor=newMutableDenominator(real,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(real,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=divisor.getDenominator(),divisor.getImaginary());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=divisor.getName(),divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=divisor.getDenominator(),divisor.getDestinator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,c,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(c,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isInfinite()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isNaN()||divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(imaginary,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,ONE);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=real.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,ONE);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,INF);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,1);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkArgument(divisor.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkArgument(divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkArgument(divisor.isNaN()&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==0.0||divisor.getDenominator()==0.0);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=0.0);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getDenominator(),divisor.getImaginary());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getName(),divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getDenominator(),divisor.getDestinator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,INF);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,ZERO,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Realdivisor=getDenominator(real,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(c,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)this.denominator.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor.getDenominator(),divisor.getImaginary());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor.getDenominator(),real.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor.getDenominator(),divisor.getDestinator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isInfinite()&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Realdivisor=getDivisor(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251SimpleDivisordivisor=getDivisor(real,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor.getDenominator(),imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor.getDenominator(),real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isInfinite()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN()||divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(c,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,c,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,imaginary,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,imaginary,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor,imaginary,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(denominator,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,imaginary,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,q);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,imaginary,ZERO);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)divisor.getDestinator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)divisor.getINFDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isInfinite()&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isReal()&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isInfinite(),divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN(),divisor.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN(),divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real).getINFDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real).getDivisor();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real).getDestination();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)super.divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(denominator==null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisorInfinite(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkArgument(divisor==null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkDenominator(divisor!=null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDeniminator(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDeniminator(0);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor1();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor0();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor3();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)this.divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisor=this.divisors.iterator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisors=this.divisors.iterator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisor=this.denominators.iterator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDivisor(divisor==null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkState(divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkState(divisor.isInfinite()||divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkState(divisor.isInfinite()&&isNaN);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251NeighborDivisor<N>divisor=newNeighborDivisor<N>(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251NeighborDivisor<N>divisor=newNeighborDivisor<N>(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251NeighborDivisor<N>divisor=newNeighborDivisor<N>(real,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisor=divisor.getINFDivisors().iterator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisor=divisor.getDenominators().iterator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isInfinite()||divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isInfinite()&&isNaN);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isInfinite(),divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=divisor.getDestinator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getDenominator(),real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=divisor.getDenominator(),real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getDenominator(),imaginary,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(real,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(divisor,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor,real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(denominator,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisorInstance(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisorInstance(false);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominatorInstance();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real).getDestinator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDeniminator().getINFDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisor=divisor.getNegativeDivisors().iterator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(imaginary,ZERO);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,1);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isDenominator()&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251SimpleDivisordivisor=getDivisor(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getDenominator(),divisor.getName());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominator<N>divisor=newMutableDenominator(imaginary,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(real,divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251SimpleDivisordivisor=getDivisor(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251SimpleDivisordivisor=getDivisor(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(imaginary,ZERO);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,imaginary,ZERO);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,imaginary,ONE);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,imaginary,ZERO);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(imaginary,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkDigits(divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)getDivisor(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor,q);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,imaginary,ONE);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,imaginary,q);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor>=null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==imaginary,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==real.getDenominator(),imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==imaginary.getDenominator(),imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(imaginary,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(Imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251SimpleDivisordivisor=getDivisor(real,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(imaginary,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(imaginary,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDigits(divisor.getDenominator()==0.0);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDigits(divisor.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251SimpleDivisordivisor=getDenominator(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(imaginary,ZERO);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isInfinite()&&!isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN(),divisor.isNaN()+1);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251SimpleDivisordivisor=getDivisor(real,ONE);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor.isNaN(),divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkArgument(divisor!=null&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkArgument(divisor!=null&&divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkInfinite(divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)divisor.getINF();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)this.divisor.getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDeniminator().getDeniminator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,c),denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(imaginary,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN()||divisor.isNaN()&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,imaginary,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor!=null&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,c)-1;
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,c+1);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=divisor.getDenominator(),imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDivisor(divisor.getDenominator()==0.0);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN()+divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisors=divisors.iterator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getNumerator(),divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkNotNull(denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isInfinite()&&divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(real,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Ilerator<Complex>divisor=divisor.getDivisors().iterator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisor=divisor.getDivisors();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDigit(divisor.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,c).getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,c)-1;
