projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkNotNull(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkNotNull(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkNotNull(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor!=null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251if(divisor!=null){divisor=newComplex(real);}else{divisor.setImaginary(imaginary);}
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isNaN(),divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getDenominator(),divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=divisor.getDenominator(),divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN()||divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN(),divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkArgument(divisor.isNaN()&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)this.divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)super.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=(Divisor)denominator.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor,real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251NeighborDivisor<N>divisor=newNeighborDivisor<N>(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=newMutableDenominator(divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor==null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor!=null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor==null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getINFDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()!=denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkNotNull(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkArgument(divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkState(divisor.isInfinite());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,denominator);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()>=divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisorInfinite();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)divisor.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)denominator.clone();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominatordivisor=(MutableDenominator)divisor.getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisorInstance();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.isNaN()&&divisor.isNaN());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Divisordivisor=getDivisor(real,ZERO);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkNotNull(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Real.checkArgument(divisor!=null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDivisor(divisor!=null);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==real.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==divisor.getDenominator(),imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor(real,ZERO);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkState(divisor.getDenominator()==0.0);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkNotNull(imaginary);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor,c);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MathUtils.checkDenominator(divisor.getDenominator(),divisor.getDenominator());
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDivisor2();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDenominator(real).getDenominator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Complexdivisor=getDeniminator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisor=divisor.getDivisors().iterator();
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251MutableDenominator<N>divisor=newMutableDenominator(real);
projects/Math47/src/main/java/org/apache/commons/math/complex/Complex.java251Iterator<Complex>divisor=divisors.iterator();
