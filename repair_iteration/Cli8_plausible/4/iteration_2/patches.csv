bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Text  p  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  p  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  p  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    p    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
2	[BUG]  [BUGGY]  p  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  p  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  p  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	p  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    p    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol  p	115	None	replace
3	[BUG]  [BUGGY]  FontMetrics  fmt  =  padding  +  text.substring(pos,  width).trim();  Text  p  =  fmt  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  FontMetrics  fmt  =  padding  +  text.substring(pos,  width).trim();  Text  p  =  fmt  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	FontMetrics  fmt  =  padding  +  text.substring(pos,  width).trim();  Text  p  =  fmt  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    p    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
4	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  max);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  max);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  max);	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop    +    padding);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	103	None	replace
5	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  text.length());  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  text.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  text.length());	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop    +    padding);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	103	None	replace
6	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  nextLineTabStop.trim();  [CE]  int  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  nextLineTabStop.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(0,  pos)+  nextLineTabStop.trim();	  text    =    padding    +    text.substring(0,    pos)+    padding.trim();    	non-compiled	[CE]  int  cannot  be  dereferenced	95	None	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  defaultNewLine.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(0,  pos)+  defaultNewLine.trim();	  text    =    padding    +    text.substring(0,    pos)+    padding.trim();    	compilable	  [FE]  ComparisonFailure  	95	2	replace
8	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  defaultNewLine.trim();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  defaultNewLine.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(0,  pos)+  defaultNewLine.trim();	  text    =    padding    +    text.substring(0,    pos)+    padding.trim();    	compilable	  [FE]  ComparisonFailure  	95	2	replace
9	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  this.padding.trim();  [CE]  cannot  find  symbol  padding  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  this.padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(0,  pos)+  this.padding.trim();	  text    =    padding    +    text.substring(0,    pos)+    padding.trim();    	non-compiled	[CE]  cannot  find  symbol  padding	95	None	replace
10	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
11	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
12	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
13	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
14	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
15	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
16	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
17	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
18	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  Text  sb  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  Text  sb  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    Text  sb  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
19	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	85	2	add
20	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	85	2	add
21	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  defaultLineTabStop  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  defaultLineTabStop	85	None	add
22	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	85	None	add
23	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  [CE]  cannot  find  symbol  height  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  height	85	None	add
24	[BUG]  [BUGGY]  Text  pos  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  pos  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  pos  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    pos    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
25	[BUG]  [BUGGY]  pos  =  padding  +  text.substring(pos,  width).trim();  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    pos    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  incompatible  types	59	None	replace
26	[BUG]  [BUGGY]  text.substring(pos,  width).trim();  Text  pos  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text.substring(pos,  width).trim();  Text  pos  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text.substring(pos,  width).trim();  Text  pos  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    pos    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
27	[BUG]  [BUGGY]  sb  =  pos  +  text.substring(0,  padding).trim();  [CE]  no  suitable  method  found  for  substring(int,String)  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  pos  +  text.substring(0,  padding).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  pos  +  text.substring(0,  padding).trim();	  sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,String)	11	None	replace
28	[BUG]  [BUGGY]  sb  =  pos  +  padding.substring(0,  padding).trim();  [CE]  no  suitable  method  found  for  substring(int,String)  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  pos  +  padding.substring(0,  padding).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  pos  +  padding.substring(0,  padding).trim();	  sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,String)	11	None	replace
29	[BUG]  [BUGGY]  sb  =  padding  +  text.substring(0,  pos  +  1).trim();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  padding  +  text.substring(0,  pos  +  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  text.substring(0,  pos  +  1).trim();	  sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  incompatible  types	11	None	replace
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);	  timeout    	compilable	  [FE]  ComparisonFailure  	100	2	add
31	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);	  timeout    	compilable	  [FE]  ComparisonFailure  	100	2	add
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	100	2	add
33	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	100	2	add
34	[BUG]  [BUGGY]  text  = " "  +  padding).trim();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  = " "  +  padding).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  = " "  +  padding).trim();	  text    =    padding    +    text).trim();    	non-compiled	[CE]  	106	None	replace
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	133	2	add
36	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	133	2	add
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	133	2	add
38	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	133	2	add
39	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
40	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
41	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos!=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos!=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	133	2	add
42	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos!=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos!=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos!=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	133	2	add
43	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(this.defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos  +  1))).append(this.defaultNewLine);	          sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    	compilable	timeout	25	1	replace
44	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(this.defaultNewLine);  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(this.defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append(this.defaultNewLine);	          sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    	compilable	timeout	25	1	replace
45	[BUG]  [BUGGY]  TextUtilities.textPadding(text,  width  +  defaultNewLine).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.textPadding(text,  width  +  defaultNewLine).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.textPadding(text,  width  +  defaultNewLine).trim();	  text    =    padding    +    defaultNewLine).trim();    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	52	None	replace
46	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  if(nextLineTabStop!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	75	None	replace
47	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  NUMBER_SIZE);  [CE]  cannot  find  symbol  NUMBER_SIZE  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  NUMBER_SIZE);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  NUMBER_SIZE);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    NUMBER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_SIZE	62	None	replace
48	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.defaultNewLine);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    NUMBER_SIZE);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	62	None	replace
49	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	45	2	add
50	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	45	2	add
51	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	45	2	add
52	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	45	2	add
53	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1));  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1));	  timeout    	non-compiled	[CE]  ';'  expected	45	None	add
54	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	45	2	add
55	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	45	2	add
56	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
57	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
58	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
59	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
60	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
61	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
62	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
63	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
64	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	20	None	add
65	[BUG]  [BUGGY]  text  =  padding  +  nextLineTabStop.substring(pos,  width).trim();  [CE]  int  cannot  be  dereferenced  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  nextLineTabStop.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  nextLineTabStop.substring(pos,  width).trim();	  text    =    padding    +    nextLineTabStop.substring(pos,    pos).trim();    	non-compiled	[CE]  int  cannot  be  dereferenced	76	None	replace
66	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	73	1	add
67	[BUG]  [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [FE]  ComparisonFailure  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	73	1	add
68	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	73	2	add
69	[BUG]  [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	73	2	add
70	[BUG]  [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  }  [CE]  cannot  find  symbol  height  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  height	73	None	add
71	[BUG]  [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  If(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  If(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    If(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  timeout    	non-compiled	[CE]  ';'  expected	73	None	add
72	[BUG]  [BUGGY]  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  this.defaultDescPad);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	21	1	replace
73	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.defaultDescPad);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	21	1	replace
74	[BUG]  [BUGGY]  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	21	1	replace
75	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	21	1	replace
76	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	21	None	replace
77	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	21	None	replace
78	[BUG]  [BUGGY]  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  TextUtilities  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.writePadding(text,  width,  nextLineTabStop);	  text    =    padding    +    text.substring(pos,    pos).trim();    TextUtilities.writePadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	130	None	replace
79	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);	  text    =    padding    +    text.substring(pos,    pos).trim();    TextUtilities.writePadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	130	None	replace
80	[BUG]  [BUGGY]  sb.append(text.substring(pos,  pos).trim());  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  TextUtilities  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(text.substring(pos,  pos).trim());  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(text.substring(pos,  pos).trim());  TextUtilities.writePadding(text,  width,  nextLineTabStop);	  text    =    padding    +    text.substring(pos,    pos).trim();    TextUtilities.writePadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	130	None	replace
81	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop));	  pos    =    findWrapPos(text,    width    +    text.substring(pos));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	42	None	replace
82	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop);	  pos    =    findWrapPos(text,    width    +    text.substring(pos));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	42	None	replace
83	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  padding);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos),  padding);	  pos    =    findWrapPos(text,    width    +    text.substring(pos));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	42	None	replace
84	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  padding,  text.substring(pos));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  padding,  text.substring(pos));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  padding,  text.substring(pos));	  pos    =    findWrapPos(text,    width    +    text.substring(pos));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	42	None	replace
85	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  padding,  nextLineTabStop);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  padding,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  padding,  nextLineTabStop);	  int    pos    =    findWrapPos(text,    width,    padding);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	39	None	replace
86	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	125	1	add
87	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	125	1	add
88	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	125	2	add
89	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	125	2	add
90	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [CE]  cannot  find  symbol  defaultLineTabStop  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  0);	  	non-compiled	[CE]  cannot  find  symbol  defaultLineTabStop	125	None	add
91	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  0);  [CE]  cannot  find  symbol  height  [FE]          ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  0);	  	non-compiled	[CE]  cannot  find  symbol  height	125	None	add
92	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  defaultDescPad);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  defaultDescPad);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	125	1	add
93	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  defaultDescPad);  pos  =  findWrapPos(text,  width,  0);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  defaultDescPad);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  defaultDescPad);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	125	1	add
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  0);	  timeout    	compilable	  [FE]  ComparisonFailure  	117	1	add
95	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  [FE]  ComparisonFailure  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  0);	  timeout    	compilable	  [FE]  ComparisonFailure  	117	1	add
96	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0,  0);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  0,  0);	  timeout    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	117	None	add
97	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  0);  int  pos  =  findWrapPos(text,  width,  0);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  0);  int  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    0);    int  pos  =  findWrapPos(text,  width,  0);	  timeout    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	117	None	add
98	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  length,  0);  [CE]  cannot  find  symbol  length  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  length,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  length,  0);	  timeout    	non-compiled	[CE]  cannot  find  symbol  length	117	None	add
99	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	2	add
100	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	2	add
101	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  TextBuffer  sb  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  TextBuffer  sb  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    TextBuffer  sb  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
102	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  TextBuffer  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  TextBuffer  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    TextBuffer  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
103	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  pos  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  pos  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    pos  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  	non-compiled	[CE]  incompatible  types	9	None	add
104	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  TextUtilities.checkState(pos  <  =  0);  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  TextUtilities.checkState(pos  <  =  0);  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    TextUtilities.checkState(pos  <  =  0);  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
105	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    timeout    	compilable	timeout	27	1	replace
106	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }  timeout  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    timeout    	compilable	timeout	27	1	replace
107	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  max);  [CE]  cannot  find  symbol  max  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  max);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  max);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    firstLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	82	None	replace
108	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  padding);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  padding);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    firstLineTabStop);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	82	None	replace
109	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  pos  =  findWrapPos(text,  width,  text.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    text.length());    pos  =  findWrapPos(text,  width,  text.length());	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	49	2	add
110	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  pos  =  findWrapPos(text,  width,  text.length());  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  pos  =  findWrapPos(text,  width,  text.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    text.length());    pos  =  findWrapPos(text,  width,  text.length());	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	49	2	add
111	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  pos  =  findWrapPos(text,  length,  text.length());  [CE]  cannot  find  symbol  length  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  pos  =  findWrapPos(text,  length,  text.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    text.length());    pos  =  findWrapPos(text,  length,  text.length());	  timeout    	non-compiled	[CE]  cannot  find  symbol  length	49	None	add
112	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  pos  =  findWrapPos(text,  height,  text.length());  [CE]  cannot  find  symbol  height  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  pos  =  findWrapPos(text,  height,  text.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    text.length());    pos  =  findWrapPos(text,  height,  text.length());	  timeout    	non-compiled	[CE]  cannot  find  symbol  height	49	None	add
113	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  pos  =  findWrapPos(text,  width,  Text.length());  [CE]  cannot  find  symbol  Text  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  pos  =  findWrapPos(text,  width,  Text.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    text.length());    pos  =  findWrapPos(text,  width,  Text.length());	  timeout    	non-compiled	[CE]  cannot  find  symbol  Text	49	None	add
114	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text    =    padding    +    text.substring(0,    pos)+    padding.trim();    text  =  padding  +  text.substring(0,  pos)+  padding.trim();	  	compilable	  [FE]  ComparisonFailure  	94	2	add
115	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos)+    padding.trim();    text  =  padding  +  text.substring(0,  pos)+  padding.trim();	  	compilable	  [FE]  ComparisonFailure  	94	2	add
116	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextBuffer  padding  =  padding  +  text.substring(0,  pos)+  padding.trim();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextBuffer  padding  =  padding  +  text.substring(0,  pos)+  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos)+    padding.trim();    TextBuffer  padding  =  padding  +  text.substring(0,  pos)+  padding.trim();	  	non-compiled	[CE]  cannot  find  symbol	94	None	add
117	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  pos  =  padding  +  text.substring(0,  pos)+  padding.trim();  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  pos  =  padding  +  text.substring(0,  pos)+  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos)+    padding.trim();    pos  =  padding  +  text.substring(0,  pos)+  padding.trim();	  	non-compiled	[CE]  incompatible  types	94	None	add
118	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextUtilities.appendPadding(text.substring(0,  pos)+  padding.trim();  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextUtilities.appendPadding(text.substring(0,  pos)+  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos)+    padding.trim();    TextUtilities.appendPadding(text.substring(0,  pos)+  padding.trim();	  	non-compiled	[CE]  ')'  expected	94	None	add
119	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextUtilities.appendPadding(text.substring(0,  pos)+  padding.trim());  [CE]  cannot  find  symbol  TextUtilities  [FE]            ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextUtilities.appendPadding(text.substring(0,  pos)+  padding.trim());  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos)+    padding.trim();    TextUtilities.appendPadding(text.substring(0,  pos)+  padding.trim());	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	94	None	add
120	[BUG]  [BUGGY]  text  =  this.defaultNewLine  +  padding).trim();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  this.defaultNewLine  +  padding).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  this.defaultNewLine  +  padding).trim();	  text    =    padding    +    this.defaultNewLine).trim();    	non-compiled	[CE]  ';'  expected	77	None	replace
121	[BUG]  [BUGGY]  text  +  this.defaultNewLine).trim();  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  +  this.defaultNewLine).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  +  this.defaultNewLine).trim();	  text    =    padding    +    this.defaultNewLine).trim();    	non-compiled	[CE]  not  a  statement	77	None	replace
122	[BUG]  [BUGGY]  Text  sb  =  text  +  padding.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  sb  =  text  +  padding.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  text  +  padding.substring(0,  pos).trim();	  Text    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
123	[BUG]  [BUGGY]  Text  sb  =  padding  +  nextLineTabStop.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  sb  =  padding  +  nextLineTabStop.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  padding  +  nextLineTabStop.substring(0,  pos).trim();	  Text    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
124	[BUG]  [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos)+  padding.trim();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos)+  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  padding  +  text.substring(0,  pos)+  padding.trim();	  Text    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
125	[BUG]  [BUGGY]  Text  p  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  p  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  p  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    Text    p    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
126	[BUG]  [BUGGY]  p  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  p  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  p  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	p  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    Text    p    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol  p	119	None	replace
127	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	24	2	add
128	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	24	2	add
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	24	2	add
130	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	24	2	add
131	[BUG]  [BUGGY]  TextUtilities.appendPadding(text.substring(pos,  width).trim();  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.appendPadding(text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.appendPadding(text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.appendPadding(text.substring(pos,    width).trim();    	non-compiled	[CE]  ')'  expected	58	None	replace
132	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  width)).append(defaultNewLine);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  width)).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,  width)).append(defaultNewLine);	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.appendPadding(text.substring(pos,    width).trim();    	non-compiled	[CE]  ')'  expected	58	None	replace
133	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(text.substring(pos,  width).trim());  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(text.substring(pos,  width).trim());	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.appendPadding(text.substring(pos,    width).trim();    	compilable	timeout	58	1	replace
134	[BUG]  [BUGGY]  sb.append(text.substring(pos,  width).trim());  timeout  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(text.substring(pos,  width).trim());  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(text.substring(pos,  width).trim());	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.appendPadding(text.substring(pos,    width).trim();    	compilable	timeout	58	1	replace
135	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop  -  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(pos,  nextLineTabStop  -  1).trim();	  text    =    padding    +    text.substring(pos,    width    -    1).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	113	2	replace
136	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop  -  1).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop  -  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(pos,  nextLineTabStop  -  1).trim();	  text    =    padding    +    text.substring(pos,    width    -    1).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	113	2	replace
137	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  pos  -1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(pos,  pos  -1).trim();	  text    =    padding    +    text.substring(pos,    width    -    1).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	113	2	replace
138	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos  -1).trim();  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  pos  -1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(pos,  pos  -1).trim();	  text    =    padding    +    text.substring(pos,    width    -    1).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	113	2	replace
139	[BUG]  [BUGGY]  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  pos);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  pos);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	122	1	replace
140	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  pos);  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  pos);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  pos);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	122	1	replace
141	[BUG]  [BUGGY]  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	122	1	replace
142	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	122	1	replace
143	[BUG]  [BUGGY]  timeout  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	122	1	replace
144	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  }  timeout  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	122	1	replace
145	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	74	None	replace
146	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	74	None	replace
147	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(pos));  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(pos));  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text.substring(pos));  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	74	None	replace
148	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	2	add
149	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	2	add
150	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	2	add
151	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	2	add
152	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding  >=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding  >=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    if(padding  >=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	71	None	add
153	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  }  [CE]  cannot  find  symbol  height  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  height	71	None	add
154	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);	  sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    timeout    	compilable	timeout	90	1	replace
155	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,  pos  +  1))).append(defaultNewLine);	  sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    timeout    	compilable	timeout	90	1	replace
156	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);	  sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    timeout    	compilable	timeout	90	1	replace
157	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);	  sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    timeout    	compilable	timeout	90	1	replace
158	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).toUpperCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(0,  pos).toUpperCase();	  text    =    padding    +    text.substring(0,    pos).toLowerCase();    	compilable	  [FE]  ComparisonFailure  	109	2	replace
159	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).toUpperCase();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).toUpperCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(0,  pos).toUpperCase();	  text    =    padding    +    text.substring(0,    pos).toLowerCase();    	compilable	  [FE]  ComparisonFailure  	109	2	replace
160	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).toLowerCase();  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos)).toLowerCase();	  text    =    padding    +    text.substring(0,    pos).toLowerCase();    	non-compiled	[CE]  ')'  expected	109	None	replace
161	[BUG]  [BUGGY]  sb  =  padding  +  text.substring(0,  pos).toLowerCase();  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  text.substring(0,  pos).toLowerCase();	  text    =    padding    +    text.substring(0,    pos).toLowerCase();    	non-compiled	[CE]  incompatible  types	109	None	replace
162	[BUG]  [BUGGY]  TextUtilities.writePaint(text,  width  +  nextLineTabStop).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.writePaint(text,  width  +  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.writePaint(text,  width  +  nextLineTabStop).trim();	  text    =    width    +    nextLineTabStop).trim();    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	53	None	replace
163	[BUG]  [BUGGY]  pos  =  width  +  nextLineTabStop).trim();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  width  +  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  width  +  nextLineTabStop).trim();	  text    =    width    +    nextLineTabStop).trim();    	non-compiled	[CE]  ';'  expected	53	None	replace
164	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  width,  padding);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  width,  padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos),  width,  padding);	  pos    =    findWrapPos(text.substring(0,    pos),    padding);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	13	None	replace
165	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text.substring(0,  pos),  width,  nextLineTabStop);	  pos    =    findWrapPos(text.substring(0,    pos),    padding);    	compilable	timeout	13	1	replace
166	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  width,  nextLineTabStop);  timeout  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos),  width,  nextLineTabStop);	  pos    =    findWrapPos(text.substring(0,    pos),    padding);    	compilable	timeout	13	1	replace
167	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  padding,  width);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  padding,  width);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos),  padding,  width);	  pos    =    findWrapPos(text.substring(0,    pos),    padding);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	13	None	replace
168	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  }  [CE]  cannot  find  symbol  height  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    height,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  height	17	None	replace
169	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  [CE]  cannot  find  symbol  height  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    height,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  height	17	None	replace
170	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  [CE]  cannot  find  symbol  nextLineTabStop  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  nextLineTabStop	80	None	replace
171	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.max);  [CE]  cannot  find  symbol  max  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.max);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.max);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  max	80	None	replace
172	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.lastLineTabStop);  [CE]  cannot  find  symbol  lastLineTabStop  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.lastLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.lastLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  lastLineTabStop	80	None	replace
173	[BUG]  [BUGGY]  Text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  Text  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol  Text	91	None	replace
174	[BUG]  [BUGGY]  pos  =  padding  +  text.substring(pos,  width).trim();  Text  =  padding  +  text.substring(pos,  width).trim();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  text.substring(pos,  width).trim();  Text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  text.substring(pos,  width).trim();  Text  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  incompatible  types	91	None	replace
175	[BUG]  [BUGGY]  sb.append(padding  +  text.substring(pos,  width).trim();  Text  =  padding  +  text.substring(pos,  width).trim();  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(padding  +  text.substring(pos,  width).trim();  Text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(padding  +  text.substring(pos,  width).trim();  Text  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  ')'  expected	91	None	replace
176	[BUG]  [BUGGY]  sb.append(padding  +  text.substring(pos,  width)).trim();  Text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(padding  +  text.substring(pos,  width)).trim();  Text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(padding  +  text.substring(pos,  width)).trim();  Text  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
177	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  Sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  Sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  Sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(Rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
178	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(Rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
179	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  padding,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  padding,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos),  padding,  nextLineTabStop);	  pos    =    findWrapPos(text.substring(0,    pos),    width);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	12	None	replace
180	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos),  nextLineTabStop);	  pos    =    findWrapPos(text.substring(0,    pos),    width);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	12	None	replace
181	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width.substring(0,  pos));  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width.substring(0,  pos));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width.substring(0,  pos));	  pos    =    findWrapPos(text.substring(0,    pos),    width);    	non-compiled	[CE]  int  cannot  be  dereferenced	12	None	replace
182	[BUG]  [BUGGY]  pos  =  padding  +  text.substring(pos,  padding).trim();  [CE]  no  suitable  method  found  for  substring(int,String)  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  text.substring(pos,  padding).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  text.substring(pos,  padding).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    pos    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,String)	33	None	replace
183	[BUG]  [BUGGY]  pos  =  padding  +  text.substring(pos,  pos).trim();  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    pos    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  incompatible  types	33	None	replace
184	[BUG]  [BUGGY]  pos  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    pos    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  incompatible  types	33	None	replace
185	[BUG]  [BUGGY]  pos  =  padding  +  text.substring(0,  pos).trim();  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    pos    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  incompatible  types	33	None	replace
186	[BUG]  [BUGGY]  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.appendPadding(text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    TextUtilities.appendPadding(text.substring(pos,    pos).trim();    	non-compiled	[CE]  ')'  expected	35	None	replace
187	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos)).append(defaultNewLine);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos)).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,  pos)).append(defaultNewLine);	  text    =    padding    +    text.substring(pos,    pos).trim();    TextUtilities.appendPadding(text.substring(pos,    pos).trim();    	non-compiled	[CE]  ')'  expected	35	None	replace
188	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	102	None	replace
189	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	102	None	replace
190	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  4);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  4);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  4);	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	102	None	replace
191	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  3).trim();  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  3).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos,  3).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos,    nextLineTabStop).trim();    	non-compiled	[CE]  ')'  expected	127	None	replace
192	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  4).trim();  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  4).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos,  4).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos,    nextLineTabStop).trim();    	non-compiled	[CE]  ')'  expected	127	None	replace
193	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  1).trim();  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  1).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos,  1).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos,    nextLineTabStop).trim();    	non-compiled	[CE]  ')'  expected	127	None	replace
194	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabS    	non-compiled	[CE]  ')'  expected	69	None	replace
195	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabS    	non-compiled	[CE]  ')'  expected	69	None	replace
196	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabS    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
197	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  nextLineTabStop.substring(pos).trim();  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  nextLineTabStop.substring(pos).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  nextLineTabStop.substring(pos).trim();	  pos    =    findWrapPos(text,    width    +    padding.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	96	None	replace
198	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  nextLineTabStop).trim();  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  nextLineTabStop).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  nextLineTabStop).trim();	  pos    =    findWrapPos(text,    width    +    padding.substring(pos).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	96	None	replace
199	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  nextLineTabStop  +  padding.substring(pos).trim();  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  nextLineTabStop  +  padding.substring(pos).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  nextLineTabStop  +  padding.substring(pos).trim();	  pos    =    findWrapPos(text,    width    +    padding.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	96	None	replace
200	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos  +  1),  width);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos  +  1),  width);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos  +  1),  width);	  pos    =    findWrapPos(text.substring(0,    pos    +    1));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	79	None	replace
201	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  width  +  1));  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  width  +  1));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos),  width  +  1));	  pos    =    findWrapPos(text.substring(0,    pos    +    1));    	non-compiled	[CE]  ';'  expected	79	None	replace
202	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(0,  pos  +  1));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(0,  pos  +  1));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text.substring(0,  pos  +  1));	  pos    =    findWrapPos(text.substring(0,    pos    +    1));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	79	None	replace
203	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop)).trim();  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop)).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop)).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos)).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	97	None	replace
204	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos)).trim();  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos)).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(0,  pos)).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos)).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	97	None	replace
205	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  padding.trim();  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  padding.trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos),  padding.trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos)).trim();    	non-compiled	[CE]  ')'  expected	97	None	replace
206	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos  +  1))).append(nextLineTabStop);	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	compilable	timeout	23	1	replace
207	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(nextLineTabStop);  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append(nextLineTabStop);	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	compilable	timeout	23	1	replace
208	[BUG]  [BUGGY]  timeout  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos  +  2))).append(nextLineTabStop);	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	compilable	timeout	23	1	replace
209	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(nextLineTabStop);  timeout  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos  +  2))).append(nextLineTabStop);	          sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    	compilable	timeout	23	1	replace
210	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	55	2	replace
211	[BUG]  [BUGGY]  if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	55	2	replace
212	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  ComparisonFailure  	55	2	replace
213	[BUG]  [BUGGY]  if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  ComparisonFailure  	55	2	replace
214	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	55	2	replace
215	[BUG]  [BUGGY]  if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	55	2	replace
216	[BUG]  [BUGGY]  TextUtilities.appendPadding(text.substring(0,  pos).trim();  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.appendPadding(text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.appendPadding(text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    TextUtilities.appendPadding(text.substring(0,    pos).trim();    	non-compiled	[CE]  ')'  expected	6	None	replace
217	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop.length());  [CE]  int  cannot  be  dereferenced  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop.length());	  pos    =    findWrapPos(text,    width,    text.length());    timeout    	non-compiled	[CE]  int  cannot  be  dereferenced	50	None	replace
218	[BUG]  [BUGGY]  timeout  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.length()  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  text.length()  +  1);	  pos    =    findWrapPos(text,    width,    text.length());    timeout    	compilable	timeout	50	1	replace
219	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.length()  +  1);  timeout  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.length()  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text.length()  +  1);	  pos    =    findWrapPos(text,    width,    text.length());    timeout    	compilable	timeout	50	1	replace
220	[BUG]  [BUGGY]  timeout  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  padding.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  padding.length());	  pos    =    findWrapPos(text,    width,    text.length());    timeout    	compilable	timeout	50	1	replace
221	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  padding.length());  timeout  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  padding.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  padding.length());	  pos    =    findWrapPos(text,    width,    text.length());    timeout    	compilable	timeout	50	1	replace
222	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();	  	compilable	  [FE]  ComparisonFailure  	1	2	add
223	[BUG]  [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();	  	compilable	  [FE]  ComparisonFailure  	1	2	add
224	[BUG]  [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  Text  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  Text  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    Text  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
225	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	1	2	add
226	[BUG]  [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	1	2	add
227	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
228	[BUG]  [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
229	[BUG]  [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  Text  t  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  Text  t  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    Text  t  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
230	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);	  text    =    padding    +    text.substring(0,    pos).trim();    TextUtilities.writePadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	120	None	replace
231	[BUG]  [BUGGY]  sb.append(text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);	  text    =    padding    +    text.substring(0,    pos).trim();    TextUtilities.writePadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	120	None	replace
232	[BUG]  [BUGGY]  Text  p  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  p  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  p  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    Text    p    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
233	[BUG]  [BUGGY]  p  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  p  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  p  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	p  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    Text    p    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol  p	129	None	replace
234	[BUG]  [BUGGY]  sb  =  padding  +  text.substring(pos,  pos).trim();  Text  p  =  padding  +  text.substring(pos,  pos).trim();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  padding  +  text.substring(pos,  pos).trim();  Text  p  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  text.substring(pos,  pos).trim();  Text  p  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    Text    p    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  incompatible  types	129	None	replace
235	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(0,  nextLineTabStop).trim();	  text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    	compilable	  [FE]  ComparisonFailure  	10	2	replace
236	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  nextLineTabStop).trim();  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(0,  nextLineTabStop).trim();	  text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    	compilable	  [FE]  ComparisonFailure  	10	2	replace
237	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop,  this.defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop,  this.defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop,  this.defaultNewLine);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	19	None	replace
238	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop,  padding).trim();  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop,  padding).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop,  padding).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos),    nextLineTabStop).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	40	None	replace
239	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop,  padding);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop,  padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos),  nextLineTabStop,  padding);	  pos    =    findWrapPos(text,    width    +    text.substring(pos),    nextLineTabStop).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	40	None	replace
240	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos),  nextLineTabStop).trim();  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos),  nextLineTabStop).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(0,  pos),  nextLineTabStop).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos),    nextLineTabStop).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	40	None	replace
241	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(pos).trim();  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(pos).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text.substring(pos).trim();	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	60	None	replace
242	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [CE]  int  cannot  be  dereferenced  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    text.substring(pos).trim();    	non-compiled	[CE]  int  cannot  be  dereferenced	60	None	replace
243	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  padding.substring(pos).trim();  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  padding.substring(pos).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  padding.substring(pos).trim();	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	60	None	replace
244	[BUG]  [BUGGY]  timeout  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	compilable	timeout	72	1	replace
245	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  timeout  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	compilable	timeout	72	1	replace
246	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  max);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  max);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  max);	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop,    padding);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	37	None	replace
247	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding,  max);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding,  max);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding,  max);	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop,    padding);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	37	None	replace
248	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  defaultNewLine);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  defaultNewLine);	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop,    padding);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	37	None	replace
249	[BUG]  [BUGGY]  Text  pos  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  pos  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  pos  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    Text    pos    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
250	[BUG]  [BUGGY]  FontMetrics  fmt  =  padding  +  text.substring(0,  pos).trim();  Text  pos  =  fmt  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  FontMetrics  fmt  =  padding  +  text.substring(0,  pos).trim();  Text  pos  =  fmt  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	FontMetrics  fmt  =  padding  +  text.substring(0,  pos).trim();  Text  pos  =  fmt  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    Text    pos    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
251	[BUG]  [BUGGY]  Text  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  Text  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    Text    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol  Text	98	None	replace
252	[BUG]  [BUGGY]  pos  =  padding  +  text.substring(pos,  pos).trim();  Text  =  padding  +  text.substring(pos,  pos).trim();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  text.substring(pos,  pos).trim();  Text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  text.substring(pos,  pos).trim();  Text  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    Text    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  incompatible  types	98	None	replace
253	[BUG]  [BUGGY]  sb.append(padding  +  text.substring(pos,  pos).trim();  Text  =  padding  +  text.substring(pos,  pos).trim();  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(padding  +  text.substring(pos,  pos).trim();  Text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(padding  +  text.substring(pos,  pos).trim();  Text  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    Text    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  ')'  expected	98	None	replace
254	[BUG]  [BUGGY]  Text  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  Text  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    Text    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol  Text	98	None	replace
255	[BUG]  [BUGGY]  sb  =  padding  +  text.substring(pos,  pos).trim();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    sb    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  incompatible  types	99	None	replace
256	[BUG]  [BUGGY]  sb  =  padding  +  text.substring(pos,  width).trim();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    sb    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  incompatible  types	99	None	replace
257	[BUG]  [BUGGY]  sb  =  pos  +  text.substring(pos,  padding).trim();  [CE]  no  suitable  method  found  for  substring(int,String)  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  pos  +  text.substring(pos,  padding).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  pos  +  text.substring(pos,  padding).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    sb    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,String)	99	None	replace
258	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	89	2	add
259	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	89	2	add
260	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	89	2	add
261	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	89	2	add
262	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	89	2	add
263	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	89	2	add
264	[BUG]  [BUGGY]  pos  =  padding  +  text.substring(0,  width).trim();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  text.substring(0,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  text.substring(0,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    pos    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  incompatible  types	56	None	replace
265	[BUG]  [BUGGY]  pos  =  padding  +  text.substring(pos,  height).trim();  [CE]  cannot  find  symbol  height  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  text.substring(pos,  height).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  text.substring(pos,  height).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    pos    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol  height	56	None	replace
266	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine,  padding);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine,  padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.defaultNewLine,  padding);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	61	None	replace
267	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	131	2	add
268	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	131	2	add
269	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	131	2	add
270	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	131	2	add
271	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	131	None	add
272	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	131	None	add
273	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	  	non-compiled	[CE]  ')'  expected	131	None	add
274	[BUG]  [BUGGY]  sb  =  sb  +  text.substring(pos,  width).trim();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  sb  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  sb  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    sb    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  incompatible  types	92	None	replace
275	[BUG]  [BUGGY]  sb  =  text.substring(pos,  width).trim();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    sb    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  incompatible  types	92	None	replace
276	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,    pos))).append(    padding);    sb.append(rtrim(text.substring(0,  pos))).append(  padding);	  timeout    	compilable	  [FE]  ComparisonFailure  	87	2	add
277	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos))).append(    padding);    sb.append(rtrim(text.substring(0,  pos))).append(  padding);	  timeout    	compilable	  [FE]  ComparisonFailure  	87	2	add
278	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  if(rtrim(text.substring(0,  pos))).append(  padding);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  if(rtrim(text.substring(0,  pos))).append(  padding);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos))).append(    padding);    if(rtrim(text.substring(0,  pos))).append(  padding);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	87	None	add
279	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  sb.append(  Rtrim(text.substring(0,  pos))).append(  padding);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(  padding);  sb.append(  Rtrim(text.substring(0,  pos))).append(  padding);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos))).append(    padding);    sb.append(  Rtrim(text.substring(0,  pos))).append(  padding);	  timeout    	non-compiled	[CE]  cannot  find  symbol	87	None	add
280	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  1);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  1);	  int    pos    =    findWrapPos(text,    width,    0);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	110	None	replace
281	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  3);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  3);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  3);	  int    pos    =    findWrapPos(text,    width,    0);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	110	None	replace
282	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  4);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  4);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  4);	  int    pos    =    findWrapPos(text,    width,    0);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	110	None	replace
283	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(padding);	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	timeout	134	1	replace
284	[BUG]  [BUGGY]  sb.append(padding);  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(padding);	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	timeout	134	1	replace
285	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  nextLineTabStop);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    timeout    	compilable	timeout	101	1	replace
286	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  nextLineTabStop);  timeout  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  nextLineTabStop);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    timeout    	compilable	timeout	101	1	replace
287	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  width);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  width);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    timeout    	compilable	timeout	101	1	replace
288	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  width);  timeout  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  width);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  width);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    timeout    	compilable	timeout	101	1	replace
289	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine  +  padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine  +  padding);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    timeout    	compilable	timeout	101	1	replace
290	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine  +  padding);  timeout  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine  +  padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine  +  padding);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    timeout    	compilable	timeout	101	1	replace
291	[BUG]  [BUGGY]  TextUtilities.writePadding(text,  width);  text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.writePadding(text,  width);  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.writePadding(text,  width);  text  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.writePadding(text,    width);    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	114	None	replace
292	[BUG]  [BUGGY]  TextUtilities.writePadding(text,  width);  [CE]  cannot  find  symbol  TextUtilities  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.writePadding(text,  width);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.writePadding(text,  width);	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.writePadding(text,    width);    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	114	None	replace
293	[BUG]  [BUGGY]  TextUtilities.writePadding(text,  pos);  text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.writePadding(text,  pos);  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.writePadding(text,  pos);  text  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.writePadding(text,    width);    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	114	None	replace
294	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  nextLineTabStop);  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  nextLineTabStop);	  sb.append(rtrim(text.substring(0,    pos)).append(defaultNewLine    +    padding);    	non-compiled	[CE]  ')'  expected	8	None	replace
295	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  width);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  width);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  width);	  sb.append(rtrim(text.substring(0,    pos)).append(defaultNewLine    +    padding);    	non-compiled	[CE]  ')'  expected	8	None	replace
296	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  text.substring(pos));  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  text.substring(pos));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine  +  text.substring(pos));	  sb.append(rtrim(text.substring(0,    pos)).append(defaultNewLine    +    padding);    	non-compiled	[CE]  ')'  expected	8	None	replace
297	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    null);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	83	None	replace
298	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  null);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  null);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  null);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    null);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	83	None	replace
299	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop,  null);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop,  null);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop,  null);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    null);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	83	None	replace
300	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	123	1	add
301	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	123	1	add
302	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	123	2	add
303	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	123	2	add
304	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [CE]  cannot  find  symbol  defaultLineTabStop  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  0);	  	non-compiled	[CE]  cannot  find  symbol  defaultLineTabStop	123	None	add
305	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	123	None	add
306	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,	  	non-compiled	[CE]  ')'  expected	123	None	add
307	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  4);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    4);    pos  =  findWrapPos(text,  width,  4);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
308	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  4);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  4);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    4);    pos  =  findWrapPos(text,  width,  4);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
309	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  3);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    4);    pos  =  findWrapPos(text,  width,  3);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
310	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  3);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  3);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    4);    pos  =  findWrapPos(text,  width,  3);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
311	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  5);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    4);    pos  =  findWrapPos(text,  width,  5);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
312	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  5);  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  5);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    4);    pos  =  findWrapPos(text,  width,  5);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
313	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  6);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    4);    pos  =  findWrapPos(text,  width,  6);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
314	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  6);  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  6);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    4);    pos  =  findWrapPos(text,  width,  6);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
315	[BUG]  [BUGGY]  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	86	1	replace
316	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	86	1	replace
317	[BUG]  [BUGGY]  timeout  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  1);	  pos    =    findWrapPos(text,    width,    4);    timeout    	compilable	timeout	44	1	replace
318	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  1);  timeout  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  1);	  pos    =    findWrapPos(text,    width,    4);    timeout    	compilable	timeout	44	1	replace
319	[BUG]  [BUGGY]  timeout  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  2);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  2);	  pos    =    findWrapPos(text,    width,    4);    timeout    	compilable	timeout	44	1	replace
320	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  2);  timeout  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  2);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  2);	  pos    =    findWrapPos(text,    width,    4);    timeout    	compilable	timeout	44	1	replace
321	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  max,  nextLineTabStop);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  max,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  max,  nextLineTabStop);	  int    pos    =    findWrapPos(text,    width,    max);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	38	None	replace
322	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	timeout	132	1	replace
323	[BUG]  [BUGGY]  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	timeout	132	1	replace
324	[BUG]  [BUGGY]  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
325	[BUG]  [BUGGY]  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	132	None	replace
326	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	28	2	add
327	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	28	2	add
328	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  if(pos  >  width)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    if(pos  >  width)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	28	2	add
329	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  if(pos  >  width)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  if(pos  >  width)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    if(pos  >  width)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	28	2	add
330	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  text  =  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text    =    padding    +    text.substring(0,    pos).toLowerCase();    text  =  padding  +  text.substring(0,  pos).toLowerCase();	  	compilable	  [FE]  ComparisonFailure  	108	2	add
331	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  text  =  padding  +  text.substring(0,  pos).toLowerCase();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  text  =  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).toLowerCase();    text  =  padding  +  text.substring(0,  pos).toLowerCase();	  	compilable	  [FE]  ComparisonFailure  	108	2	add
332	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  pos  =  padding  +  text.substring(0,  pos).toLowerCase();  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  pos  =  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).toLowerCase();    pos  =  padding  +  text.substring(0,  pos).toLowerCase();	  	non-compiled	[CE]  incompatible  types	108	None	add
333	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  TextBuffer  text  =  padding  +  text.substring(0,  pos).toLowerCase();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  TextBuffer  text  =  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).toLowerCase();    TextBuffer  text  =  padding  +  text.substring(0,  pos).toLowerCase();	  	non-compiled	[CE]  cannot  find  symbol	108	None	add
334	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  Text  pos  =  padding  +  text.substring(0,  pos).toLowerCase();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  Text  pos  =  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).toLowerCase();    Text  pos  =  padding  +  text.substring(0,  pos).toLowerCase();	  	non-compiled	[CE]  cannot  find  symbol	108	None	add
335	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  TextUtilities.appendPadding(text.substring(0,  pos).toLowerCase();  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  TextUtilities.appendPadding(text.substring(0,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).toLowerCase();    TextUtilities.appendPadding(text.substring(0,  pos).toLowerCase();	  	non-compiled	[CE]  ')'  expected	108	None	add
336	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
337	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	67	2	add
338	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	67	2	add
339	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	67	2	add
340	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
341	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
342	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
343	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  3);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    3);    pos  =  findWrapPos(text,  width,  3);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	47	2	add
344	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  3);  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  3);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    3);    pos  =  findWrapPos(text,  width,  3);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	47	2	add
345	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  4);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    3);    pos  =  findWrapPos(text,  width,  4);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	47	2	add
346	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  4);  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  4);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    3);    pos  =  findWrapPos(text,  width,  4);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	47	2	add
347	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  2);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    3);    pos  =  findWrapPos(text,  width,  2);	  timeout    	compilable	  [FE]  ComparisonFailure  	47	2	add
348	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  2);  [FE]  ComparisonFailure  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  2);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    3);    pos  =  findWrapPos(text,  width,  2);	  timeout    	compilable	  [FE]  ComparisonFailure  	47	2	add
349	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  5);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    3);    pos  =  findWrapPos(text,  width,  5);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	47	2	add
350	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  5);  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  5);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    3);    pos  =  findWrapPos(text,  width,  5);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	47	2	add
351	[BUG]  [BUGGY]  pos  =  padding  +  text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    Text    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  incompatible  types	104	None	replace
352	[BUG]  [BUGGY]  sb.append(padding  +  text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(padding  +  text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(padding  +  text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    Text    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  ')'  expected	104	None	replace
353	[BUG]  [BUGGY]  sb.append(text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    Text    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  ')'  expected	104	None	replace
354	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  height  +  text.substring(pos).trim();  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  height  +  text.substring(pos).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  height  +  text.substring(pos).trim();	  pos    =    findWrapPos(text,    padding    +    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	128	None	replace
355	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(0,  pos));	  pos    =    findWrapPos(text,    width    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	41	None	replace
356	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos),  padding.trim();  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(0,  pos),  padding.trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(0,  pos),  padding.trim();	  pos    =    findWrapPos(text,    width    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  ')'  expected	41	None	replace
357	[BUG]  [BUGGY]  TextBuffer  text  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  text  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    TextBuffer    text    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
358	[BUG]  [BUGGY]  TextBuffer  text  =  pos  +  padding.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  text  =  pos  +  padding.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  text  =  pos  +  padding.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    TextBuffer    text    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
359	[BUG]  [BUGGY]  TextBuffer  text  =  sb.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  text  =  sb.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  text  =  sb.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    TextBuffer    text    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
360	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	81	None	replace
361	[BUG]  [BUGGY]  n  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [CE]  cannot  find  symbol  n  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  n  =  findWrapPos(text,  width,  nextLineTabStop).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	n  =  findWrapPos(text,  width,  nextLineTabStop).trim();	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  cannot  find  symbol  n	81	None	replace
362	[BUG]  [BUGGY]  TextBuffer  text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  text  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    TextBuffer    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
363	[BUG]  [BUGGY]  TextBuffer  text  =  sb.substring(pos  +  padding.substring(pos,  width).trim();  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  text  =  sb.substring(pos  +  padding.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  text  =  sb.substring(pos  +  padding.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    TextBuffer    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  ')'  expected	57	None	replace
364	[BUG]  [BUGGY]  TextBuffer  text  =  sb.trim()  +  padding.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  text  =  sb.trim()  +  padding.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  text  =  sb.trim()  +  padding.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    TextBuffer    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
365	[BUG]  [BUGGY]  TextBuffer  text  =  sb  +  padding.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  text  =  sb  +  padding.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  text  =  sb  +  padding.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    TextBuffer    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
366	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(  padding);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos  +  1))).append(  padding);	  sb.append(rtrim(text.substring(0,    pos))).append(    padding);    timeout    	compilable	timeout	88	1	replace
367	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(  padding);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  1))).append(  padding);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos  +  1))).append(  padding);	  sb.append(rtrim(text.substring(0,    pos))).append(    padding);    timeout    	compilable	timeout	88	1	replace
368	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
369	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
370	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
371	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
372	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
373	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
374	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
375	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
376	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  sb.append(rtrim(text.substring(pos,  width)).append(defaultNewLine);  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  sb.append(rtrim(text.substring(pos,  width)).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    sb.append(rtrim(text.substring(pos,  width)).append(defaultNewLine);	  	non-compiled	[CE]  ')'  expected	54	None	add
377	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	63	2	add
378	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	63	2	add
379	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	63	2	add
380	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	63	2	add
381	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	63	2	add
382	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	63	2	add
383	[BUG]  [BUGGY]  Text  pos  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  pos  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  pos  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    Text    pos    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
384	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	add
385	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	add
386	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  defaultLineTabStop  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  defaultLineTabStop	15	None	add
387	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	15	None	add
388	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  [CE]  cannot  find  symbol  height  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  height	15	None	add
389	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	26	2	add
390	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	26	2	add
391	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  if(pos  <  2)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    if(pos  <  2)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	26	2	add
392	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  if(pos  <  2)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  if(pos  <  2)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    if(pos  <  2)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	26	2	add
393	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	66	None	replace
394	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    timeout    	compilable	timeout	29	1	replace
395	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  timeout  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    timeout    	compilable	timeout	29	1	replace
396	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop.length());  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop.length());	  int    pos    =    findWrapPos(text,    width,    text.length());    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	36	None	replace
397	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  text.length()  +  1);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  text.length()  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  text.length()  +  1);	  int    pos    =    findWrapPos(text,    width,    text.length());    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	36	None	replace
398	[BUG]  [BUGGY]  sb  =  sb  +  text.substring(0,  pos).trim();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  sb  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  sb  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  incompatible  types	105	None	replace
399	[BUG]  [BUGGY]  sb  =  text.substring(0,  pos).trim();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  incompatible  types	105	None	replace
400	[BUG]  [BUGGY]  sb  =  pos  +  text.substring(0,  pos).trim();  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  pos  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  pos  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  incompatible  types	105	None	replace
401	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	65	2	add
402	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	65	2	add
403	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	65	2	add
404	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	compilable	  [FE]  ComparisonFailure  	65	2	add
405	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
406	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
407	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
408	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	22	2	add
409	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);	  	compilable	  [FE]  ComparisonFailure  	22	2	add
410	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	22	2	add
411	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	22	2	add
412	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	22	2	add
413	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(this.defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	22	2	add
414	[BUG]  [BUGGY]  timeout  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);	  pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    timeout    	compilable	timeout	46	1	replace
415	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);  timeout  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  2);	  pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    timeout    	compilable	timeout	46	1	replace
416	[BUG]  [BUGGY]  timeout  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);	  pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    timeout    	compilable	timeout	46	1	replace
417	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);  timeout  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  3);	  pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    timeout    	compilable	timeout	46	1	replace
418	[BUG]  [BUGGY]  timeout  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  4);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  4);	  pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    timeout    	compilable	timeout	46	1	replace
419	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  4);  timeout  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  4);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  4);	  pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    timeout    	compilable	timeout	46	1	replace
420	[BUG]  [BUGGY]  TextBuffer  text  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  text  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    TextBuffer    text    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
421	[BUG]  [BUGGY]  TextBuffer  text  =  sb.substring(pos  +  padding.substring(pos,  pos).trim();  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  text  =  sb.substring(pos  +  padding.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  text  =  sb.substring(pos  +  padding.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    TextBuffer    text    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  ')'  expected	32	None	replace
422	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  padding,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  padding,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  padding,  nextLineTabStop);	  pos    =    findWrapPos(text,    width,    text);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	116	None	replace
423	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(pos,  nextLineTabStop));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(pos,  nextLineTabStop));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text.substring(pos,  nextLineTabStop));	  pos    =    findWrapPos(text,    width,    text);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	116	None	replace
424	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  lastLineTabStop);  [CE]  cannot  find  symbol  lastLineTabStop  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  lastLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  lastLineTabStop);	  pos    =    findWrapPos(text,    width,    text);    	non-compiled	[CE]  cannot  find  symbol  lastLineTabStop	116	None	replace
425	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  defaultNewLine,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  defaultNewLine,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  defaultNewLine,  nextLineTabStop);	  pos    =    findWrapPos(text,    width,    defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	70	None	replace
426	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text,  nextLineTabStop);	  pos    =    findWrapPos(text,    width,    defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	70	None	replace
427	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  text  =  padding  +  text.substring(pos,  width  -  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text    =    padding    +    text.substring(pos,    width    -    1).trim();    text  =  padding  +  text.substring(pos,  width  -  1).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	112	2	add
428	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  text  =  padding  +  text.substring(pos,  width  -  1).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  text  =  padding  +  text.substring(pos,  width  -  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width    -    1).trim();    text  =  padding  +  text.substring(pos,  width  -  1).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	112	2	add
429	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  TextBuffer  text  =  padding  +  text.substring(pos,  width  -  1).trim();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  TextBuffer  text  =  padding  +  text.substring(pos,  width  -  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width    -    1).trim();    TextBuffer  text  =  padding  +  text.substring(pos,  width  -  1).trim();	  	non-compiled	[CE]  cannot  find  symbol	112	None	add
430	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  pos  =  padding  +  text.substring(pos,  width  -  1).trim();  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  pos  =  padding  +  text.substring(pos,  width  -  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width    -    1).trim();    pos  =  padding  +  text.substring(pos,  width  -  1).trim();	  	non-compiled	[CE]  incompatible  types	112	None	add
431	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  TextUtilities.appendPadding(text.substring(pos,  width  -  1).trim();  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  TextUtilities.appendPadding(text.substring(pos,  width  -  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width    -    1).trim();    TextUtilities.appendPadding(text.substring(pos,  width  -  1).trim();	  	non-compiled	[CE]  ')'  expected	112	None	add
432	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  TextUtilities.appendPadding(text.substring(pos,  width  -  1).trim());  [CE]  cannot  find  symbol  TextUtilities  [FE]            ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  TextUtilities.appendPadding(text.substring(pos,  width  -  1).trim());  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width    -    1).trim();    TextUtilities.appendPadding(text.substring(pos,  width  -  1).trim());	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	112	None	add
433	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop,  defaultNewLine);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop,  defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop,  defaultNewLine);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    defaultNewLine);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	18	None	replace
434	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
435	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
436	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
437	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
438	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
439	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
440	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  [CE]  cannot  find  symbol  defaultLineTabStop  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  defaultLineTabStop);  pos  =  findWrapPos(text,  width,  pos);	  	non-compiled	[CE]  cannot  find  symbol  defaultLineTabStop	121	None	add
441	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	121	1	add
442	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [FE]  ComparisonFailure  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	121	1	add
443	[BUG]  [BUGGY]  int  pos  =  padding  +  text.substring(0,  pos).trim();  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    pos    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	4	None	replace
444	[BUG]  [BUGGY]  pos  =  padding  +  Text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  Text  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  Text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  Text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    pos    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol  Text	4	None	replace
445	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(0,  pos),  padding);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(0,  pos),  padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text.substring(0,  pos),  padding);	  pos    =    findWrapPos(text,    width,    text.substring(0,    pos));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	14	None	replace
446	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(0,  pos),  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(0,  pos),  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text.substring(0,  pos),  nextLineTabStop);	  pos    =    findWrapPos(text,    width,    text.substring(0,    pos));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	14	None	replace
447	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop,  text.substring(0,  pos));  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop,  text.substring(0,  pos));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop,  text.substring(0,  pos));	  pos    =    findWrapPos(text,    width,    text.substring(0,    pos));    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	14	None	replace
448	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabS  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabS  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabS	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	124	None	replace
449	[BUG]  [BUGGY]  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	124	1	replace
450	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  timeout  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	124	1	replace
451	[BUG]  [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabS  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabS  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabS	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	124	None	replace
452	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	26	2	add
453	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	26	2	add
454	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  text.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(0,  pos)+  text.trim();	  text    =    padding    +    text.substring(0,    pos)+    padding.trim();    	compilable	timeout	95	1	replace
455	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  text.trim();  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  text.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(0,  pos)+  text.trim();	  text    =    padding    +    text.substring(0,    pos)+    padding.trim();    	compilable	timeout	95	1	replace
456	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  text.substring(pos).trim();  }  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  text.substring(pos).trim();  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  text.substring(pos).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	60	None	replace
457	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  text.substring(pos).trim();  }  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  text.substring(pos).trim();  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  text.substring(pos).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	60	None	replace
458	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTab  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTab  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTab	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    defaultLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	84	None	replace
459	[BUG]  [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [CE]  incomparable  types:  int  and  <null>  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  incomparable  types:  int  and  <null>	81	None	replace
460	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [CE]  incomparable  types:  int  and  String  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  incomparable  types:  int  and  String	81	None	replace
461	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [CE]  incomparable  types:  int  and  String  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  incomparable  types:  int  and  String	81	None	replace
462	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  Text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [CE]  cannot  find  symbol  Text  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  Text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    Text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  	non-compiled	[CE]  cannot  find  symbol  Text	9	None	add
463	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  Text  pos  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  Text  pos  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    Text  pos  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
464	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  If(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  If(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    If(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  timeout    	non-compiled	[CE]  ';'  expected	71	None	add
465	[BUG]  [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabS  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabS  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabS	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    null);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	83	None	replace
466	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabS  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabS  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabS	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    null);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	83	None	replace
467	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  2))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(pos,  pos  +  2))).append(defaultNewLine);	  sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    timeout    	compilable	timeout	90	1	replace
468	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  2))).append(defaultNewLine);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos  +  2))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,  pos  +  2))).append(defaultNewLine);	  sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    timeout    	compilable	timeout	90	1	replace
469	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    timeout    	compilable	timeout	27	1	replace
470	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }  timeout  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    timeout    	compilable	timeout	27	1	replace
471	[BUG]  [BUGGY]  Integer  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Integer  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Integer  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  if(nextLineTabStop!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	75	None	replace
472	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  sb.append(rtrim(text.string(0,  pos  -  1))).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  sb.append(rtrim(text.string(0,  pos  -  1))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    sb.append(rtrim(text.string(0,  pos  -  1))).append(defaultNewLine);	  timeout    	non-compiled	[CE]  cannot  find  symbol	28	None	add
473	[BUG]  [BUGGY]  text  =  padding  +  1).trim();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  1).trim();	  text    =    padding    +    width).trim();    	non-compiled	[CE]  ';'  expected	51	None	replace
474	[BUG]  [BUGGY]  text  =  padding  +  pos).trim();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  pos).trim();	  text    =    padding    +    width).trim();    	non-compiled	[CE]  ';'  expected	51	None	replace
475	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  Text  =  padding  +  text.substring(0,  pos).toLowerCase();  [CE]  cannot  find  symbol  Text  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  Text  =  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).toLowerCase();    Text  =  padding  +  text.substring(0,  pos).toLowerCase();	  	non-compiled	[CE]  cannot  find  symbol  Text	108	None	add
476	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  sb  =  padding  +  text.substring(0,  pos).toLowerCase();  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  sb  =  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).toLowerCase();    sb  =  padding  +  text.substring(0,  pos).toLowerCase();	  	non-compiled	[CE]  incompatible  types	108	None	add
477	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  3);  int  pos  =  findWrapPos(text,  width,  3);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  int  pos  =  findWrapPos(text,  width,  3);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    3);    int  pos  =  findWrapPos(text,  width,  3);	  timeout    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	47	None	add
478	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  3;  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  3);  pos  =  findWrapPos(text,  width,  3;  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    3);    pos  =  findWrapPos(text,  width,  3;	  timeout    	non-compiled	[CE]  ')'  expected	47	None	add
479	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0.0);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0.0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  0.0);	  timeout    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	117	None	add
480	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append('n');  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos))).append('n');	  sb.append(rtrim(text.substring(0,    pos))).append(    padding);    timeout    	compilable	timeout	88	1	replace
481	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append('n');  timeout  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append('n');  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos))).append('n');	  sb.append(rtrim(text.substring(0,    pos))).append(    padding);    timeout    	compilable	timeout	88	1	replace
482	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  8);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos    =    findWrapPos(text,    width,    4);    pos  =  findWrapPos(text,  width,  8);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
483	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  8);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  4);  pos  =  findWrapPos(text,  width,  8);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    4);    pos  =  findWrapPos(text,  width,  8);	  timeout    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
484	[BUG]  [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos),  width).trim();  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos),  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  padding  +  text.substring(0,  pos),  width).trim();	  Text    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  ';'  expected	93	None	replace
485	[BUG]  [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos),  this.trim();  [CE]  <identifier>  expected  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos),  this.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  padding  +  text.substring(0,  pos),  this.trim();	  Text    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
486	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	  	non-compiled	[CE]  ')'  expected	133	None	add
487	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	  	non-compiled	[CE]  ')'  expected	133	None	add
488	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  int  pos  =  findWrapPos(text,  width,  text.length());  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.length());  int  pos  =  findWrapPos(text,  width,  text.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    text.length());    int  pos  =  findWrapPos(text,  width,  text.length());	  timeout    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	49	None	add
489	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  ==  -1)  {  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  }	  text    =    padding    +    text.substring(0,    pos).trim();    text    =    padding    +    text.substring(0,    pos).trim();    	compilable	timeout	2	1	replace
490	[BUG]  [BUGGY]  if(pos  ==  -1)  {  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  }  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  }	  text    =    padding    +    text.substring(0,    pos).trim();    text    =    padding    +    text.substring(0,    pos).trim();    	compilable	timeout	2	1	replace
491	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  firstLineTabStop);  [CE]  cannot  find  symbol  firstLineTabStop  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  firstLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  firstLineTabStop);	  pos    =    findWrapPos(text,    width,    text);    	non-compiled	[CE]  cannot  find  symbol  firstLineTabStop	116	None	replace
492	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabS    	non-compiled	[CE]  ')'  expected	69	None	replace
493	[BUG]  [BUGGY]  if(nextLineTabStop!=  ')')  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  ')')  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  ')')  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabS    	non-compiled	[CE]  ')'  expected	69	None	replace
494	[BUG]  [BUGGY]  if(nextLineTabStop!=  ')')  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  ')')  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  ')')  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabS    	non-compiled	[CE]  ')'  expected	69	None	replace
495	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	125	None	add
496	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,	  	non-compiled	[CE]  ')'  expected	125	None	add
497	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	89	2	add
498	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(pos,  width))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	89	2	add
499	[BUG]  [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos).toLowerCase();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  padding  +  text.substring(0,  pos).toLowerCase();	  text    =    padding    +    text.substring(0,    pos).toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
500	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text  =  padding  +  text.substring(pos,  pos).toLowerCase();	  text    =    padding    +    text.substring(0,    pos).toLowerCase();    	compilable	  [FE]  ComparisonFailure  	109	2	replace
501	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).toLowerCase();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(pos,  pos).toLowerCase();	  text    =    padding    +    text.substring(0,    pos).toLowerCase();    	compilable	  [FE]  ComparisonFailure  	109	2	replace
502	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTab  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTab  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTab	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    height,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	17	None	replace
503	[BUG]  [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTab  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTab  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTab	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    height,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	17	None	replace
504	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabS  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabS  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  height,  nextLineTabS	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    height,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	17	None	replace
505	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  nextLineTabStop.trim();  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  nextLineTabStop.trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  nextLineTabStop.trim();	  pos    =    findWrapPos(text,    width    +    padding.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	96	None	replace
506	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(pos))).append(defaultNewLine);	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	timeout	132	1	replace
507	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos))).append(defaultNewLine);  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos))).append(defaultNewLine);	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	timeout	132	1	replace
508	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	  	non-compiled	[CE]  ')'  expected	67	None	add
509	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	  	non-compiled	[CE]  ')'  expected	67	None	add
510	[BUG]  [BUGGY]  float  pos  =  findWrapPos(text,  width,  padding);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  float  pos  =  findWrapPos(text,  width,  padding);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	float  pos  =  findWrapPos(text,  width,  padding);	  int    pos    =    findWrapPos(text,    width,    padding);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	39	None	replace
511	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
512	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
513	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  Text  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  Text  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    Text  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
514	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  Text  rt  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  Text  rt  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    Text  rt  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
515	[BUG]  [BUGGY]  sb  =  padding  +  text.substring(0,  pos)+  padding.trim();  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  padding  +  text.substring(0,  pos)+  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  text.substring(0,  pos)+  padding.trim();	  sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  incompatible  types	11	None	replace
516	[BUG]  [BUGGY]  sb  =  padding  +  text.substring(0,  pos),  padding.trim();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  padding  +  text.substring(0,  pos),  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  text.substring(0,  pos),  padding.trim();	  sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  ';'  expected	11	None	replace
517	[BUG]  [BUGGY]  sb  =  padding  +  text.substring(0,  pos),  this.trim();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  padding  +  text.substring(0,  pos),  this.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  text.substring(0,  pos),  this.trim();	  sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  ';'  expected	11	None	replace
518	[BUG]  [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    defaultNewLine);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	18	None	replace
519	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabS  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabS  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabS	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    defaultNewLine);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	18	None	replace
520	[BUG]  [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    defaultNewLine);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	18	None	replace
521	[BUG]  [BUGGY]  Text  sb  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  sb  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    Text    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
522	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  padding).trim();  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos),  padding).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos),  padding).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos)).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	97	None	replace
523	[BUG]  [BUGGY]  float  pos  =  findWrapPos(text,  width,  text);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  float  pos  =  findWrapPos(text,  width,  text);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	float  pos  =  findWrapPos(text,  width,  text);	  int    pos    =    findWrapPos(text,    width,    text);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	111	None	replace
524	[BUG]  [BUGGY]  sb  =  padding  +  text.substring(0,  width).trim();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  padding  +  text.substring(0,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  text.substring(0,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    sb    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  incompatible  types	92	None	replace
525	[BUG]  [BUGGY]  sb  =  padding  +  Text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  Text  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  padding  +  Text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  Text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    sb    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol  Text	92	None	replace
526	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  }  [CE]  incomparable  types:  int  and  String  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    	non-compiled	[CE]  incomparable  types:  int  and  String	61	None	replace
527	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  incomparable  types:  int  and  String  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    	non-compiled	[CE]  incomparable  types:  int  and  String	61	None	replace
528	[BUG]  [BUGGY]  if(this.defaultDescPad!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapP  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(this.defaultDescPad!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapP  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(this.defaultDescPad!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapP	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ';'  expected	21	None	replace
529	[BUG]  [BUGGY]  if(this.defaultDescPad!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(this.defaultDescPad!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(this.defaultDescPad!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	21	None	replace
530	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  2).trim();  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  2).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos,  2).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos,    nextLineTabStop).trim();    	non-compiled	[CE]  ')'  expected	127	None	replace
531	[BUG]  [BUGGY]  [FE]  OutOfMemoryError  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=  null)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	compilable	  [FE]  OutOfMemoryError  	64	2	replace
532	[BUG]  [BUGGY]  if(padding!=  null)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  OutOfMemoryError  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	compilable	  [FE]  OutOfMemoryError  	64	2	replace
533	[BUG]  [BUGGY]  timeout  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=  null)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	compilable	timeout	64	1	replace
534	[BUG]  [BUGGY]  if(padding!=  null)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  timeout  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	compilable	timeout	64	1	replace
535	[BUG]  [BUGGY]  TextUtilities.writePadding(text,  width);  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.writePadding(text,  width);  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.writePadding(text,  width);  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.writePadding(text,    width);    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	114	None	replace
536	[BUG]  [BUGGY]  sb  =  padding  +  text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  padding  +  text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  padding  +  text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);	  text    =    padding    +    text.substring(0,    pos).trim();    TextUtilities.writePadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  incompatible  types	120	None	replace
537	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
538	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
539	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  Text  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  Text  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    Text  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
540	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  Text  sb  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  Text  sb  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    Text  sb  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
541	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  Text  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  Text  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    Text  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
542	[BUG]  [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	126	None	replace
543	[BUG]  [BUGGY]  timeout  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	compilable	timeout	126	1	replace
544	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  timeout  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	compilable	timeout	126	1	replace
545	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	compilable	timeout	126	1	replace
546	[BUG]  [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  timeout  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding  ==  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	compilable	timeout	126	1	replace
547	[BUG]  [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapP  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapP  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapP	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	non-compiled	[CE]  ';'  expected	126	None	replace
548	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	  	non-compiled	[CE]  ')'  expected	65	None	add
549	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	  	non-compiled	[CE]  ')'  expected	65	None	add
550	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  text);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  text);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  text);	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop,    padding);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	37	None	replace
551	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding  +  1);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding  +  1);	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop,    padding);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	37	None	replace
552	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	68	None	replace
553	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nullLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  nullLineTabStop  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nullLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nullLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  nullLineTabStop	85	None	add
554	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	85	None	add
555	[BUG]  [BUGGY]  timeout  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  text.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  text.length());	  pos    =    findWrapPos(text,    width,    text.length());    timeout    	compilable	timeout	50	1	replace
556	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  text.length());  timeout  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  text.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  text.length());	  pos    =    findWrapPos(text,    width,    text.length());    timeout    	compilable	timeout	50	1	replace
557	[BUG]  [BUGGY]  timeout  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.length()  -  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	pos  =  findWrapPos(text,  width,  text.length()  -  1);	  pos    =    findWrapPos(text,    width,    text.length());    timeout    	compilable	timeout	50	1	replace
558	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.length()  -  1);  timeout  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.length()  -  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text.length()  -  1);	  pos    =    findWrapPos(text,    width,    text.length());    timeout    	compilable	timeout	50	1	replace
559	[BUG]  [BUGGY]  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	86	1	replace
560	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	86	1	replace
561	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  Text  =  padding  +  text.substring(pos,  width  -  1).trim();  [CE]  cannot  find  symbol  Text  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  Text  =  padding  +  text.substring(pos,  width  -  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width    -    1).trim();    Text  =  padding  +  text.substring(pos,  width  -  1).trim();	  	non-compiled	[CE]  cannot  find  symbol  Text	112	None	add
562	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  sb  =  padding  +  text.substring(pos,  width  -  1).trim();  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  sb  =  padding  +  text.substring(pos,  width  -  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width    -    1).trim();    sb  =  padding  +  text.substring(pos,  width  -  1).trim();	  	non-compiled	[CE]  incompatible  types	112	None	add
563	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  text.substring(pos));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  text.substring(pos));	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    timeout    	compilable	timeout	101	1	replace
564	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  text.substring(pos));  timeout  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  text.substring(pos));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  text.substring(pos));	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    timeout    	compilable	timeout	101	1	replace
565	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	66	None	replace
566	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	66	None	replace
567	[BUG]  [BUGGY]  if(padding!=  width)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }  [CE]  incomparable  types:  String  and  int  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  width)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  width)  {  text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  incomparable  types:  String  and  int	55	None	replace
568	[BUG]  [BUGGY]  TextPos  text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextPos  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextPos  text  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
569	[BUG]  [BUGGY]  if(padding!=  width)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }  [CE]  incomparable  types:  String  and  int  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  width)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  width)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  incomparable  types:  String  and  int	55	None	replace
570	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
571	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
572	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos)+  width);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos)+  width);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos)+  width);	  pos    =    findWrapPos(text.substring(0,    pos),    width);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	12	None	replace
573	[BUG]  [BUGGY]  float  pos  =  findWrapPos(text,  width,  max);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  float  pos  =  findWrapPos(text,  width,  max);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	float  pos  =  findWrapPos(text,  width,  max);	  int    pos    =    findWrapPos(text,    width,    max);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	38	None	replace
574	[BUG]  [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  Text  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  Text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    Text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol  Text	1	None	add
575	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();	  	compilable	  [FE]  ComparisonFailure  	1	2	add
576	[BUG]  [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();	  	compilable	  [FE]  ComparisonFailure  	1	2	add
577	[BUG]  [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  Text  rt  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  Text  rt  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    Text  rt  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
578	[BUG]  [BUGGY]  Text  sb  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  sb  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
579	[BUG]  [BUGGY]  Text  sb  =  padding  +  nextLineTabStop).trim();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  sb  =  padding  +  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  padding  +  nextLineTabStop).trim();	  text    =    width    +    nextLineTabStop).trim();    	non-compiled	[CE]  ';'  expected	53	None	replace
580	[BUG]  [BUGGY]  Text  text  =  padding  +  nextLineTabStop).trim();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  text  =  padding  +  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  text  =  padding  +  nextLineTabStop).trim();	  text    =    width    +    nextLineTabStop).trim();    	non-compiled	[CE]  ';'  expected	53	None	replace
581	[BUG]  [BUGGY]  timeout  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	compilable	timeout	74	1	replace
582	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  timeout  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	compilable	timeout	74	1	replace
583	[BUG]  [BUGGY]  timeout  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }	  if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	compilable	timeout	74	1	replace
584	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  timeout  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }	  if(padding    ==    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	compilable	timeout	74	1	replace
585	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	  	non-compiled	[CE]  ')'  expected	131	None	add
586	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default	  	non-compiled	[CE]  illegal  start  of  expression	131	None	add
587	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	15	None	add
588	[BUG]  [BUGGY]  pos  =  width  +  text.substring(pos,  padding).trim();  [CE]  no  suitable  method  found  for  substring(int,String)  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  width  +  text.substring(pos,  padding).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  width  +  text.substring(pos,  padding).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    pos    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,String)	56	None	replace
589	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	100	2	add
590	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  timeout    	compilable	  [FE]  ComparisonFailure  	100	2	add
591	[BUG]  [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapP  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapP  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapP	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ';'  expected	19	None	replace
592	[BUG]  [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	19	None	replace
593	[BUG]  [BUGGY]  TextBuffer  sb  =  padding  +  text.substring(pos,  pos).trim();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  sb  =  padding  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  sb  =  padding  +  text.substring(pos,  pos).trim();	  text    =    padding    +    nextLineTabStop.substring(pos,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
594	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    timeout    	compilable	timeout	29	1	replace
595	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  timeout  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    timeout    	compilable	timeout	29	1	replace
596	[BUG]  [BUGGY]  float  pos  =  findWrapPos(text,  width,  text.length());  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  float  pos  =  findWrapPos(text,  width,  text.length());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	float  pos  =  findWrapPos(text,  width,  text.length());	  int    pos    =    findWrapPos(text,    width,    text.length());    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	36	None	replace
597	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  text.length()  -  1);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  text.length()  -  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  text.length()  -  1);	  int    pos    =    findWrapPos(text,    width,    text.length());    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	36	None	replace
598	[BUG]  [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapP  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapP  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapP	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ';'  expected	16	None	replace
599	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  next  [CE]  ')'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  next  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  next	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	16	None	replace
600	[BUG]  [BUGGY]  TextUtilities.appendPadding(text.substring(pos,  width)).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.appendPadding(text.substring(pos,  width)).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.appendPadding(text.substring(pos,  width)).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.appendPadding(text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	58	None	replace
601	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	123	None	add
602	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  0);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  0);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	123	None	add
603	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  Text  =  padding  +  text.substring(0,  pos)+  padding.trim();  [CE]  cannot  find  symbol  Text  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  Text  =  padding  +  text.substring(0,  pos)+  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos)+    padding.trim();    Text  =  padding  +  text.substring(0,  pos)+  padding.trim();	  	non-compiled	[CE]  cannot  find  symbol  Text	94	None	add
604	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  sb  =  padding  +  text.substring(0,  pos)+  padding.trim();  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  sb  =  padding  +  text.substring(0,  pos)+  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos)+    padding.trim();    sb  =  padding  +  text.substring(0,  pos)+  padding.trim();	  	non-compiled	[CE]  incompatible  types	94	None	add
605	[BUG]  [BUGGY]  if(padding  >=  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  >=  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding  >=  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  }	  text    =    padding    +    text.substring(pos,    pos).trim();    text    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	31	None	replace
606	[BUG]  [BUGGY]  if(padding!=  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  }  [CE]  incomparable  types:  String  and  int  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  }	  text    =    padding    +    text.substring(pos,    pos).trim();    text    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  incomparable  types:  String  and  int	31	None	replace
607	[BUG]  [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabS  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabS  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding!=  null)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabS	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	122	None	replace
608	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(Rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
609	[BUG]  [BUGGY]  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(Rtrim(text.substring(0,  pos))).append(defaultNewLine);	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(Rtrim(text.substring(0,    pos))).append(defaultNewLine);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
610	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);	  timeout    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	45	None	add
611	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  firstLineTabStop  +  1);  [CE]  cannot  find  symbol  firstLineTabStop  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  firstLineTabStop  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    pos  =  findWrapPos(text,  width,  firstLineTabStop  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol  firstLineTabStop	45	None	add
612	[BUG]  [BUGGY]  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	124	1	replace
613	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	124	1	replace
614	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  [CE]  ')'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	124	None	replace
615	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabS  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabS  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabS	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	19	None	replace
616	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTab  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTab  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTab	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	19	None	replace
617	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapP  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapP  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapP	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ';'  expected	19	None	replace
618	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  0);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  0);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	125	None	add
619	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  pos  =  findWrapPos(text,  width,  0);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  pos  =  findWrapPos(text,  width,  0);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	125	None	add
620	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  this.defaultLeftPad);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  this.defaultLeftPad);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	125	1	add
621	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  this.defaultLeftPad);  pos  =  findWrapPos(text,  width,  0);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  this.defaultLeftPad);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    pos  =  findWrapPos(text,  width,  this.defaultLeftPad);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	125	1	add
622	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  1)).append(defaultNewLine);  }  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  1)).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos  +  1)).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(0,    pos    +    1)).append(defaultNewLine);    	non-compiled	[CE]  ')'  expected	7	None	replace
623	[BUG]  [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  }	  text    =    padding    +    text.substring(pos,    pos).trim();    TextUtilities.appendPadding(text.substring(pos,    pos).trim();    	non-compiled	[CE]  ')'  expected	35	None	replace
624	[BUG]  [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text    =    padding    +    text.substring(pos,    pos).trim();    TextUtilities.appendPadding(text.substring(pos,    pos).trim();    	non-compiled	[CE]  	35	None	replace
625	[BUG]  [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  }  else  {  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  }  else  {  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.appendPadding(text.substring(pos,  pos).trim();  }  else  {	  text    =    padding    +    text.substring(pos,    pos).trim();    TextUtilities.appendPadding(text.substring(pos,    pos).trim();    	non-compiled	[CE]  ')'  expected	35	None	replace
626	[BUG]  [BUGGY]  text  = " "  +  this.defaultNewLine).trim();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  = " "  +  this.defaultNewLine).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  = " "  +  this.defaultNewLine).trim();	  text    =    padding    +    this.defaultNewLine).trim();    	non-compiled	[CE]  	77	None	replace
627	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  sb.append(  padding  +  text.substring(0,  pos).toLowerCase();  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).toLowerCase();  sb.append(  padding  +  text.substring(0,  pos).toLowerCase();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos).toLowerCase();    sb.append(  padding  +  text.substring(0,  pos).toLowerCase();	  	non-compiled	[CE]  ')'  expected	108	None	add
628	[BUG]  [BUGGY]  TextBuffer  text  =  padding  +  text.substring(pos,  height).trim();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  text  =  padding  +  text.substring(pos,  height).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  text  =  padding  +  text.substring(pos,  height).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    TextBuffer    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
629	[BUG]  [BUGGY]  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  not  a  statement	132	None	replace
630	[BUG]  [BUGGY]  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(pos  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(pos  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(pos	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	132	None	replace
631	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  4);  int  pos  =  findWrapPos(text,  width,  4);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  4);  int  pos  =  findWrapPos(text,  width,  4);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    4);    int  pos  =  findWrapPos(text,  width,  4);	  timeout    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	43	None	add
632	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	66	None	replace
633	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	66	None	replace
634	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	66	None	replace
635	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  length,  nextLineTabStop);  [CE]  cannot  find  symbol  length  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  length,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  length,  nextLineTabStop);	  if(nextLineTabStop!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    	non-compiled	[CE]  cannot  find  symbol  length	75	None	replace
636	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  nextLineTabStop  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  if(nextLineTabStop!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    	non-compiled	[CE]  cannot  find  symbol  nextLineTabStop	75	None	replace
637	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  pos);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
638	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  pos);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
639	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
640	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
641	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
642	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	add
643	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    timeout    	compilable	timeout	90	1	replace
644	[BUG]  [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  <  nextLineTabStop)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    timeout    	compilable	timeout	90	1	replace
645	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    timeout    	compilable	timeout	90	1	replace
646	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    timeout    	compilable	timeout	90	1	replace
647	[BUG]  [BUGGY]  if(padding  >  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  else  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  >  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  else  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding  >  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  else  {  text  =  padding  +  text.substring(pos,  pos).trim();  }	  text    =    padding    +    text.substring(pos,    pos).trim();    text    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	31	None	replace
648	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  else  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  else  {  text  =  padding  +  text.substring(pos,  pos).trim();  }	  text    =    padding    +    text.substring(pos,    pos).trim();    text    =    padding    +    text.substring(pos,    pos).trim();    	compilable	  [FE]  ComparisonFailure  	31	2	replace
649	[BUG]  [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  else  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  else  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  pos).trim();  }  else  {  text  =  padding  +  text.substring(pos,  pos).trim();  }	  text    =    padding    +    text.substring(pos,    pos).trim();    text    =    padding    +    text.substring(pos,    pos).trim();    	compilable	  [FE]  ComparisonFailure  	31	2	replace
650	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [CE]  int  cannot  be  dereferenced  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop).trim();    	non-compiled	[CE]  int  cannot  be  dereferenced	81	None	replace
651	[BUG]  [BUGGY]  sb  =  sb  +  padding.substring(0,  pos).trim();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  sb  +  padding.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  sb  +  padding.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  incompatible  types	105	None	replace
652	[BUG]  [BUGGY]  sb  =  text  +  padding.substring(0,  pos).trim();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  text  +  padding.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  text  +  padding.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  incompatible  types	105	None	replace
653	[BUG]  [BUGGY]  [FE]  OutOfMemoryError  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	compilable	  [FE]  OutOfMemoryError  	64	2	replace
654	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  OutOfMemoryError  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    	compilable	  [FE]  OutOfMemoryError  	64	2	replace
655	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding  +  text.substring(pos).trim());  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding  +  text.substring(pos).trim());  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop,  padding  +  text.substring(pos).trim());	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop,    padding);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	37	None	replace
656	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    sb.append(rtrim(text.substring(0,  pos)).append(defaultNewLine);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	non-compiled	[CE]  ')'  expected	63	None	add
657	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  1);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    timeout    	compilable	timeout	101	1	replace
658	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  1);  timeout  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  1);	  sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    timeout    	compilable	timeout	101	1	replace
659	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.writePadding(text,  width,  this.nextLineTabStop);  [CE]  cannot  find  symbol  nextLineTabStop  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.writePadding(text,  width,  this.nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(pos,  pos).trim();  TextUtilities.writePadding(text,  width,  this.nextLineTabStop);	  text    =    padding    +    text.substring(pos,    pos).trim();    TextUtilities.writePadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  nextLineTabStop	130	None	replace
660	[BUG]  [BUGGY]  TextUtilities.writePadding(text,  width  +  nextLineTabStop).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.writePadding(text,  width  +  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.writePadding(text,  width  +  nextLineTabStop).trim();	  text    =    width    +    nextLineTabStop).trim();    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	53	None	replace
661	[BUG]  [BUGGY]  text  = " "  +  padding  +  nextLineTabStop).trim();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  = " "  +  padding  +  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  = " "  +  padding  +  nextLineTabStop).trim();	  text    =    width    +    nextLineTabStop).trim();    	non-compiled	[CE]  	53	None	replace
662	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	123	1	add
663	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);	  	compilable	  [FE]  ComparisonFailure  	123	1	add
664	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	123	2	add
665	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	123	2	add
666	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(pos),  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  text.substring(pos),  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  text.substring(pos),  nextLineTabStop);	  pos    =    findWrapPos(text,    width,    text);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	116	None	replace
667	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  padding,  text.substring(pos).trim();  }  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  padding,  text.substring(pos).trim();  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  padding,  text.substring(pos).trim();  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	60	None	replace
668	[BUG]  [BUGGY]  sb  =  sb  +  padding.substring(pos,  width).trim();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  sb  +  padding.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  sb  +  padding.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    sb    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  incompatible  types	92	None	replace
669	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	89	2	add
670	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	89	2	add
671	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos)).append(defaultNewLine);  }  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos)).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(pos,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos)).append(defaultNewLine);  }	  timeout    	non-compiled	[CE]  ')'  expected	89	None	add
672	[BUG]  [BUGGY]  TextUtilities.writePadding(text,  padding  +  nextLineTabStop.substring(pos,  pos).trim();  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.writePadding(text,  padding  +  nextLineTabStop.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.writePadding(text,  padding  +  nextLineTabStop.substring(pos,  pos).trim();	  text    =    padding    +    nextLineTabStop.substring(pos,    pos).trim();    	non-compiled	[CE]  ')'  expected	76	None	replace
673	[BUG]  [BUGGY]  TextUtilities.writePadding(text,  padding  +  nextLineTabStop.substring(pos,  pos),  padding).trim();  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.writePadding(text,  padding  +  nextLineTabStop.substring(pos,  pos),  padding).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.writePadding(text,  padding  +  nextLineTabStop.substring(pos,  pos),  padding).trim();	  text    =    padding    +    nextLineTabStop.substring(pos,    pos).trim();    	non-compiled	[CE]  int  cannot  be  dereferenced	76	None	replace
674	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	  	non-compiled	[CE]  ')'  expected	65	None	add
675	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  else  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(default	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
676	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(padding);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(padding);	  	compilable	  [FE]  ComparisonFailure  	22	2	add
677	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(padding);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos))).append(nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(padding);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,    pos))).append(nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(padding);	  	compilable	  [FE]  ComparisonFailure  	22	2	add
678	[BUG]  [BUGGY]  [FE]  OutOfMemoryError  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	  [FE]  OutOfMemoryError  	134	2	replace
679	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [FE]  OutOfMemoryError  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	  [FE]  OutOfMemoryError  	134	2	replace
680	[BUG]  [BUGGY]  timeout  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	timeout	134	1	replace
681	[BUG]  [BUGGY]  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  timeout  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	timeout	134	1	replace
682	[BUG]  [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  ')'  expected	134	None	replace
683	[BUG]  [BUGGY]  text  pos  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  pos  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  pos  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    Text    pos    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
684	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextUtilities.text  =  padding  +  text.substring(0,  pos)+  padding.trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextUtilities.text  =  padding  +  text.substring(0,  pos)+  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos)+    padding.trim();    TextUtilities.text  =  padding  +  text.substring(0,  pos)+  padding.trim();	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	94	None	add
685	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  TextUtilities  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos)+    padding.trim();    TextUtilities.writePadding(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	94	None	add
686	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextUtilities.appendPadding(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  TextUtilities  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos)+  padding.trim();  TextUtilities.appendPadding(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(0,    pos)+    padding.trim();    TextUtilities.appendPadding(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	94	None	add
687	[BUG]  [BUGGY]  Text  pos  =  padding  +  text.substring(0,  width).trim();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  pos  =  padding  +  text.substring(0,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  pos  =  padding  +  text.substring(0,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    Text    pos    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
688	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  0)  {  text  =  padding  +  text.substring(0,  pos).trim();  }  else  {  text  =  padding  +  text.substring(0,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  >  0)  {  text  =  padding  +  text.substring(0,  pos).trim();  }  else  {  text  =  padding  +  text.substring(0,  pos).trim();  }	  text    =    padding    +    text.substring(0,    pos).trim();    text    =    padding    +    text.substring(0,    pos).trim();    	compilable	  [FE]  ComparisonFailure  	2	2	replace
689	[BUG]  [BUGGY]  if(pos  >  0)  {  text  =  padding  +  text.substring(0,  pos).trim();  }  else  {  text  =  padding  +  text.substring(0,  pos).trim();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  0)  {  text  =  padding  +  text.substring(0,  pos).trim();  }  else  {  text  =  padding  +  text.substring(0,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  >  0)  {  text  =  padding  +  text.substring(0,  pos).trim();  }  else  {  text  =  padding  +  text.substring(0,  pos).trim();  }	  text    =    padding    +    text.substring(0,    pos).trim();    text    =    padding    +    text.substring(0,    pos).trim();    	compilable	  [FE]  ComparisonFailure  	2	2	replace
690	[BUG]  [BUGGY]  if(pos  <  =  0)  {  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  =  0)  {  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  <  =  0)  {  text  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  }	  text    =    padding    +    text.substring(0,    pos).trim();    text    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
691	[BUG]  [BUGGY]  if(pos  <  =  0)  {  text  =  padding  +  text.substring(0,  pos).trim();  }  else  {  text  =  padding  +  text.substring(0,  pos).trim();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  <  =  0)  {  text  =  padding  +  text.substring(0,  pos).trim();  }  else  {  text  =  padding  +  text.substring(0,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  <  =  0)  {  text  =  padding  +  text.substring(0,  pos).trim();  }  else  {  text  =  padding  +  text.substring(0,  pos).trim();  }	  text    =    padding    +    text.substring(0,    pos).trim();    text    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
692	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  lastLineTabStop  +  1);  [CE]  cannot  find  symbol  lastLineTabStop  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1);  pos  =  findWrapPos(text,  width,  lastLineTabStop  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    pos  =  findWrapPos(text,  width,  lastLineTabStop  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lastLineTabStop	45	None	add
693	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  ComparisonFailure  	55	2	replace
694	[BUG]  [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  ComparisonFailure  	55	2	replace
695	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text.indexOf('n')  >=  -1)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(text.indexOf('n')  >=  -1)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  ComparisonFailure  	55	2	replace
696	[BUG]  [BUGGY]  if(text.indexOf('n')  >=  -1)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }  [FE]  ComparisonFailure  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text.indexOf('n')  >=  -1)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(text.indexOf('n')  >=  -1)  {  text  =  padding  +  text.substring(pos,  width).trim();  }  else  {  text  =  padding  +  text.substring(pos,  width).trim();  }	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	compilable	  [FE]  ComparisonFailure  	55	2	replace
697	[BUG]  [BUGGY]  Text  padding  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  padding  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  padding  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
698	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop),  padding).trim();  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop),  padding).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos,  nextLineTabStop),  padding).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos),    nextLineTabStop).trim();    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	40	None	replace
699	[BUG]  [BUGGY]  TextUtilities.writePadding(text,  padding);  text  =  padding  +  text.substring(pos,  width).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextUtilities.writePadding(text,  padding);  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextUtilities.writePadding(text,  padding);  text  =  padding  +  text.substring(pos,  width).trim();	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.writePadding(text,    width);    text    =    padding    +    text.substring(pos,    width).trim();    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	114	None	replace
700	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  text.length  +  1);  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  text.length  +  1);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  text.length  +  1);	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop    +    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	102	None	replace
701	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	  	non-compiled	[CE]  ')'  expected	67	None	add
702	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  null);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    null);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	83	None	replace
703	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  padding  +  text.substring(pos);  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos),  padding  +  text.substring(pos);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos),  padding  +  text.substring(pos);	  pos    =    findWrapPos(text.substring(0,    pos),    width);    	non-compiled	[CE]  ')'  expected	12	None	replace
704	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(0,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(0,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
705	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(0,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(pos,  width).trim();  text  =  padding  +  text.substring(0,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        width).trim();        text    =    padding    +    text.substring(pos,    width).trim();    text  =  padding  +  text.substring(0,  width).trim();  text  =  padding  +  text.substring(pos,  width).trim();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	2	add
706	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    timeout    	compilable	timeout	29	1	replace
707	[BUG]  [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  timeout  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }	  sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    timeout    	compilable	timeout	29	1	replace
708	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  Text  sb  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  Text  sb  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    Text  sb  =  padding  +  text.substring(pos,  nextLineTabStop).trim();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
709	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [CE]  cannot  find  symbol  TextUtilities  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  nextLineTabStop).trim();  TextUtilities.writePadding(text,  width,  nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    nextLineTabStop).trim();    TextUtilities.writePadding(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	9	None	add
710	[BUG]  [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos),  padding.trim();  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  sb  =  padding  +  text.substring(0,  pos),  padding.trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  padding  +  text.substring(0,  pos),  padding.trim();	  Text    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  ';'  expected	93	None	replace
711	[BUG]  [BUGGY]  Text  sb  =  padding  *  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  Text  sb  =  padding  *  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	Text  sb  =  padding  *  text.substring(0,  pos).trim();	  Text    sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
712	[BUG]  [BUGGY]  timeout  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos!=  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos!=  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	compilable	timeout	72	1	replace
713	[BUG]  [BUGGY]  if(pos!=  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  timeout  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos!=  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos!=  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	compilable	timeout	72	1	replace
714	[BUG]  [BUGGY]  timeout  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >=  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  >=  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	compilable	timeout	72	1	replace
715	[BUG]  [BUGGY]  if(pos  >=  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  timeout  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  >=  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  >=  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	  if(padding!=    null)    {    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    }    timeout    	compilable	timeout	72	1	replace
716	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	compilable	timeout	126	1	replace
717	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	compilable	timeout	126	1	replace
718	[BUG]  [BUGGY]  timeout  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	compilable	timeout	126	1	replace
719	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  timeout  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  pos  =  findWrapPos(text,  width,  0);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	compilable	timeout	126	1	replace
720	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	compilable	timeout	126	1	replace
721	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  }  timeout  [FE]        ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  0);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    0);    pos    =    findWrapPos(text,    width,    0);    	compilable	timeout	126	1	replace
722	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	100	2	add
723	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine    +    padding);    if(pos  >  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine  +  padding);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	100	2	add
724	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  padding  +  text.substring(0,  pos).trim();  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  padding  +  text.substring(0,  pos).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  padding  +  text.substring(0,  pos).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  ')'  expected	41	None	replace
725	[BUG]  [BUGGY]  sb  =  sb  +  padding.substring(pos,  pos).trim();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  sb  +  padding.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  sb  +  padding.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    sb    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  incompatible  types	99	None	replace
726	[BUG]  [BUGGY]  sb  =  sb  +  text.substring(pos,  pos).trim();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  sb  +  text.substring(pos,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  sb  +  text.substring(pos,  pos).trim();	  text    =    padding    +    text.substring(pos,    pos).trim();    sb    =    padding    +    text.substring(pos,    pos).trim();    	non-compiled	[CE]  incompatible  types	99	None	replace
727	[BUG]  [BUGGY]  TextBuffer  text  =  padding  +  text.substring(0,  pos).trim();  this.text  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  TextBuffer  text  =  padding  +  text.substring(0,  pos).trim();  this.text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	TextBuffer  text  =  padding  +  text.substring(0,  pos).trim();  this.text  =  padding  +  text.substring(0,  pos).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    TextBuffer    text    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
728	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  this.defaultNewLine,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  this.defaultNewLine,  nextLineTabStop);	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultNewLine);    	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	61	None	replace
729	[BUG]  [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  text.substring(pos));  [CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  text.substring(pos));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	int  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  text.substring(pos));	  int    pos    =    findWrapPos(text,    width,    nextLineTabStop    +    padding);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  renderWrappedText(StringBuffer,int,int,String)	103	None	replace
730	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  if(pos  +  2)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  if(pos  +  2)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos    +    2))).append(defaultNewLine);    if(pos  +  2)  {  sb.append(rtrim(text.substring(0,  pos  +  2))).append(defaultNewLine);  }	  timeout    	non-compiled	[CE]  incompatible  types	26	None	add
731	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  TextUtilities.writePadding(text,  width  -  1).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  TextUtilities.writePadding(text,  width  -  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width    -    1).trim();    TextUtilities.writePadding(text,  width  -  1).trim();	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	112	None	add
732	[BUG]  [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  TextUtilities.appendPadding(text,  width  -  1).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(pos,  width  -  1).trim();  TextUtilities.appendPadding(text,  width  -  1).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text    =    padding    +    text.substring(pos,    width    -    1).trim();    TextUtilities.appendPadding(text,  width  -  1).trim();	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	112	None	add
733	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	15	2	add
734	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);	  	compilable	  [FE]  ComparisonFailure  	15	2	add
735	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultSyntaxPrefix);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	15	None	add
736	[BUG]  [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos        =        findWrapPos(text,        width,        nextLineTabStop);        pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos  =  findWrapPos(text,  width,  this.defaultNewLine);  pos  =  findWrapPos(text,  width,  nextLineTabStop);	  	non-compiled	[CE]  method  findWrapPos  in  class  HelpFormatter  cannot  be  applied  to  given  types;	85	None	add
737	[BUG]  [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  width).trim();  TextUtilities.appendPadding(text.substring(pos,  width).trim();  }  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  width).trim();  TextUtilities.appendPadding(text.substring(pos,  width).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  width).trim();  TextUtilities.appendPadding(text.substring(pos,  width).trim();  }	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.appendPadding(text.substring(pos,    width).trim();    	non-compiled	[CE]  ')'  expected	58	None	replace
738	[BUG]  [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  width).trim();  TextUtilities.appendPadding(text.substring(pos,  width).trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  width).trim();  TextUtilities.appendPadding(text.substring(pos,  width).trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(text.length()  ==  0)  {  text  =  padding  +  text.substring(pos,  width).trim();  TextUtilities.appendPadding(text.substring(pos,  width).trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text    =    padding    +    text.substring(pos,    width).trim();    TextUtilities.appendPadding(text.substring(pos,    width).trim();    	non-compiled	[CE]  	58	None	replace
739	[BUG]  [BUGGY]  text  = " "  +  padding  +  text).trim();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  = " "  +  padding  +  text).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  = " "  +  padding  +  text).trim();	  text    =    padding    +    text).trim();    	non-compiled	[CE]  	106	None	replace
740	[BUG]  [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  Text  sb  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(0,    pos).trim();    text  =  padding  +  text.substring(0,  pos).trim();  Text  sb  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(0,        pos).trim();        text    =    padding    +    text.substring(0,    pos).trim();    Text  sb  =  padding  +  text.substring(0,  pos).trim();  text  =  padding  +  text.substring(0,  pos).trim();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
741	[BUG]  [BUGGY]  if(padding  >  0)  {  pos  =  findWrapPos(text,  padding  +  text.substring(pos).trim();  }  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(padding  >  0)  {  pos  =  findWrapPos(text,  padding  +  text.substring(pos).trim();  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(padding  >  0)  {  pos  =  findWrapPos(text,  padding  +  text.substring(pos).trim();  }	  pos    =    findWrapPos(text,    padding    +    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	128	None	replace
742	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  padding  +  text.substring(pos).trim();  }  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  padding  +  text.substring(pos).trim();  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  padding  +  text.substring(pos).trim();  }	  pos    =    findWrapPos(text,    padding    +    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	128	None	replace
743	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  padding  +  text.substring(pos,  width).trim();  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  padding  +  text.substring(pos,  width).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  padding  +  text.substring(pos,  width).trim();	  pos    =    findWrapPos(text,    padding    +    text.substring(pos).trim();    	non-compiled	[CE]  ')'  expected	128	None	replace
744	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  pos).trim();  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width  +  text.substring(pos,  pos).trim();  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width  +  text.substring(pos,  pos).trim();	  pos    =    findWrapPos(text,    width    +    text.substring(pos,    nextLineTabStop).trim();    	non-compiled	[CE]  ')'  expected	127	None	replace
745	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  +  1)  {  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  if(pos  +  1)  {  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,    pos    +    1))).append(defaultNewLine);    if(pos  +  1)  {  sb.append(rtrim(text.substring(0,  pos  +  1))).append(defaultNewLine);  }	  	non-compiled	[CE]  incompatible  types	24	None	add
746	[BUG]  [BUGGY]  sb  =  pos  +  padding.substring(0,  pos).trim();  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb  =  pos  +  padding.substring(0,  pos).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb  =  pos  +  padding.substring(0,  pos).trim();	  sb    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  incompatible  types	11	None	replace
747	[BUG]  [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1));  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text,  width,  nextLineTabStop  +  1));	  pos    =    findWrapPos(text.substring(0,    pos    +    1));    	non-compiled	[CE]  ';'  expected	79	None	replace
748	[BUG]  [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos  +  1,  nextLineTabStop));  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  findWrapPos(text.substring(0,  pos  +  1,  nextLineTabStop));  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  findWrapPos(text.substring(0,  pos  +  1,  nextLineTabStop));	  pos    =    findWrapPos(text.substring(0,    pos    +    1));    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	79	None	replace
749	[BUG]  [BUGGY]  pos  =  padding  +  TextUtilities.substring(pos,  padding).trim();  [CE]  cannot  find  symbol  TextUtilities  [FE]            ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  pos  =  padding  +  TextUtilities.substring(pos,  padding).trim();  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	pos  =  padding  +  TextUtilities.substring(pos,  padding).trim();	  text    =    padding    +    text.substring(0,    pos).trim();    pos    =    padding    +    text.substring(0,    pos).trim();    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	4	None	replace
750	[BUG]  [BUGGY]  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	122	1	replace
751	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  timeout  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	compilable	timeout	122	1	replace
752	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  [CE]  ')'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  pos);  pos  =  findWrapPos(text,  width,	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    pos);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	122	None	replace
753	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabS  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabS  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTabS	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	21	None	replace
754	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTab  [CE]  ')'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTab  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  this.defaultDescPad);  pos  =  findWrapPos(text,  width,  nextLineTab	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    this.defaultDescPad);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	21	None	replace
755	[BUG]  [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	                sb.append(rtrim(text.substring(0,        pos))).append(defaultNewLine);        if(pos    >=    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    if(pos  <  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  >=  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNew	  	non-compiled	[CE]  ')'  expected	133	None	add
756	[BUG]  [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  this.nextLineTabStop);  [CE]  cannot  find  symbol  nextLineTabStop  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text  =  padding  +  text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  this.nextLineTabStop);  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text  =  padding  +  text.substring(0,  pos).trim();  TextUtilities.writePadding(text,  width,  this.nextLineTabStop);	  text    =    padding    +    text.substring(0,    pos).trim();    TextUtilities.writePadding(text,    width,    nextLineTabStop);    	non-compiled	[CE]  cannot  find  symbol  nextLineTabStop	120	None	replace
757	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  if(text!=  null)  {  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    if(text!=  null)  {  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
758	[BUG]  [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  if(text!=  null)  {  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  text    =    padding    +    text.substring(pos,    pos).trim();    text  =  padding  +  text.substring(pos,  pos).trim();  if(text!=  null)  {  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  }  [BUGGY]      pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	text        =        padding        +        text.substring(pos,        pos).trim();        text    =    padding    +    text.substring(pos,    pos).trim();    if(text!=  null)  {  text  =  padding  +  text.substring(pos,  pos).trim();  text  =  padding  +  text.substring(pos,  pos).trim();  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	add
759	[BUG]  [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text.length())  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  defaultNewLine);  pos  =  findWrapPos(text,  width,	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    defaultNewLine);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	18	None	replace
760	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	28	2	add
761	[BUG]  [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	sb.append(rtrim(text.substring(0,    pos    -    1))).append(defaultNewLine);    if(pos  >  0)  {  sb.append(rtrim(text.substring(0,  pos  -  1))).append(defaultNewLine);  }	  timeout    	compilable	  [FE]  ComparisonFailure  	28	2	add
762	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	add	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	timeout	68	1	replace
763	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  timeout  [FE]    ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  }	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	compilable	timeout	68	1	replace
764	[BUG]  [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(default  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(default  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(default	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
765	[BUG]  [BUGGY]  if(nextLineTabStop!=  text)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(nextLineTabStop!=  text)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(nextLineTabStop!=  text)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabS    	non-compiled	[CE]  ')'  expected	69	None	replace
766	[BUG]  [BUGGY]  if(text!=  null)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text!=  null)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(text!=  null)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabS    	non-compiled	[CE]  ')'  expected	69	None	replace
767	[BUG]  [BUGGY]  if(text  ==  null)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(text  ==  null)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(text  ==  null)  {  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  if(pos  ==  -1)  {  sb.append(rtrim(text.substring(pos,  pos))).append(defaultNew	          sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    if(pos    ==    -1)    {    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);    }    else    {    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabS    	non-compiled	[CE]  ')'  expected	69	None	replace
768	[BUG]  [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);    final  String  padding  =  createPadding(nextLineTabStop);  while  (true)  {      [BUGGY]  if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,  [BUGGY]      text  =  padding  +  text.substring(pos).trim();  pos  =  findWrapPos(text,  width,  nextLineTabStop);  if  (pos  ==  -1)  {  sb.append(text);  return  sb;  }  sb.append(rtrim(text.substring(0,  pos))).append(defaultNewLine);  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderWrappedText  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  int  nextLineTabStop  String  text  [VARIABLES]  StringBuffer  sb  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  padding  prefix  text  boolean  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  pos  width  x  	projects/Cli8/src/java/org/apache/commons/cli/HelpFormatter.java	0.7071067811865475	811	811	1	replace	if(pos  ==  -1)  {  pos  =  findWrapPos(text,  width,  nextLineTabStop);  pos  =  findWrapPos(text,  width,  nextLineTabStop);  }  else  {  pos  =  findWrapPos(text,  width,	          pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    pos    =    findWrapPos(text,    width,    defaultLineTabStop);    pos    =    findWrapPos(text,    width,    nextLineTabStop);    	non-compiled	[CE]  ')'  expected	84	None	replace
