bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(lowerBound,  upperBound,  true,  null);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(lowerBound,  upperBound,  true,  null);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(lowerBound,  upperBound,  true,  null);	  this(lowerBound,    upperBound,    false,    null);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
2	[BUG]  [BUGGY]  If(lowerBound  <  upperBound)  {  [CE]  ';'  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  If(lowerBound  <  upperBound)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	If(lowerBound  <  upperBound)  {	  if(lowerBound    <    upperBound)    {    If(lowerBound    <    upperBound)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
3	[BUG]  [BUGGY]  this.lowerBound  =  lowerBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this.lowerBound  =  lowerBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this.lowerBound  =  lowerBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	          super();    this.lowerBound    =    lowerBound;    if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
4	[BUG]  [BUGGY]  super(this.upperBound,  lowerBound,  upperBound);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  super(this.upperBound,  lowerBound,  upperBound);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	super(this.upperBound,  lowerBound,  upperBound);	  super(lowerBound,    upperBound,    this.upperBound);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  super(this.upperBound,  lowerBound,  this.upperBound);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  super(this.upperBound,  lowerBound,  this.upperBound);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	super(this.upperBound,  lowerBound,  this.upperBound);	  super(lowerBound,    upperBound,    this.upperBound);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  this.lowerBound  =  lowerBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this.lowerBound  =  lowerBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this.lowerBound  =  lowerBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	          super();    this.lowerBound    =    lowerBound;    if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
7	[BUG]  [BUGGY]  this.lowerBound  =  lowerBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this.lowerBound  =  lowerBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this.lowerBound  =  lowerBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	          super();    this.lowerBound    =    lowerBound;    if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
8	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  super();  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  super();  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        this.lowerBound    =    lowerBound;    super();  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	22	None	add
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        this.lowerBound    =    lowerBound;    if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	22	1	add
10	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        this.lowerBound    =    lowerBound;    if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	22	1	add
11	[BUG]  [BUGGY]  this.lowerBound  =  lowerBound  +  1;  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this.lowerBound  =  lowerBound  +  1;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this.lowerBound  =  lowerBound  +  1;	  this.lowerBound    =    lowerBound;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  this(lowerBound,  upperBound,  true,  false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(lowerBound,  upperBound,  true,  false);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(lowerBound,  upperBound,  true,  false);	  this(lowerBound,    upperBound,    false,    true);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  this(lowerBound,  upperBound,  false,  false);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(lowerBound,  upperBound,  false,  false);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(lowerBound,  upperBound,  false,  false);	  this(lowerBound,    upperBound,    false,    true);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  if(lowerBound  >=  upperBound.   ");  [CE]  unclosed  string  literal  [FE]        IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  if(lowerBound  >=  upperBound.   ");  [BUGGY]      throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	if(lowerBound  >=  upperBound.   ");	  if(lowerBound    <    upperBound.       ");    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
15	[BUG]  [BUGGY]  this.lowerBound  =  lowerBound;  this.lowerBound  =  upperBound;  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this.lowerBound  =  lowerBound;  this.lowerBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this.lowerBound  =  lowerBound;  this.lowerBound  =  upperBound;	          super();    this.lowerBound    =    lowerBound;    this.lowerBound    =    lowerBound;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
16	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
17	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
18	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	5	add
19	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	5	add
20	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  super();  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  super();  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        this.upperBound    =    upperBound;    super();  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	24	None	add
21	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        this.upperBound    =    upperBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
22	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        this.upperBound    =    upperBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
23	[BUG]  [BUGGY]  this.lowerBound  =  lowerBound;  if(this.upperBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this.lowerBound  =  lowerBound;  if(this.upperBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this.lowerBound  =  lowerBound;  if(this.upperBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	          super();    this.lowerBound    =    lowerBound;    if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
24	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	18	1	add
25	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	18	1	add
26	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound!=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    if  (lowerBound!=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	18	5	add
27	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound!=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound!=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    if  (lowerBound!=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	18	5	add
28	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	18	1	add
29	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	18	1	add
30	[BUG]  [BUGGY]  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;	          super();    this.lowerBound    =    lowerBound;    this.upperBound    =    upperBound;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
31	[BUG]  [BUGGY]  this(lowerBound,  upperBound);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(lowerBound,  upperBound);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(lowerBound,  upperBound);	          super();    this.lowerBound    =    lowerBound;    this.upperBound    =    upperBound;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
32	[BUG]  [BUGGY]  if(lowerBound  <  upperBound.   "  +  this.upperBound)  {  [CE]  unclosed  string  literal  [FE]        IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  if(lowerBound  <  upperBound.   "  +  this.upperBound)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	if(lowerBound  <  upperBound.   "  +  this.upperBound)  {	  if(lowerBound    <    upperBound.       ")    {    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
33	[BUG]  [BUGGY]  if(lowerBound  <  upperBound.)  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  if(lowerBound  <  upperBound.)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	if(lowerBound  <  upperBound.)  {	  if(lowerBound    <    upperBound.       ")    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  super(lowerBound,  upperBound,  true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  super(lowerBound,  upperBound,  true);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	super(lowerBound,  upperBound,  true);	  super(lowerBound,    upperBound,    false);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  super(this.lowerBound,  upperBound,  false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  super(this.lowerBound,  upperBound,  false);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	super(this.lowerBound,  upperBound,  false);	  super(lowerBound,    upperBound,    false);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  this(new  Double(lowerBound),  upperBound,  false);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(new  Double(lowerBound),  upperBound,  false);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(new  Double(lowerBound),  upperBound,  false);	  this(new    Double(lowerBound),    upperBound,    true);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
37	[BUG]  [BUGGY]  this(new  Double(lowerBound,  upperBound,  false);  [CE]  ')'  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(new  Double(lowerBound,  upperBound,  false);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(new  Double(lowerBound,  upperBound,  false);	  this(new    Double(lowerBound),    upperBound,    true);    	non-compiled	[CE]  ')'  expected	27	None	replace
38	[BUG]  [BUGGY]  this(new  Double(lowerBound,  upperBound,  true));  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(new  Double(lowerBound,  upperBound,  true));  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(new  Double(lowerBound,  upperBound,  true));	  this(new    Double(lowerBound),    new    Double(upperBound,    true));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
39	[BUG]  [BUGGY]  super(this.lowerBound,  lowerBound);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  super(this.lowerBound,  lowerBound);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	super(this.lowerBound,  lowerBound);	  super(this.lowerBound,    upperBound);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
40	[BUG]  [BUGGY]  super(this.lowerBound,  upperBound,  this.upperBound);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  super(this.lowerBound,  upperBound,  this.upperBound);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	super(this.lowerBound,  upperBound,  this.upperBound);	  super(this.lowerBound,    upperBound);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
41	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.lowerBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	2	add
42	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.lowerBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	2	add
43	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	5	add
44	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	5	add
45	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	2	add
46	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	2	add
47	[BUG]  [BUGGY]  super(lowerBound,  upperBound,  true);  this.upperBound  =  null;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  super(lowerBound,  upperBound,  true);  this.upperBound  =  null;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	super(lowerBound,  upperBound,  true);  this.upperBound  =  null;	  super(lowerBound,    upperBound,    false);    this.upperBound    =    null;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	30	2	add
49	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	30	2	add
50	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	30	2	add
51	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	30	2	add
52	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound!=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    if  (lowerBound!=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	30	5	add
53	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound!=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound!=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    if  (lowerBound!=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	30	5	add
54	[BUG]  [BUGGY]  this.upperBound  =  lowerBound;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this.upperBound  =  lowerBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this.upperBound  =  lowerBound;	  this.upperBound    =    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  this.upperBound  =  upperBound;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this.upperBound  =  upperBound;	  this.upperBound    =    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  this(new  Double(lowerBound,  upperBound,  false));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(new  Double(lowerBound,  upperBound,  false));  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(new  Double(lowerBound,  upperBound,  false));	  this(new    Double(lowerBound),    new    Double(upperBound,    false));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
57	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	18	5	add
58	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.upperBound  =  upperBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	18	5	add
59	[BUG]  [BUGGY]  if(lowerBound  ==  upperBound)  {  If(lowerBound  <  upperBound)  {  [CE]  ';'  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  if(lowerBound  ==  upperBound)  {  If(lowerBound  <  upperBound)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	if(lowerBound  ==  upperBound)  {  If(lowerBound  <  upperBound)  {	  if(lowerBound    <    upperBound)    {    If(lowerBound    <    upperBound)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
60	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        this.lowerBound    =    lowerBound;    if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	22	1	add
61	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        this.lowerBound    =    lowerBound;    if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	22	1	add
62	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound  =  lowerBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	5	add
63	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound  =  lowerBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	5	add
64	[BUG]  [BUGGY]  this(lowerBound,  upperBound);  this.lowerBound  =  lowerBound;  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(lowerBound,  upperBound);  this.lowerBound  =  lowerBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(lowerBound,  upperBound);  this.lowerBound  =  lowerBound;	          super();    this.lowerBound    =    lowerBound;    this.lowerBound    =    lowerBound;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
65	[BUG]  [BUGGY]  this(lowerBound,  upperBound,  true,  true);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(lowerBound,  upperBound,  true,  true);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(lowerBound,  upperBound,  true,  true);	  this(lowerBound,    upperBound,    false,    true);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
66	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	30	5	add
67	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.upperBound  =  upperBound;	  	compilable	  [FE]  IllegalArgumentException  	30	5	add
68	[BUG]  [BUGGY]  this(new  Double(lowerBound),  lowerBound,  false);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(new  Double(lowerBound),  lowerBound,  false);  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(new  Double(lowerBound),  lowerBound,  false);	  this(new    Double(lowerBound),    upperBound,    true);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
69	[BUG]  [BUGGY]  this(lowerBound,  upperBound);  this.upperBound  =  upperBound;  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(lowerBound,  upperBound);  this.upperBound  =  upperBound;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(lowerBound,  upperBound);  this.upperBound  =  upperBound;	          super();    this.lowerBound    =    lowerBound;    this.upperBound    =    upperBound;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
70	[BUG]  [BUGGY]  this(lowerBound,  upperBound);  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(lowerBound,  upperBound);  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(lowerBound,  upperBound);  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	          super();    this.lowerBound    =    lowerBound;    if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
71	[BUG]  [BUGGY]  this(lowerBound,  upperBound);  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(lowerBound,  upperBound);  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(lowerBound,  upperBound);  if  (lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	          super();    this.lowerBound    =    lowerBound;    if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.upperBound    =    upperBound;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
72	[BUG]  [BUGGY]  this(lowerBound,  upperBound);  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(lowerBound,  upperBound);  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(lowerBound,  upperBound);  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	          super();    this.lowerBound    =    lowerBound;    if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
73	[BUG]  [BUGGY]  this(lowerBound,  lowerBound);  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(lowerBound,  lowerBound);  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(lowerBound,  lowerBound);  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	          super();    this.lowerBound    =    lowerBound;    if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
74	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound  =  lowerBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	2	add
75	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound  =  lowerBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	2	add
76	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  >=  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.lowerBound  >=  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	5	add
77	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  >=  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.lowerBound  >=  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.lowerBound  >=  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	5	add
78	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        this.upperBound    =    upperBound;    if(lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
79	[BUG]  [BUGGY]  this(new  Double(lowerBound),  new  Double(upperBound));  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(new  Double(lowerBound),  new  Double(upperBound));  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(new  Double(lowerBound),  new  Double(upperBound));	          super();    this.lowerBound    =    lowerBound;    if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
80	[BUG]  [BUGGY]  this(new  Double(lowerBound),  new  double(upperBound));  [CE]  '['  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this(new  Double(lowerBound),  new  double(upperBound));  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this(new  Double(lowerBound),  new  double(upperBound));	          super();    this.lowerBound    =    lowerBound;    if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    	non-compiled	[CE]  '['  expected	17	None	replace
81	[BUG]  [BUGGY]  this.lowerBound  =  lowerBound;  this.upperBound  =  null;  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this.lowerBound  =  lowerBound;  this.upperBound  =  null;  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this.lowerBound  =  lowerBound;  this.upperBound  =  null;	          super();    this.lowerBound    =    lowerBound;    this.upperBound    =    upperBound;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
82	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	2	add
83	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	28	2	add
84	[BUG]  [BUGGY]  if(lowerBound  <  upperBound.   "  +  getClass().getName())  {  [CE]  unclosed  string  literal  [FE]        IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  if(lowerBound  <  upperBound.   "  +  getClass().getName())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	if(lowerBound  <  upperBound.   "  +  getClass().getName())  {	  if(lowerBound    <    upperBound.       ")    {    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
85	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  if(lowerBound!=  upperBound)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	if(lowerBound!=  upperBound)  {	  if    (lowerBound    ==    upperBound)    {    if    (lowerBound!=    upperBound)    {    	compilable	  [FE]  IllegalArgumentException  	14	5	replace
86	[BUG]  [BUGGY]  if(lowerBound!=  upperBound)  {  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  if(lowerBound!=  upperBound)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	if(lowerBound!=  upperBound)  {	  if    (lowerBound    ==    upperBound)    {    if    (lowerBound!=    upperBound)    {    	compilable	  [FE]  IllegalArgumentException  	14	5	replace
87	[BUG]  [BUGGY]  this.lowerBound  =  upperBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  this.lowerBound  =  upperBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	this.lowerBound  =  upperBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	          super();    this.lowerBound    =    lowerBound;    if(this.upperBound    <    lowerBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    this.lowerBound    =    lowerBound;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
88	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  if(this.lowerBound  <  upperBound)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	if(this.lowerBound  <  upperBound)  {	  if(lowerBound    <    upperBound)    {    if(lowerBound    <    upperBound)    {    	compilable	  [FE]  IllegalArgumentException  	7	5	replace
89	[BUG]  [BUGGY]  if(this.lowerBound  <  upperBound)  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]  if(this.lowerBound  <  upperBound)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	if(this.lowerBound  <  upperBound)  {	  if(lowerBound    <    upperBound)    {    if(lowerBound    <    upperBound)    {    	compilable	  [FE]  IllegalArgumentException  	7	5	replace
90	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  if(this.lowerBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        this.upperBound    =    upperBound;    if(this.lowerBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
91	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  if(this.lowerBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  if(this.lowerBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        this.upperBound    =    upperBound;    if(this.lowerBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
92	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  if(lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        this.upperBound    =    upperBound;    if(lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	24	5	add
93	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  if(lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.upperBound  =  upperBound;  if(lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        this.upperBound    =    upperBound;    if(lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	24	5	add
94	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	2	add
95	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound.     ");  }  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        if    (lowerBound    >=    upperBound)    {    throw    new    IllegalArgumentException(   "Requires    lowerBound    <    upperBound.       ");    }    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	2	add
96	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	22	2	add
97	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        this.lowerBound    =    lowerBound;    if(this.upperBound  <  lowerBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	22	2	add
98	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	                super();        this.lowerBound        =        lowerBound;        this.lowerBound    =    lowerBound;    if(lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	22	5	add
99	[BUG]  [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  GrayPaintScale(double  lowerBound,  double  upperBound)  {      [BUGGY]          super();    this.lowerBound    =    lowerBound;    this.lowerBound  =  lowerBound;  if(lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }  [BUGGY]      if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(       "Requires  lowerBound  <  upperBound.     ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	                super();        this.lowerBound        =        lowerBound;        this.lowerBound    =    lowerBound;    if(lowerBound  <  upperBound)  {  throw  new  IllegalArgumentException( "Requires  lowerBound  <  upperBound.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	22	5	add
