bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    super(lowerBound,  upperBound);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]    IllegalArgumentException  [CONTEXT]  public  GrayPaintScale(double  lowerBound,  double  upperBound)  {  [BUGGY]    super(lowerBound,  upperBound);  [BUGGY]  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound. ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	    super(lowerBound,  upperBound);		non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	16	None	add
2	[BUG]  [BUGGY]    this(lowerBound,  upperBound,  true);  [CE]  no  suitable  constructor  found  for  GrayPaintScale(double,double,boolean)  [FE]      IllegalArgumentException  [CONTEXT]  public  GrayPaintScale(double  lowerBound,  double  upperBound)  {  [BUGGY]    this(lowerBound,  upperBound,  true);  [BUGGY]  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound. ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	    this(lowerBound,  upperBound,  true);		non-compiled	[CE]  no  suitable  constructor  found  for  GrayPaintScale(double,double,boolean)	16	None	add
3	[BUG]  [BUGGY]    this(lowerBound,  upperBound,  false);  [CE]  no  suitable  constructor  found  for  GrayPaintScale(double,double,boolean)  [FE]        IllegalArgumentException  [CONTEXT]  public  GrayPaintScale(double  lowerBound,  double  upperBound)  {  [BUGGY]    this(lowerBound,  upperBound,  false);  [BUGGY]  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound. ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	    this(lowerBound,  upperBound,  false);		non-compiled	[CE]  no  suitable  constructor  found  for  GrayPaintScale(double,double,boolean)	16	None	add
4	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  public  GrayPaintScale(double  lowerBound,  double  upperBound)  {  [BUGGY]  if(lowerBound  <  upperBound)  {  [BUGGY]  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound. ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	if(lowerBound  <  upperBound)  {	if  (lowerBound  >=  upperBound)  {  	compilable	  [FE]  IllegalArgumentException  	15	5	replace
5	[BUG]  [BUGGY]  if(lowerBound  <  upperBound)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  public  GrayPaintScale(double  lowerBound,  double  upperBound)  {  [BUGGY]  if(lowerBound  <  upperBound)  {  [BUGGY]  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound. ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	if(lowerBound  <  upperBound)  {	if  (lowerBound  >=  upperBound)  {  	compilable	  [FE]  IllegalArgumentException  	15	5	replace
6	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  public  GrayPaintScale(double  lowerBound,  double  upperBound)  {  [BUGGY]  if  (lowerBound  ==  upperBound)  {  [BUGGY]  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound. ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	if  (lowerBound  ==  upperBound)  {	if  (lowerBound  >=  upperBound)  {  	compilable	  [FE]  IllegalArgumentException  	15	1	replace
7	[BUG]  [BUGGY]  if  (lowerBound  ==  upperBound)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  public  GrayPaintScale(double  lowerBound,  double  upperBound)  {  [BUGGY]  if  (lowerBound  ==  upperBound)  {  [BUGGY]  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound. ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	if  (lowerBound  ==  upperBound)  {	if  (lowerBound  >=  upperBound)  {  	compilable	  [FE]  IllegalArgumentException  	15	1	replace
8	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  public  GrayPaintScale(double  lowerBound,  double  upperBound)  {  [BUGGY]    super();  this.lowerBound  =  lowerBound;  [BUGGY]  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound. ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	add	    super();  this.lowerBound  =  lowerBound;		compilable	  [FE]  IllegalArgumentException  	16	1	add
9	[BUG]  [BUGGY]    super();  this.lowerBound  =  lowerBound;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  public  GrayPaintScale(double  lowerBound,  double  upperBound)  {  [BUGGY]    super();  this.lowerBound  =  lowerBound;  [BUGGY]  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound. ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	    super();  this.lowerBound  =  lowerBound;		compilable	  [FE]  IllegalArgumentException  	16	1	add
10	[BUG]  [BUGGY]    super(lowerBound,  upperBound);  this.upperBound  =  null;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]      IllegalArgumentException  [CONTEXT]  public  GrayPaintScale(double  lowerBound,  double  upperBound)  {  [BUGGY]    super(lowerBound,  upperBound);  this.upperBound  =  null;  [BUGGY]  if  (lowerBound  >=  upperBound)  {  throw  new  IllegalArgumentException(   "Requires  lowerBound  <  upperBound. ");  }  this.lowerBound  =  lowerBound;  this.upperBound  =  upperBound;  }  [CLASS]  GrayPaintScale  [METHOD]  <init>  [RETURN_TYPE]  GrayPaintScale(double,double)  double  lowerBound  double  upperBound  [VARIABLES]  double  lowerBound  upperBound  boolean  	projects/Chart24/source/org/jfree/chart/renderer/GrayPaintScale.java	0.4472135954999579	85	85	1	replace	    super(lowerBound,  upperBound);  this.upperBound  =  null;		non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	16	None	add
