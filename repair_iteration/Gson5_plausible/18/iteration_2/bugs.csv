bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	2	None	replace
2	[BUG]  [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	2	None	replace
3	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	2	None	replace
4	[BUG]  [BUGGY]  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	15	None	replace
5	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
6	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
7	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
8	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
9	[BUG]  [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezone))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  clean	9	None	replace
10	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  ||!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
11	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
12	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]            JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
13	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
14	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
15	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                  JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
16	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
17	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
18	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
19	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneIndicator))    {    if  (!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	10	None	add
20	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneIndicator))    {    If  (!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  ';'  expected	10	None	add
21	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneOutdicator))  {  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneOutdicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneIndicator))    {    if  (!cleaned.equals(timezoneOutdicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	10	None	add
22	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  for  (!cleaned.equals(timezoneIndicator))  {  [CE]  not  a  statement  [FE]          JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  for  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneIndicator))    {    for  (!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  not  a  statement	10	None	add
23	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
24	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    if(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
25	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  ';'  expected	12	None	add
26	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  if(cleaned  >=  null  &&!cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  if(cleaned  >=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    if(cleaned  >=  null  &&!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
27	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  if(cleaned  >>  null  &&!cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  if(cleaned  >>  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    if(cleaned  >>  null  &&!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
28	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	14	None	add
29	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    If  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  ';'  expected	14	None	add
30	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if  (!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	14	None	add
31	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
32	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
33	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  ';'  expected	3	None	add
34	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned  >=  null  ||!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
35	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneID))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneID))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned  ==  null  ||!cleaned.equals(timezoneID))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
36	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned  ==  null  ||!cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
37	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if(cleaned!=  null)  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  if(cleaned!=  null)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null)    {    if(cleaned!=  null)  {	  	non-compiled	[CE]  'catch'  without  'try'	6	None	add
38	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if(cleaned  ==  null)  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  if(cleaned  ==  null)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null)    {    if(cleaned  ==  null)  {	  	non-compiled	[CE]  'catch'  without  'try'	6	None	add
39	[BUG]  [BUGGY]  if(cleaned!=  null)  {  If(cleaned!=  null)  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  If(cleaned!=  null)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null)    {    If(cleaned!=  null)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
40	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if(cleaned  >=  null)  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  if(cleaned  >=  null)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null)    {    if(cleaned  >=  null)  {	  	non-compiled	[CE]  'catch'  without  'try'	6	None	add
41	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if(cleaned  >>  null)  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  if(cleaned  >>  null)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null)    {    if(cleaned  >>  null)  {	  	non-compiled	[CE]  'catch'  without  'try'	6	None	add
42	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if(cleaned  [BUGGY]  null)  {  [CE]  ')'  expected  [FE]              JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  if(cleaned  [BUGGY]  null)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null)    {    if(cleaned  [BUGGY]  null)  {	  	non-compiled	[CE]  ')'  expected	6	None	add
43	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if(cleaned  [Delete]  null)  {  [CE]  ')'  expected  [FE]                JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  if(cleaned  [Delete]  null)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null)    {    if(cleaned  [Delete]  null)  {	  	non-compiled	[CE]  ')'  expected	6	None	add
44	[BUG]  [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	11	None	replace
45	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
46	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
47	[BUG]  [BUGGY]  if(clean.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	11	None	replace
48	[BUG]  [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!clean.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	13	None	replace
49	[BUG]  [BUGGY]  if(clean  ==  null  &&!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean  ==  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	13	None	replace
50	[BUG]  [BUGGY]  if(clean!=  null)  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {	  if(cleaned!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  clean	7	None	replace
51	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {	  if(cleaned!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
52	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {	  if(cleaned!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
53	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  ||  cleaned.length()  ==  0)  {	  if(cleaned!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
54	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||  cleaned.length()  ==  0)  {	  if(cleaned!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
55	[BUG]  [BUGGY]  if(clean!=  null  ||  cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null  ||  cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||  cleaned.equals(timezoneId))  {	  if(cleaned!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  clean	7	None	replace
56	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
57	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
58	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
59	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
60	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  ';'  expected	1	None	add
61	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned  >=  null  ||!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
62	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  >>  null  ||!cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  >>  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned  >>  null  ||!cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
63	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=  null  ||!cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
64	[BUG]  [BUGGY]  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	8	None	add
65	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID());  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
66	[BUG]  [BUGGY]  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID());  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID());  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
67	[BUG]  [BUGGY]  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID());  }  [CE]  illegal  start  of  type  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID());  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
68	[BUG]  [BUGGY]  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID());  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID());  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID());	  	non-compiled	[CE]  'else'  without  'if'	8	None	add
69	[BUG]  [BUGGY]  if(clean  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	4	None	replace
70	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	4	None	replace
71	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	14	None	add
72	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if  (!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  unclosed  string  literal	14	None	add
73	[BUG]  [BUGGY]  if  (!cleaned.equals(timezone))  {  If  (!cleaned.equals(timezone))  {  [CE]  ';'  expected  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezone))  {  If  (!cleaned.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezone))    {    If  (!cleaned.equals(timezone))  {	  	non-compiled	[CE]  ';'  expected	8	None	add
74	[BUG]  [BUGGY]  if  (!cleaned.equals(timezone))  {  if  (!Cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezone))  {  if  (!Cleaned.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezone))    {    if  (!Cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	8	None	add
75	[BUG]  [BUGGY]  if  (!cleaned.equals(timezone))  {  for  (!cleaned.equals(timezone))  {  [CE]  not  a  statement  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezone))  {  for  (!cleaned.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezone))    {    for  (!cleaned.equals(timezone))  {	  	non-compiled	[CE]  not  a  statement	8	None	add
76	[BUG]  [BUGGY]  if(clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  clean	9	None	replace
77	[BUG]  [BUGGY]  if(clean.equals(timezone))  {  [CE]  cannot  find  symbol  clean  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  clean	9	None	replace
78	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
79	[BUG]  [BUGGY]  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleane  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	15	None	replace
80	[BUG]  [BUGGY]  if(clean  ==  null)  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean  ==  null)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null)  {	  if(cleaned!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  clean	7	None	replace
81	[BUG]  [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	11	None	replace
82	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||! "cleaned.equals(timezoneId))  {  [CE]  unclosed  string  literal  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||! "cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned  ==  null  ||! "cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  unclosed  string  literal	3	None	add
83	[BUG]  [BUGGY]  if(clean!=  null)  {  System.err.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  System.err.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  System.err.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	      	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
84	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
85	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
86	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                  JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
87	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
88	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol  clean	5	None	replace
89	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  &&!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
90	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  &&!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
91	[BUG]  [BUGGY]  if(cleane!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleane  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleane!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	2	None	replace
92	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  [CE]  cannot  find  symbol  cleaneeded  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaneeded!=  null)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {	  if(cleaned!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	7	None	replace
93	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  &&  cleaned.length()  >  0)  {	  if(cleaned!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
94	[BUG]  [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  &&  cleaned.length()  >  0)  {	  if(cleaned!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
95	[BUG]  [BUGGY]  if(cleaneeded  ==  null)  {  [CE]  cannot  find  symbol  cleaneeded  [FE]          JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaneeded  ==  null)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded  ==  null)  {	  if(cleaned!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	7	None	replace
96	[BUG]  [BUGGY]  if(cleanleaned!=  null  &&  cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleanleaned  [FE]            JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleanleaned!=  null  &&  cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanleaned!=  null  &&  cleaned.equals(timezoneId))  {	  if(cleaned!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleanleaned	7	None	replace
97	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
98	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
100	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
101	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
102	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
103	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
104	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  if  (!Cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  if  (!Cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneIndicator))    {    if  (!Cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	10	None	add
105	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
106	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
107	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
108	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
109	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
110	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
111	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
112	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
113	[BUG]  [BUGGY]  if(cleaneeded!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleaneeded  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaneeded!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	4	None	replace
114	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
115	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
116	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
117	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(   ":   ",     "   ");    [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+   "  given,  resolves  to     "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
