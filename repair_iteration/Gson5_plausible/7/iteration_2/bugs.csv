bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'catch'  without  'try'	12	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'catch'  without  'try'	12	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'catch'  without  'try'	12	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'catch'  without  'try'	12	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'catch'  without  'try'	12	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'catch'  without  'try'	12	None	replace
7	[BUG]  [BUGGY]  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  -  1;	  offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	16	1	replace
9	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1;	  offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	16	1	replace
10	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  milliseconds  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds  -  1;	  offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	16	1	replace
11	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  milliseconds  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  -  1;	  offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	16	1	replace
12	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  2;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  2;	  offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	16	1	replace
13	[BUG]  [BUGGY]  offset  =  endOffset  -  2;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  2;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  2;	  offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	16	1	replace
14	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  -  1;	  offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	16	1	replace
15	[BUG]  [BUGGY]  offset  =  offset  -  1;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  1;	  offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	16	1	replace
16	[BUG]  [BUGGY]  offset  =  startOffset  -  1;  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  startOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  -  1;	  offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  startOffset	16	None	replace
17	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  1;	  offset    =    endOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
18	[BUG]  [BUGGY]  offset  =  offset  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;	  offset    =    endOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
19	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;	  offset    =    endOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
20	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;	  offset    =    endOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
21	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  2;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  +  2;	  offset    =    endOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
22	[BUG]  [BUGGY]  offset  =  endOffset  +  2;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  2;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  2;	  offset    =    endOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
23	[BUG]  [BUGGY]  offset  =  pos  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  +  1;	  offset    =    endOffset    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	9	None	replace
24	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  startOffset  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;	  offset    =    endOffset    +    1;    	non-compiled	[CE]  cannot  find  symbol  startOffset	9	None	replace
25	[BUG]  [BUGGY]  offset  =  date.getOffset();  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  date.getOffset();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.getOffset();	  offset    =    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
26	[BUG]  [BUGGY]  offset  =  parseEndOffset.getOffset();  [CE]  int  cannot  be  dereferenced  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset.getOffset();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.getOffset();	  offset    =    pos.getOffset();    	non-compiled	[CE]  int  cannot  be  dereferenced	7	None	replace
27	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getOffset();  [CE]  incompatible  types  [FE]                    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getOffset();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  pos.getOffset();	  offset    =    pos.getOffset();    	non-compiled	[CE]  incompatible  types	7	None	replace
28	[BUG]  [BUGGY]  offset  =  parseStartOffset.getOffset();  [CE]  cannot  find  symbol  parseStartOffset  [FE]                      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseStartOffset.getOffset();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset.getOffset();	  offset    =    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	7	None	replace
29	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  pos.getOffset());  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  DateUtils.parseDate(date,  pos.getOffset());  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  pos.getOffset());	  offset    =    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
30	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  pos.getOffset();  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  pos.getOffset();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  pos.getOffset();	  offset    =    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
31	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset;  offset  =  parseEndOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset;    offset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
32	[BUG]  [BUGGY]  offset  =  parseEndOffset;  offset  =  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset;  offset  =  parseEndOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset;    offset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
33	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
34	[BUG]  [BUGGY]  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
35	[BUG]  [BUGGY]  offset  =  parseEndOffset;  offset  =  parseStartOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset;  offset  =  parseStartOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset;    offset  =  parseStartOffset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	1	None	add
36	[BUG]  [BUGGY]  offset  =  parseEndOffset;  Offset  offset  =  parseEndOffset;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset;  Offset  offset  =  parseEndOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset;    Offset  offset  =  parseEndOffset;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
37	[BUG]  [BUGGY]  offset  =  parseEndOffset;  pos  =  parseEndOffset;  [CE]  incompatible  types  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset;  pos  =  parseEndOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset;    pos  =  parseEndOffset;	  	non-compiled	[CE]  incompatible  types	1	None	add
38	[BUG]  [BUGGY]  offset  =  parseEndOffset;  parseEndOffset  =  parseStartOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset;  parseEndOffset  =  parseStartOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset;    parseEndOffset  =  parseStartOffset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	1	None	add
39	[BUG]  [BUGGY]  offset  =  pos.length;  [CE]  cannot  find  symbol  length  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.length;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.length;	  offset    =    pos;    	non-compiled	[CE]  cannot  find  symbol  length	3	None	replace
40	[BUG]  [BUGGY]  offset  =  pos.offset;  [CE]  cannot  find  symbol  offset  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset;	  offset    =    pos;    	non-compiled	[CE]  cannot  find  symbol  offset	3	None	replace
41	[BUG]  [BUGGY]  offset  =  pos.intValue();  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.intValue();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.intValue();	  offset    =    pos;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
42	[BUG]  [BUGGY]  offset  =  pos.getLocalMillis();  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.getLocalMillis();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getLocalMillis();	  offset    =    pos;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
43	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    offset  =  endOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
44	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    offset  =  endOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
45	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
46	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
47	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
48	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
49	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
50	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
51	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  int  endOffset  =  endOffset  +  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  int  endOffset  =  endOffset  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    int  endOffset  =  endOffset  +  1;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	8	None	add
52	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
53	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
54	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
55	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
56	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
57	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
58	[BUG]  [BUGGY]      if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]      if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	        if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
59	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
60	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
61	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  offset  =  parseStartOffset  -  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  offset;  offset  =  parseStartOffset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset;    offset  =  parseStartOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	17	None	add
62	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset;    Offset  offset  =  parseEndOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
63	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  offset  =  byseEndOffset  -  offset;  [CE]  cannot  find  symbol  byseEndOffset  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  offset;  offset  =  byseEndOffset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset;    offset  =  byseEndOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	17	None	add
64	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  off;  [CE]  cannot  find  symbol  off  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  off;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  off;	  	non-compiled	[CE]  cannot  find  symbol  off	17	None	add
65	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  Offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  Offset  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  offset;  Offset  =  parseEndOffset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset;    Offset  =  parseEndOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol  Offset	17	None	add
66	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  offset  =  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
67	[BUG]  [BUGGY]  offset  =  offset;  offset  =  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  offset  =  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
68	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
69	[BUG]  [BUGGY]  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
70	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
71	[BUG]  [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
72	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
73	[BUG]  [BUGGY]  offset  =  offset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
74	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
75	[BUG]  [BUGGY]  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
76	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
77	[BUG]  [BUGGY]  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
78	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
79	[BUG]  [BUGGY]  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  offset;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
80	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
81	[BUG]  [BUGGY]  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
82	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  date.length();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  date.length();	  offset    =    pos.length();    	compilable	  [FE]  JsonSyntaxException  	10	1	replace
83	[BUG]  [BUGGY]  offset  =  date.length();  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  date.length();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.length();	  offset    =    pos.length();    	compilable	  [FE]  JsonSyntaxException  	10	1	replace
84	[BUG]  [BUGGY]  offset  =  parseEndOffset.length();  [CE]  int  cannot  be  dereferenced  [FE]                      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset.length();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.length();	  offset    =    pos.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	replace
85	[BUG]  [BUGGY]  offset  =  pos.length()  +  1;  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.length()  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.length()  +  1;	  offset    =    pos.length();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
86	[BUG]  [BUGGY]  offset  =  parseStartOffset.length();  [CE]  cannot  find  symbol  parseStartOffset  [FE]                          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseStartOffset.length();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset.length();	  offset    =    pos.length();    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	10	None	replace
87	[BUG]  [BUGGY]  offset  =  milliseconds.length();  [CE]  int  cannot  be  dereferenced  [FE]                            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  milliseconds.length();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds.length();	  offset    =    pos.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	replace
88	[BUG]  [BUGGY]  offset  =  this.date.length();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  this.date.length();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.date.length();	  offset    =    pos.length();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	10	None	replace
89	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset  -  parseEndOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  -  parseEndOffset;	  offset    =    parseEndOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
90	[BUG]  [BUGGY]  offset  =  offset  -  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset  -  parseEndOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  parseEndOffset;	  offset    =    parseEndOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
91	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  milliseconds  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds  -  offset;	  offset    =    parseEndOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
92	[BUG]  [BUGGY]  offset  =  milliseconds  -  offset;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  milliseconds  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  -  offset;	  offset    =    parseEndOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
93	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  -  milliseconds;	  offset    =    parseEndOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
94	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  milliseconds;	  offset    =    parseEndOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
95	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
96	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
97	[BUG]  [BUGGY]  offset  =  pos  -  offset;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  -  offset;	  offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	18	None	replace
98	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    -    1;    offset  =  endOffset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	15	1	add
99	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    1;    offset  =  endOffset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	15	1	add
100	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  int  endOffset  =  endOffset  -  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  int  endOffset  =  endOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    1;    int  endOffset  =  endOffset  -  1;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	15	None	add
101	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  Offset  endOffset  =  endOffset  -  1;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  Offset  endOffset  =  endOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    1;    Offset  endOffset  =  endOffset  -  1;	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
102	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  Offset  =  endOffset  -  1;  [CE]  cannot  find  symbol  Offset  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  Offset  =  endOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    1;    Offset  =  endOffset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  Offset	15	None	add
103	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  pos  =  endOffset  -  1;  [CE]  incompatible  types  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  pos  =  endOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    1;    pos  =  endOffset  -  1;	  	non-compiled	[CE]  incompatible  types	15	None	add
104	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -  1;  [CE]  not  a  statement  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    1;    parseEndOffset  -  1;	  	non-compiled	[CE]  not  a  statement	15	None	add
105	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  Math.max(offset,  milliseconds);  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(offset,  milliseconds);	  offset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
106	[BUG]  [BUGGY]  offset  =  Math.max(offset,  milliseconds);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  Math.max(offset,  milliseconds);  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(offset,  milliseconds);	  offset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
107	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  milliseconds;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds;	  offset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
108	[BUG]  [BUGGY]  offset  =  milliseconds;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  milliseconds;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds;	  offset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
109	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(parseEndOffset,  parseEndOffset);	  offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	14	1	replace
110	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(parseEndOffset,  parseEndOffset);	  offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	14	1	replace
111	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(0,  parseEndOffset);	  offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	14	1	replace
112	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(0,  parseEndOffset);	  offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	14	1	replace
113	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset));  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset));  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(parseEndOffset,  parseEndOffset));	  offset    =    offset;    	non-compiled	[CE]  ';'  expected	14	None	replace
114	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  1;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
115	[BUG]  [BUGGY]  offset  =  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  1;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
116	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  offset)/  10;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
117	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)/  10;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
118	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  milliseconds)/  10;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
119	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  milliseconds)/  10;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
120	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  +  milliseconds)/  10;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
121	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  +  milliseconds)/  10;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
122	[BUG]  [BUGGY]  offset  =  0L;  [CE]  possible  loss  of  precision  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0L;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0L;	  offset    =    0;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
123	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  offset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    0;    offset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
124	[BUG]  [BUGGY]  offset  =  0;  offset  =  0;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  offset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    offset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
125	[BUG]  [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
126	[BUG]  [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
127	[BUG]  [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
128	[BUG]  [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
129	[BUG]  [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
130	[BUG]  [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
131	[BUG]  [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
132	[BUG]  [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	13	None	add
133	[BUG]  [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	13	None	add
134	[BUG]  [BUGGY]  offset  =  offset;  pos.setLength(parseEndOffset);  offset  =  offset;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  pos.setLength(parseEndOffset);  offset  =  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    pos.setLength(parseEndOffset);  offset  =  offset;	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
135	[BUG]  [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	13	None	add
136	[BUG]  [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	13	None	add
137	[BUG]  [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	13	None	add
138	[BUG]  [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	13	None	add
139	[BUG]  [BUGGY]  offset  =  endOffset  -  1L;  [CE]  possible  loss  of  precision  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1L;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1L;	  offset    =    endOffset    -    1;    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
140	[BUG]  [BUGGY]  offset  =  endOffset  +  1L;  [CE]  possible  loss  of  precision  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1L;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1L;	  offset    =    endOffset    +    1;    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
141	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  3;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  +  3;	  offset    =    endOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
142	[BUG]  [BUGGY]  offset  =  endOffset  +  3;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  3;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  3;	  offset    =    endOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
143	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos;  [CE]  incompatible  types  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  pos;	  offset    =    pos.getOffset();    	non-compiled	[CE]  incompatible  types	7	None	replace
144	[BUG]  [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos.getOffset());  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos.getOffset());  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getOffset(parseEndOffset,  pos.getOffset());	  offset    =    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
145	[BUG]  [BUGGY]  offset  =  timezoneOffset;  [CE]  cannot  find  symbol  timezoneOffset  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  timezoneOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneOffset;	  offset    =    parseStartOffset;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	6	None	replace
146	[BUG]  [BUGGY]  offset  =  startOffset;  [CE]  cannot  find  symbol  startOffset  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  startOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset;	  offset    =    parseStartOffset;    	non-compiled	[CE]  cannot  find  symbol  startOffset	6	None	replace
147	[BUG]  [BUGGY]      for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]      for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	        for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	11	None	add
148	[BUG]  [BUGGY]      for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]      for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	        for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	11	None	add
149	[BUG]  [BUGGY]  offset  =  0;  parseOffset(offset);  offset  =  0;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  parseOffset(offset);  offset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    parseOffset(offset);  offset  =  0;	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
150	[BUG]  [BUGGY]  offset  =  0;  int  offset  =  0;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  int  offset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    int  offset  =  0;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	4	None	add
151	[BUG]  [BUGGY]  offset  =  0;  parseOffset(offset,  pos);  offset  =  0;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  parseOffset(offset,  pos);  offset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    parseOffset(offset,  pos);  offset  =  0;	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
152	[BUG]  [BUGGY]  offset  =  0;  pos  =  0;  offset  =  0;  [CE]  incompatible  types  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  pos  =  0;  offset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    pos  =  0;  offset  =  0;	  	non-compiled	[CE]  incompatible  types	4	None	add
153	[BUG]  [BUGGY]  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    parseOffset(offset,  0);  offset  =  0;	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
154	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -  startOffset;  offset  =  endOffset  -  1;  [CE]  not  a  statement  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -  startOffset;  offset  =  endOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    1;    parseEndOffset  -  startOffset;  offset  =  endOffset  -  1;	  	non-compiled	[CE]  not  a  statement	15	None	add
155	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -  1;  offset  =  endOffset  -  1;  [CE]  not  a  statement  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -  1;  offset  =  endOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    1;    parseEndOffset  -  1;  offset  =  endOffset  -  1;	  	non-compiled	[CE]  not  a  statement	15	None	add
156	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -  offset;  offset  =  endOffset  -  1;  [CE]  not  a  statement  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -  offset;  offset  =  endOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    1;    parseEndOffset  -  offset;  offset  =  endOffset  -  1;	  	non-compiled	[CE]  not  a  statement	15	None	add
157	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  offset)%  2;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
158	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)%  2;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
159	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  offset)/  2;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
160	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)/  2;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
161	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  offset)%  10;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
162	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)%  10;	  offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
163	[BUG]  [BUGGY]  offset  =  pos.getStartOffset();  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.getStartOffset();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getStartOffset();	  offset    =    pos;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
164	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  offset;  [CE]  incompatible  types  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset;    pos  =  parseEndOffset  -  offset;	  	non-compiled	[CE]  incompatible  types	17	None	add
165	[BUG]  [BUGGY]  offset  =  timezoneOffset  -  offset;  [CE]  cannot  find  symbol  timezoneOffset  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  timezoneOffset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	18	None	replace
166	[BUG]  [BUGGY]  offset  =  offset  -  parseStartOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset  -  parseStartOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  parseStartOffset;	  offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	18	None	replace
167	[BUG]  [BUGGY]  offset  =  length  -  offset;  [CE]  cannot  find  symbol  length  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  length  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  length  -  offset;	  offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  length	18	None	replace
168	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
169	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
170	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
171	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
172	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
173	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
174	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
175	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
176	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  -offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  -offset;	  offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	14	1	replace
177	[BUG]  [BUGGY]  offset  =  -offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  -offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  -offset;	  offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	14	1	replace
178	[BUG]  [BUGGY]  offset  =  pos.getLowerBound();  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.getLowerBound();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getLowerBound();	  offset    =    pos;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
179	[BUG]  [BUGGY]  offset  =  pos.getLowerCase();  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.getLowerCase();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getLowerCase();	  offset    =    pos;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
180	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset();  offset  =  0;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  parseEndOffset();  offset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    parseEndOffset();  offset  =  0;	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
181	[BUG]  [BUGGY]  offset  =  0;  result.add( "n ");  offset  =  0;  [CE]  cannot  find  symbol  result  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  result.add( "n ");  offset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    result.add( "n ");  offset  =  0;	  	non-compiled	[CE]  cannot  find  symbol  result	4	None	add
182	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset(  offset);  offset  =  0;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  parseEndOffset(  offset);  offset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    parseEndOffset(  offset);  offset  =  0;	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
183	[BUG]  [BUGGY]  offset  =  0;  result.add( "- ");  offset  =  0;  [CE]  cannot  find  symbol  result  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  result.add( "- ");  offset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    result.add( "- ");  offset  =  0;	  	non-compiled	[CE]  cannot  find  symbol  result	4	None	add
184	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  parseEndOffset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    0;    parseEndOffset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
185	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset  =  0;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  0;  parseEndOffset  =  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    0;    parseEndOffset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
186	[BUG]  [BUGGY]  offset  =  parseStartOffset  -  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseStartOffset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	18	None	replace
187	[BUG]  [BUGGY]  offset  =  pos.offset  -  offset;  [CE]  cannot  find  symbol  offset  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.offset  -  offset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  offset;	  offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  offset	18	None	replace
188	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)?  1  :  0;  [CE]  incompatible  types  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =(parseEndOffset  -  offset)?  1  :  0;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)?  1  :  0;	  offset    =    0;    	non-compiled	[CE]  incompatible  types	5	None	replace
189	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
190	[BUG]  [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
191	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
192	[BUG]  [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
193	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
194	[BUG]  [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
195	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
196	[BUG]  [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
197	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  parseEndOffset;  [CE]  incompatible  types  [FE]                JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  parseEndOffset;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  parseEndOffset;	  offset    =    pos.getOffset();    	non-compiled	[CE]  incompatible  types	7	None	replace
198	[BUG]  [BUGGY]  offset  =  parseEndOffset,  pos.getOffset();  [CE]  ';'  expected  [FE]                  JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset,  pos.getOffset();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset,  pos.getOffset();	  offset    =    pos.getOffset();    	non-compiled	[CE]  ';'  expected	7	None	replace
199	[BUG]  [BUGGY]      for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]      for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	        for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	11	None	add
200	[BUG]  [BUGGY]      for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]      for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	        for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	11	None	add
201	[BUG]  [BUGGY]      for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]      for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	        for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	11	None	add
202	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    -    1;    offset  =  endOffset  -  2;	  	compilable	  [FE]  JsonSyntaxException  	15	1	add
203	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    1;    offset  =  endOffset  -  2;	  	compilable	  [FE]  JsonSyntaxException  	15	1	add
204	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  int  endOffset  =  endOffset  -  2;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  -  1;  int  endOffset  =  endOffset  -  2;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    1;    int  endOffset  =  endOffset  -  2;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	15	None	add
205	[BUG]  [BUGGY]  offset  =  pos.getOffset()  -  1;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.getOffset()  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  -  1;	  offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
206	[BUG]  [BUGGY]  offset  =  parseStartOffset  -  1;  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseStartOffset  -  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  -  1;	  offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	16	None	replace
207	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  -  offset  +  1;	  offset    =    endOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
208	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  offset  +  1;	  offset    =    endOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
209	[BUG]  [BUGGY]  offset  =  pos.offset();  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.offset();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset();	  offset    =    pos.length();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
210	[BUG]  [BUGGY]  offset  =  pos.getLength();  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  pos.getLength();  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getLength();	  offset    =    pos.length();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
211	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
212	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
213	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
214	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
215	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
216	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
217	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
218	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
219	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
220	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
221	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException    [CONTEXT]    switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }    [BUGGY]  offset  =  parseStartOffset  +  1;  [BUGGY]    }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;	  offset    =    parseStartOffset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	6	None	replace
