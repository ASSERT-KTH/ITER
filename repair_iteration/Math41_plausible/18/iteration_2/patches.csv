bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  accum,  begin,  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  accum,  begin,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  accum,  begin,  length);	  double    mean    =    isBiasCorrected(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  weights,  begin,  length  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  weights,  begin,  length  -  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  weights,  begin,  length  -  1);	  double    mean    =    isBiasCorrected(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
3	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  accum2,  begin,  length);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  accum2,  begin,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  accum2,  begin,  length);	  double    mean    =    isBiasCorrected(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
4	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  weights,  begin,  length,  dev);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  weights,  begin,  length,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  weights,  begin,  length,  dev);	  double    mean    =    isBiasCorrected(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  start  +  length;  i++)  {  [CE]  cannot  find  symbol  start  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  start  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  <  start  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    for(int    i    =    begin    +    length;    i    <    start    +    length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  start	103	None	replace
6	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected.get(values,  begin,  length,  dev);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected.get(values,  begin,  length,  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected.get(values,  begin,  length,  dev);	  int    mean    =    isBiasCorrected.get(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
7	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected.get(values,  begin,  length  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected.get(values,  begin,  length  -  1);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected.get(values,  begin,  length  -  1);	  int    mean    =    isBiasCorrected.get(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
8	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected.get(values,  begin,  length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected.get(values,  begin,  length);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected.get(values,  begin,  length);	  int    mean    =    isBiasCorrected.get(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
9	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected.get(values,  begin,  length,  accum);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected.get(values,  begin,  length,  accum);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected.get(values,  begin,  length,  accum);	  int    mean    =    isBiasCorrected.get(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  2;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  <  begin  +  2;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    1;    i++)    {    	compilable	  [FE]  AssertionError  	40	2	replace
11	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  2;  i++)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  2;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  <  begin  +  2;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    1;    i++)    {    	compilable	  [FE]  AssertionError  	40	2	replace
12	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  >=  begin  +  1;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	3	replace
13	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  1;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  >=  begin  +  1;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	3	replace
14	[BUG]  [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
15	[BUG]  [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  For(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  For(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    For(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	37	None	add
16	[BUG]  [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  >  expected	37	None	add
17	[BUG]  [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  for(int  i  =  start  +  1;  i  <  begin  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  for(int  i  =  start  +  1;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    for(int  i  =  start  +  1;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
18	[BUG]  [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  for(int  i  =  beginning  +  1;  i  <  begin  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  for(int  i  =  beginning  +  1;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    for(int  i  =  beginning  +  1;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
19	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum2,  var);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum2,  var);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum2,  var);	  double    dev    =    getDev(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
20	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum2,  dev);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum2,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum2,  dev);	  double    dev    =    getDev(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
21	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum2,  mean);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum2,  mean);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum2,  mean);	  double    dev    =    getDev(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
22	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum1,  length);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum1,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum1,  length);	  double    dev    =    getDev(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
23	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  accum,  length,  dev);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  accum,  length,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  accum,  length,  dev);	  double    mean    =    isBiasCorrected(values,    begin,    length,    dev);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
24	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  dev,  begin,  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  dev,  begin,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  dev,  begin,  length);	  double    mean    =    isBiasCorrected(values,    begin,    length,    dev);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
25	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  accum2,  length,  dev);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  accum2,  length,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  accum2,  length,  dev);	  double    mean    =    isBiasCorrected(values,    begin,    length,    dev);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
26	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  *  DEV);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  accum  +=  values[i]  *  (dev  *  DEV);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	accum  +=  values[i]  *  (dev  *  DEV);	  double    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    DEV);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
27	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  DEV);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  accum  +=  weights[i]  *  (dev  *  DEV);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	accum  +=  weights[i]  *  (dev  *  DEV);	  double    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    DEV);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
28	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  accum  =  values[i]  -  mean;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	accum  =  values[i]  -  mean;	  double    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    DEV);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
29	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	accum  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  double    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    DEV);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
30	[BUG]  [BUGGY]  incMoment  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  :  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  not  a  statement	100	None	replace
31	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  =  isBiasCorrected?  Boolean.FALSE  :  Boolean.TRUE;	  incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
32	[BUG]  [BUGGY]  incMoment  &=  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  &=  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  &=  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
33	[BUG]  [BUGGY]  double  dev  =  Math.abs(m2  -  accum);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(m2  -  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(m2  -  accum);	  double    dev    =    Math.abs(m2    -    mean);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
34	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  -  2;  i++)  {  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  -  2;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  -  2;  i++)  {	  For(int    i    =    begin;    i    <    begin    +    length    /    2;    i++)    {    	non-compiled	[CE]  '.class'  expected	23	None	replace
35	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected.length  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected.length  -  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected.length  -  1;	  double    mean    =    isBiasCorrected.length;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
36	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected.length  /  2;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected.length  /  2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected.length  /  2;	  double    mean    =    isBiasCorrected.length;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
37	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected.length  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected.length  +  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected.length  +  1;	  double    mean    =    isBiasCorrected.length;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
38	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)/  1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)/  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)/  1);	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length)+    1);    	non-compiled	[CE]  ';'  expected	8	None	replace
39	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)+  2);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)+  2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)+  2);	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length)+    1);    	non-compiled	[CE]  ';'  expected	8	None	replace
40	[BUG]  [BUGGY]  double  mean  =  accum?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  accum?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  accum?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;	  double    mean    =    incMoment?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
41	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  *  var  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  *  var  +  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  *  var  +  1);	  double    dev    =    Math.abs(accum    *    var);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
42	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  *  var,  dev);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  *  var,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  *  var,  dev);	  double    dev    =    Math.abs(accum    *    var);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
43	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  /  var);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  /  var);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  /  var);	  double    dev    =    Math.abs(accum2    -    var);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
44	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  -  var,  dev);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  -  var,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  -  var,  dev);	  double    dev    =    Math.abs(accum2    -    var);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
45	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  -  var);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  -  var);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  -  var);	  double    dev    =    Math.abs(accum2    -    var);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  start  +  length;  i  <  begin  +  length;  i++)  {  [CE]  cannot  find  symbol  start  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  start  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  start  +  length;  i  <  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    for(int    i    =    start    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  start	61	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length  -  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  1;  i  <  begin  +  length  -  1;  i++)  {	  for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	38	3	replace
48	[BUG]  [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length  -  1;  i++)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length  -  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  1;  i  <  begin  +  length  -  1;  i++)  {	  for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	38	3	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length  /  2;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  1;  i  <  begin  +  length  /  2;  i++)  {	  for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	38	3	replace
50	[BUG]  [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length  /  2;  i++)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length  /  2;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  1;  i  <  begin  +  length  /  2;  i++)  {	  for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	38	3	replace
51	[BUG]  [BUGGY]  double  mean  =  var.length;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  var.length;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  var.length;	  int    mean    =    var.length;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
52	[BUG]  [BUGGY]  int  mean  =  var.length  -  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  var.length  -  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  var.length  -  1;	  int    mean    =    var.length;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
53	[BUG]  [BUGGY]  int  mean  =  values.length;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  values.length;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  values.length;	  int    mean    =    var.length;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
54	[BUG]  [BUGGY]  accum2  =  1.0;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  accum2  =  1.0;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	accum2  =  1.0;	  double    accum2    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
55	[BUG]  [BUGGY]  double  accum2  =  0.0001;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  accum2  =  0.0001;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  accum2  =  0.0001;	  double    accum2    =    0.001;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    1;    i++)    {    for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
57	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  For(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  [CE]  '.class'  expected  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  For(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    1;    i++)    {    For(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	39	None	add
58	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    1;    i++)    {    int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	39	None	add
59	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  for(int  i  =  start  +  length;  i  <  begin  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  for(int  i  =  start  +  length;  i  <  begin  +  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    1;    i++)    {    for(int  i  =  start  +  length;  i  <  begin  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
60	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  for(int  i  =  begin  +  length;  i  <  beginning  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  for(int  i  =  begin  +  length;  i  <  beginning  +  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    1;    i++)    {    for(int  i  =  begin  +  length;  i  <  beginning  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
61	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  ValueUtils.doubleToLongBits(values,  begin,  length)-  1);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  ValueUtils.doubleToLongBits(values,  begin,  length)-  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  ValueUtils.doubleToLongBits(values,  begin,  length)-  1);	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length)-    1);    	non-compiled	[CE]  :  expected	77	None	replace
62	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  2;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  2;	  double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
63	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  3;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  3;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN  +  3;	  double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN    +    1;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
64	[BUG]  [BUGGY]  accum2  =  0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  accum2  =  0;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	accum2  =  0;	  double    accum2    =    0;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
65	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  dev;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  dev;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  0,  dev;	  int    mean    =    isBiasCorrected?    1    :    0,    length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
66	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  dev.length;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  dev.length;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  0,  dev.length;	  int    mean    =    isBiasCorrected?    1    :    0,    length;    	non-compiled	[CE]  ';'  expected	72	None	replace
67	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  accum;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  accum;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  0,  accum;	  int    mean    =    isBiasCorrected?    1    :    0,    length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
68	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  length  -  1;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  length  -  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  0,  length  -  1;	  int    mean    =    isBiasCorrected?    1    :    0,    length;    	non-compiled	[CE]  ';'  expected	72	None	replace
69	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected.length  /  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected.length  /  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected.length  /  1;	  int    mean    =    isBiasCorrected.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
70	[BUG]  [BUGGY]  int  mean  =  accum.length  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  accum.length  -  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  accum.length  -  1;	  int    mean    =    isBiasCorrected.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
71	[BUG]  [BUGGY]  For(int  i  =  begin  +  length  -  1;  i  >=  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin  +  length  -  1;  i  >=  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin  +  length  -  1;  i  >=  begin  +  length;  i++)  {	  For(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	73	None	replace
72	[BUG]  [BUGGY]  For(int  i  =  begin  +  length;  i  >  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin  +  length;  i  >  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin  +  length;  i  >  begin  +  length;  i++)  {	  For(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	73	None	replace
73	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  accum2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  accum2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum]  :  accum2;	  int    mean    =    isBiasCorrected?    values[accum]    :    accum2;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
74	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  accum2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  accum2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum1]  :  accum2;	  int    mean    =    isBiasCorrected?    values[accum1]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
75	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  accum1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  accum1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  accum1;	  int    mean    =    isBiasCorrected?    values[accum1]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
76	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum1]  :  values[accum2];  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum1]  :  values[accum2];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum1]  :  values[accum2];	  int    mean    =    isBiasCorrected?    values[accum1]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
77	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  dev;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  dev;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  dev;	  int    mean    =    isBiasCorrected?    values[accum2]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
78	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2];	  int    mean    =    isBiasCorrected?    values[accum2]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
79	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  accum;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  accum;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  accum;	  int    mean    =    isBiasCorrected?    values[accum2]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
80	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  begin  :  begin  +  length  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  begin  :  begin  +  length  -  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  begin  :  begin  +  length  -  1;	  int    mean    =    isBiasCorrected?    begin    :    begin    +    length;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
81	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  begin  :  begin  +  length  /  length;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  begin  :  begin  +  length  /  length;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  begin  :  begin  +  length  /  length;	  int    mean    =    isBiasCorrected?    begin    :    begin    +    length;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
82	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  begin  :  begin  +  length  /  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  begin  :  begin  +  length  /  2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  begin  :  begin  +  length  /  2;	  int    mean    =    isBiasCorrected?    begin    :    begin    +    length;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
83	[BUG]  [BUGGY]  int  mean  =  accum.length  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  accum.length  +  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  accum.length  +  1;	  int    mean    =    isBiasCorrected.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  beginning  +  length;  i  <  begin  +  length;  i++)  {  [CE]  cannot  find  symbol  beginning  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  beginning  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  beginning  +  length;  i  <  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    for(int    i    =    beginning    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  beginning	62	None	replace
85	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length  -  1,  dev);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length  -  1,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  begin,  length  -  1,  dev);	  int    mean    =    isBiasCorrected(values,    begin,    length    -    1);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
86	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length  -  1,  accum);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length  -  1,  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  begin,  length  -  1,  accum);	  int    mean    =    isBiasCorrected(values,    begin,    length    -    1);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
87	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  var;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  var;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  var;	  int    mean    =    isBiasCorrected?    values[accum2]    :    null;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
88	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum2]  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum2]  :  null;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum2]  :  null;	  int    mean    =    isBiasCorrected?    values[accum2]    :    null;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
89	[BUG]  [BUGGY]  double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)+  1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)+  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)+  1);	  double    mean    =    incMoment?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length));    	non-compiled	[CE]  ';'  expected	96	None	replace
90	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  -  2));  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  -  2));  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  -  2));	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length    -    1));    	non-compiled	[CE]  ';'  expected	10	None	replace
91	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  /  1));  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  /  1));  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  /  1));	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length    -    1));    	non-compiled	[CE]  ';'  expected	10	None	replace
92	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  accum2,  dev);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  accum2,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  accum2,  dev);	  double    mean    =    isBiasCorrected(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
93	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  dev,  length);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  dev,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  dev,  length);	  double    mean    =    isBiasCorrected(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
94	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  weights,  accum2,  length);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  weights,  accum2,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  weights,  accum2,  length);	  double    mean    =    isBiasCorrected(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
95	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  /  1;  i++)  {  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  /  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  /  1;  i++)  {	  For(int    i    =    begin;    i    <    begin    +    length    -    1;    i++)    {    	non-compiled	[CE]  '.class'  expected	21	None	replace
96	[BUG]  [BUGGY]  For(int  i  =  begin  +  length;  i  <  begin  +  length  -  1;  i++)  {  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin  +  length;  i  <  begin  +  length  -  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin  +  length;  i  <  begin  +  length  -  1;  i++)  {	  For(int    i    =    begin;    i    <    begin    +    length    -    1;    i++)    {    	non-compiled	[CE]  '.class'  expected	21	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i!=  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i!=  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	36	2	replace
98	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i!=  begin  +  length;  i++)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i!=  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i!=  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	36	2	replace
99	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  ==  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  ==  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	3	replace
100	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  ==  begin  +  length;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  ==  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  ==  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	3	replace
101	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  -  me);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  -  me);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  -  me);	  double    dev    =    Math.abs(mean    -    accum2);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
102	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  -  me);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  -  me);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  -  me);	  double    dev    =    Math.abs(mean    -    accum2);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
103	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  /  var,  dev);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  /  var,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  /  var,  dev);	  double    dev    =    Math.abs(accum    /    var);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
104	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  /  var  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  /  var  +  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  /  var  +  1);	  double    dev    =    Math.abs(accum    /    var);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
105	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  accum,  dev);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  accum,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  accum,  dev);	  double    mean    =    isBiasCorrected(values,    accum,    length);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
106	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  dev,  accum,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  dev,  accum,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  dev,  accum,  length);	  double    mean    =    isBiasCorrected(values,    accum,    length);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
107	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  accum,  length,  dev);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  accum,  length,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  accum,  length,  dev);	  int    mean    =    isBiasCorrected(values,    begin,    length,    dev);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
108	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  dev,  begin,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  dev,  begin,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  dev,  begin,  length);	  int    mean    =    isBiasCorrected(values,    begin,    length,    dev);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
109	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  accum,  begin,  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  accum,  begin,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  accum,  begin,  length);	  int    mean    =    isBiasCorrected(values,    begin,    length,    dev);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
110	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  Double.POSITIVE_INFINITY  +  1;	  double    mean    =    isBiasCorrected?    Double.NaN    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
111	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  double    mean    =    isBiasCorrected?    Double.NaN    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
112	[BUG]  [BUGGY]  Double  mean  =  isBiasCorrected?  Double.NaN  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  Double  mean  =  isBiasCorrected?  Double.NaN  :  Double.POSITIVE_INFINITY;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	Double  mean  =  isBiasCorrected?  Double.NaN  :  Double.POSITIVE_INFINITY;	  double    mean    =    isBiasCorrected?    Double.NaN    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
113	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum2,  begin,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum2,  begin,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum2,  begin,  length);	  double    dev    =    getDev(values,    begin,    length,    accum);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
114	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  start,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  start,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  start,  length);	  double    dev    =    getDev(values,    begin,    length,    accum);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
115	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  -  mean,  dev);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  -  mean,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  -  mean,  dev);	  double    dev    =    Math.abs(accum    -    mean,    dev);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
116	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  -  mean,  accum);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  -  mean,  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  -  mean,  accum);	  double    dev    =    Math.abs(accum    -    mean,    dev);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
117	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  -  mean,  dev);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  -  mean,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  -  mean,  dev);	  double    dev    =    Math.abs(accum    -    mean,    dev);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
118	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  *  dev2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  *  dev2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  *  dev2);	  double    dev    =    Math.abs(accum    /    dev2);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
119	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  /  dev2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  /  dev2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  /  dev2);	  double    dev    =    Math.abs(accum    /    dev2);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
120	[BUG]  [BUGGY]  double  dev  =  values[i]  -  accum;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  values[i]  -  accum;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  values[i]  -  accum;	  double    dev    =    values[i]    -    mean;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
121	[BUG]  [BUGGY]  double  dev  =  values[i]  /  mean;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  values[i]  /  mean;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  values[i]  /  mean;	  double    dev    =    values[i]    -    mean;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
122	[BUG]  [BUGGY]  double  dev  =  weights[i]  -  accum;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  weights[i]  -  accum;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  weights[i]  -  accum;	  double    dev    =    values[i]    -    mean;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
123	[BUG]  [BUGGY]  double  dev  =  values[i]  -  accum2;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  values[i]  -  accum2;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  values[i]  -  accum2;	  double    dev    =    values[i]    -    mean;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
124	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  start  +  length;  i++)  {  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  start  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  start  +  length;  i++)  {	  For(int    i    =    start;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	74	None	replace
125	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  dev;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  dev;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum]  :  dev;	  double    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
126	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  values[accum1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  values[accum1];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum]  :  values[accum1];	  double    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
127	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  /  accum);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  /  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  /  accum);	  double    dev    =    Math.abs(accum    *    accum);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
128	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  *  accum2);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  *  accum2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  *  accum2);	  double    dev    =    Math.abs(accum    *    accum);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
129	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  *  accum);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  *  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  *  accum);	  double    dev    =    Math.abs(accum    *    accum);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
130	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  *  dev);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  *  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  *  dev);	  double    dev    =    Math.abs(accum2    /    dev);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
131	[BUG]  [BUGGY]  accum2  +=  values[i]  *  (dev  *  dev);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  accum2  +=  values[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	accum2  +=  values[i]  *  (dev  *  dev);	  double    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
132	[BUG]  [BUGGY]  accum  +=  values[i]  *  (dev  *  dev);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  accum  +=  values[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	accum  +=  values[i]  *  (dev  *  dev);	  double    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
133	[BUG]  [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	accum  +=  weights[i]  *  (dev  *  dev);	  double    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
134	[BUG]  [BUGGY]  double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;	  double    mean    =    incMoment?    Double.POSITIVE_INFINITY    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
135	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  0,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  0,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  0,  length);	  double    dev    =    getDev(values,    accum,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
136	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  dev);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  dev);	  double    dev    =    getDev(values,    accum,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
137	[BUG]  [BUGGY]  double  dev  =  getDev(accum,  values,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(accum,  values,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(accum,  values,  length);	  double    dev    =    getDev(values,    accum,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
138	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  /  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  /  1];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  /  1];	  int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2    +    1];    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
139	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  *  1];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  *  1];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  *  1];	  int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2    +    1];    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
140	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum,  dev);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum,  dev);	  double    dev    =    Math.abs(accum2,    var);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
141	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2,  var  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2,  var  +  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2,  var  +  1);	  double    dev    =    Math.abs(accum2,    var);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
142	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum,  var);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum,  var);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum,  var);	  double    dev    =    Math.abs(accum2,    var);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
143	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  accum,  dev);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  accum,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  accum,  dev);	  int    mean    =    isBiasCorrected(values,    accum,    length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
144	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  accum2,  dev);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  accum2,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  accum2,  dev);	  int    mean    =    isBiasCorrected(values,    accum,    length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
145	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  length  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  length  -  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  length  -  1);	  double    dev    =    getDev(values,    begin,    length    -    1);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
146	[BUG]  [BUGGY]  double  dev  =  getDev(values,  begin,  length  -  1,  accum);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  begin,  length  -  1,  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  begin,  length  -  1,  accum);	  double    dev    =    getDev(values,    begin,    length    -    1);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
147	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum2,  length  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum2,  length  -  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum2,  length  -  1);	  double    dev    =    getDev(values,    begin,    length    -    1);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
148	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  beginning  +  length;  i++)  {  [CE]  cannot  find  symbol  beginning  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  beginning  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  <  beginning  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    for(int    i    =    begin    +    length;    i    <    beginning    +    length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  beginning	102	None	replace
149	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum0]  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum0]  :  null;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum0]  :  null;	  int    mean    =    isBiasCorrected?    values[accum0]    :    null;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
150	[BUG]  [BUGGY]  int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    (int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  >  expected	70	None	replace
151	[BUG]  [BUGGY]  (int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  (int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    (int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  ')'  expected	70	None	replace
152	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected  ||  isBiasCorrected;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  ||  isBiasCorrected;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  =  isBiasCorrected  ||  isBiasCorrected;	  incMoment    =    isBiasCorrected;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
153	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected  &&  isBiasCorrected;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  &&  isBiasCorrected;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  =  isBiasCorrected  &&  isBiasCorrected;	  incMoment    =    isBiasCorrected;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
154	[BUG]  [BUGGY]  incMoment  =  accum;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  =  accum;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  =  accum;	  incMoment    =    isBiasCorrected;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
155	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  /  mean);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  /  mean);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  /  mean);	  double    dev    =    Math.abs(dev    -    mean);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
156	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  -  accum);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  -  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  -  accum);	  double    dev    =    Math.abs(dev    -    mean);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
157	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  -  accum2);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  -  accum2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  -  accum2);	  double    dev    =    Math.abs(dev    -    mean);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
158	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  accum  -  mean);  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  accum  -  mean);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  accum  -  mean);	  double    dev    =    Math.abs(dev    -    mean);    	non-compiled	[CE]  ')'  expected	45	None	replace
159	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length,  accum);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length,  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  begin,  length,  accum);	  int    mean    =    isBiasCorrected(values,    begin,    length,    accum);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
160	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  accum2,  begin,  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  accum2,  begin,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  accum2,  begin,  length);	  int    mean    =    isBiasCorrected(values,    begin,    length,    accum);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
161	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  /  mean);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  /  mean);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  /  mean);	  double    dev    =    Math.abs(accum2    -    mean);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
162	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  -  mean  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  -  mean  +  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  -  mean  +  1);	  double    dev    =    Math.abs(accum2    -    mean);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
164	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  For(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  For(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    For(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	93	None	add
165	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {	  	non-compiled	[CE]  >  expected	93	None	add
166	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  for(int  i  =  start  +  length;  i  <  begin  +  length  *  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  for(int  i  =  start  +  length;  i  <  begin  +  length  *  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    for(int  i  =  start  +  length;  i  <  begin  +  length  *  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
167	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  for(int  i  =  begin;  i  <  begin  +  length  *  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  for(int  i  =  begin;  i  <  begin  +  length  *  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    for(int  i  =  begin;  i  <  begin  +  length  *  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
168	[BUG]  [BUGGY]  while(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  while(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	while(int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    while(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	69	None	replace
169	[BUG]  [BUGGY]  while(int  i  =  begin  +  length;  i  <  begin  +  length);  i++)  {  [CE]  '.class'  expected  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  while(int  i  =  begin  +  length;  i  <  begin  +  length);  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	while(int  i  =  begin  +  length;  i  <  begin  +  length);  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    while(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	69	None	replace
170	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  /  accum);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  /  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  /  accum);	  double    dev    =    Math.abs(accum2    -    accum);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
171	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  -  accum2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  -  accum2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  -  accum2);	  double    dev    =    Math.abs(accum2    -    accum);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
172	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  -  accum2);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  -  accum2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  -  accum2);	  double    dev    =    Math.abs(accum2    -    accum);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
173	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2)+  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2)+  1;	  double    dev    =    Math.abs(accum2);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
174	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  *  accum);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  *  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  *  accum);	  double    dev    =    Math.abs(accum    *    dev);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
175	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev,  accum2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev,  accum2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev,  accum2);	  double    dev    =    Math.abs(accum2,    dev);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
176	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  weights,  accum2,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  weights,  accum2,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  weights,  accum2,  length);	  int    mean    =    isBiasCorrected(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
177	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  1  :  -1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  1  :  -1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  1  :  -1;	  int    mean    =    isBiasCorrected?    1    :    -1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
179	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i!=  begin  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i!=  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    for(int  i  =  begin  +  length;  i!=  begin  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
180	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  >>  begin  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  >>  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    for(int  i  =  begin  +  length;  i  >>  begin  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
181	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  ==  begin  +  length;  i++)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  for(int  i  =  begin  +  length;  i  ==  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    for(int  i  =  begin  +  length;  i  ==  begin  +  length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
182	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  For(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  For(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    For(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	35	None	add
183	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  length,  begin);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  length,  begin);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  length,  begin);	  double    dev    =    getDev(values,    begin,    length,    accum2);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
184	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  2;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  2;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	3	replace
185	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  2;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  2;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  2;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	3	replace
186	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  amount;  i++)  {  [CE]  cannot  find  symbol  amount  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  amount;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  amount;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  amount	94	None	replace
187	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  weights.length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  weights.length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	3	replace
188	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  weights.length;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  weights.length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  weights.length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	3	replace
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  1;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    	compilable	  [FE]  AssertionError  	94	2	replace
190	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  1;  i++)  {  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  1;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    	compilable	  [FE]  AssertionError  	94	2	replace
191	[BUG]  [BUGGY]  For(int  i  =  begin  +  length  -  1;  i  <  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin  +  length  -  1;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin  +  length  -  1;  i  <  begin  +  length;  i++)  {	  For(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	22	None	replace
192	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  2;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  2;	  double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY    +    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
193	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1L;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1L;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1L;	  double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY    +    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
194	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)/  dev);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)/  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)/  dev);	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length),    dev);    	non-compiled	[CE]  ';'  expected	76	None	replace
195	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-  dev);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-  dev);	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length),    dev);    	non-compiled	[CE]  ';'  expected	76	None	replace
196	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  accum2;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  1  :  accum2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  accum2;	  int    mean    =    isBiasCorrected?    1    :    accum;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
197	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  1  :  accum;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  1  :  accum;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  1  :  accum;	  int    mean    =    isBiasCorrected?    1    :    accum;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
198	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  dev;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  1  :  dev;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  dev;	  int    mean    =    isBiasCorrected?    1    :    accum;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
199	[BUG]  [BUGGY]  Integer  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  Integer  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	Integer  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  >  expected	60	None	replace
200	[BUG]  [BUGGY]  Integer  accum2  =  begin  +  length;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  Integer  accum2  =  begin  +  length;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	Integer  accum2  =  begin  +  length;	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
201	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  begin,  length,  mean);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  begin,  length,  mean);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  begin,  length,  mean);	  double    dev    =    getDev(values,    accum,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
202	[BUG]  [BUGGY]  double  mean  =  accum.length;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  accum.length;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  accum.length;	  int    mean    =    accum.length;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
203	[BUG]  [BUGGY]  int  mean  =  accum2.length;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  accum2.length;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  accum2.length;	  int    mean    =    accum.length;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
204	[BUG]  [BUGGY]  int  mean  =  accum.length  -  2;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  accum.length  -  2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  accum.length  -  2;	  int    mean    =    accum.length;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
205	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length  -  1,  dev);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length  -  1,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  begin,  length  -  1,  dev);	  double    mean    =    isBiasCorrected(values,    begin,    length    -    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
206	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  accum,  length  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  accum,  length  -  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  accum,  length  -  1);	  double    mean    =    isBiasCorrected(values,    begin,    length    -    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
207	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length  /  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length  /  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  begin,  length  /  1);	  double    mean    =    isBiasCorrected(values,    begin,    length    -    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
208	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum1];  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum1];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum1];	  int    mean    =    isBiasCorrected?    values[accum]    :    values[accum1];    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
209	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  -  1],  dev;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  -  1],  dev;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  -  1],  dev;	  int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2    -    1];    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
210	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  -  1];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  -  1];	  int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2    -    1];    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
211	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum0]  :  values[accum2];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum0]  :  values[accum2];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum0]  :  values[accum2];	  int    mean    =    isBiasCorrected?    values[accum0]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
212	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  accum2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  accum2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum0]  :  accum2;	  int    mean    =    isBiasCorrected?    values[accum0]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
213	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  accum0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  accum0;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  accum0;	  int    mean    =    isBiasCorrected?    values[accum0]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
214	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  &&  length  >  2)  {  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  &&  length  >  2)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  &&  length  >  2)  {	  For(int    i    =    begin;    i    <    begin    +    length    &&    length    >    1)    {    	non-compiled	[CE]  '.class'  expected	92	None	replace
215	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  -  1  &&  length  >  1)  {  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  -  1  &&  length  >  1)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  -  1  &&  length  >  1)  {	  For(int    i    =    begin;    i    <    begin    +    length    &&    length    >    1)    {    	non-compiled	[CE]  '.class'  expected	92	None	replace
216	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  -  1  ||  length  >  1)  {  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  -  1  ||  length  >  1)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  -  1  ||  length  >  1)  {	  For(int    i    =    begin;    i    <    begin    +    length    &&    length    >    1)    {    	non-compiled	[CE]  '.class'  expected	92	None	replace
217	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  1  :  0.0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  1  :  0.0;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  1  :  0.0;	  double    mean    =    isBiasCorrected?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
218	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  dev;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  dev;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum1]  :  dev;	  int    mean    =    isBiasCorrected?    values[accum]    :    dev;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
219	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum1]  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum1]  :  null;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum1]  :  null;	  int    mean    =    isBiasCorrected?    values[accum1]    :    null;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
220	[BUG]  [BUGGY]  Double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  Double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	Double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN;	  Double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
221	[BUG]  [BUGGY]  Double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  Double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	Double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;	  Double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
222	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev);	  double    dev    =    Math.abs(accum2);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
223	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  /  dev2)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  /  dev2)+  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  /  dev2)+  1;	  double    dev    =    Math.abs(accum    /    dev2);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
224	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  /  dev2)-  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  /  dev2)-  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  /  dev2)-  1;	  double    dev    =    Math.abs(accum    /    dev2);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
225	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  -  1)  {  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  -  1)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  -  1)  {	  For(int    i    =    begin;    i    <    begin    +    length    &&    length    >    1)    {    	non-compiled	[CE]  '.class'  expected	92	None	replace
226	[BUG]  [BUGGY]  int  mean  =  weights.length;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  weights.length;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  weights.length;	  int    mean    =    accum.length;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
227	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length,  accum2,  dev);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  begin,  length,  accum2,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  begin,  length,  accum2,  dev);	  int    mean    =    isBiasCorrected(values,    begin,    length,    dev);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
228	[BUG]  [BUGGY]  double  dev  =  Math.abs(var,  accum2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(var,  accum2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(var,  accum2);	  double    dev    =    Math.abs(accum2,    var);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
229	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected  &&  begin  <  =  length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  &&  begin  <  =  length;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  =  isBiasCorrected  &&  begin  <  =  length;	  incMoment    =    isBiasCorrected;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
230	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected  +  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  =  isBiasCorrected  +  1;	  incMoment    =    isBiasCorrected;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
231	[BUG]  [BUGGY]  int  mean  =  begin  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  begin  +  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  begin  +  1;	  int    mean    =    isBiasCorrected.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
232	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length  -  1,  accum);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length  -  1,  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  begin,  length  -  1,  accum);	  double    mean    =    isBiasCorrected(values,    begin,    length    -    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
233	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  var;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  var;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum0]  :  var;	  int    mean    =    isBiasCorrected?    values[accum0]    :    null;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
234	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  +1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  1  :  +1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  +1;	  int    mean    =    isBiasCorrected?    1    :    -1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
235	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  -  begin);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  -  begin);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  -  begin);	  double    dev    =    Math.abs(dev    -    mean);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
236	[BUG]  [BUGGY]  For(int  i  =  begin  +  length;  i  <  begin  +  length2;  i++)  {  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin  +  length;  i  <  begin  +  length2;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin  +  length;  i  <  begin  +  length2;  i++)  {	  For(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	22	None	replace
237	[BUG]  [BUGGY]  For(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {	  For(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	22	None	replace
238	[BUG]  [BUGGY]  For(int  i  =  begin  +  length;  i  <  begin  +  length-2;  i++)  {  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin  +  length;  i  <  begin  +  length-2;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin  +  length;  i  <  begin  +  length-2;  i++)  {	  For(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	22	None	replace
239	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  var;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  var;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum1]  :  var;	  int    mean    =    isBiasCorrected?    values[accum]    :    var;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
240	[BUG]  [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  (int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  (int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  (int  i  =  begin  +  length;  i  <  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    (int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  ')'  expected	70	None	replace
241	[BUG]  [BUGGY]  For(int  i  =  begin  +  1;  i  >=  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin  +  1;  i  >=  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin  +  1;  i  >=  begin  +  length;  i++)  {	  For(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	73	None	replace
242	[BUG]  [BUGGY]  For(int  i  =  begin  +  length;  i!=  begin  +  length;  i++)  {  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin  +  length;  i!=  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin  +  length;  i!=  begin  +  length;  i++)  {	  For(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	73	None	replace
243	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  *  dev);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  *  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  *  dev);	  double    dev    =    Math.abs(accum    *    dev);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
244	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  (int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  (int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    (int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {	  	non-compiled	[CE]  ')'  expected	93	None	add
245	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE  +  1;	  incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
246	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  1  :  0,  length;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  1  :  0,  length;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  1  :  0,  length;	  double    mean    =    isBiasCorrected?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
247	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  1,  dev  :  0;  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  1,  dev  :  0;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  1,  dev  :  0;	  double    mean    =    isBiasCorrected?    1    :    0;    	non-compiled	[CE]  :  expected	15	None	replace
248	[BUG]  [BUGGY]  double  accum2  =  0.00;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  accum2  =  0.00;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  accum2  =  0.00;	  double    accum2    =    0.001;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
249	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  *  mean);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  *  mean);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  *  mean);	  double    dev    =    Math.abs(accum    *    accum);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
250	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  accum1,  length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  accum1,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  accum1,  length);	  double    mean    =    isBiasCorrected(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
251	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  -  accum,  dev);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  -  accum,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  -  accum,  dev);	  double    dev    =    Math.abs(accum    -    mean,    dev);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
252	[BUG]  [BUGGY]  double  dev  =  Math.abs(mean  -  m2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(mean  -  m2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(mean  -  m2);	  double    dev    =    Math.abs(m2    -    mean);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
253	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  ValueUtils.doubleToLongBits(values,  begin,  length):  ValueUtils.doubleToLongBits(values,  begin,  length  -  1));  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  ValueUtils.doubleToLongBits(values,  begin,  length):  ValueUtils.doubleToLongBits(values,  begin,  length  -  1));  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  ValueUtils.doubleToLongBits(values,  begin,  length):  ValueUtils.doubleToLongBits(values,  begin,  length  -  1));	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length    -    1));    	non-compiled	[CE]  ';'  expected	10	None	replace
254	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-2);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-2);	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length)-    1);    	non-compiled	[CE]  ';'  expected	77	None	replace
255	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  +  1];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2  +  1];	  double    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
256	[BUG]  [BUGGY]  double  accum2  =  0.5;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  accum2  =  0.5;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  accum2  =  0.5;	  double    accum2    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
257	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  2;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  2;  i  <  begin  +  length;  i++)  {	  for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	38	3	replace
258	[BUG]  [BUGGY]  for(int  i  =  begin  +  2;  i  <  begin  +  length;  i++)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  2;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  2;  i  <  begin  +  length;  i++)  {	  for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	38	3	replace
259	[BUG]  [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  (int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  (int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    1;    i    <    begin    +    length;    i++)    {    (int  i  =  begin  +  1;  i  <  begin  +  length;  i++)  {	  	non-compiled	[CE]  ')'  expected	37	None	add
260	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  1);	  double    dev    =    getDev(values,    accum,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
261	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  Double.INFINITY;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  Double.INFINITY;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  Double.INFINITY;	  double    mean    =    isBiasCorrected?    Double.NaN    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
262	[BUG]  [BUGGY]  double  mean  =  incMoment?  Double.NaN  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  incMoment?  Double.NaN  :  Double.POSITIVE_INFINITY;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  incMoment?  Double.NaN  :  Double.POSITIVE_INFINITY;	  double    mean    =    isBiasCorrected?    Double.NaN    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
263	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2  +  1];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2  +  1];	  int    mean    =    isBiasCorrected?    values[accum2]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
264	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected.length  -  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected.length  -  2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected.length  -  2;	  int    mean    =    isBiasCorrected.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
265	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  dev,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  dev,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  dev,  length);	  double    dev    =    getDev(values,    accum,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
266	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  (int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  (int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    1;    i++)    {    (int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {	  	non-compiled	[CE]  ')'  expected	39	None	add
267	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  for(int  i  =  begin  +  length;  i  <  begin  +  1)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  1;  i++)  {  for(int  i  =  begin  +  length;  i  <  begin  +  1)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    1;    i++)    {    for(int  i  =  begin  +  length;  i  <  begin  +  1)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
268	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  begin);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  begin);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  begin);	  double    dev    =    getDev(values,    begin,    length,    accum);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
269	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  dev;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  dev;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum0]  :  dev;	  int    mean    =    isBiasCorrected?    values[accum]    :    dev;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
270	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  Accum2;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  1  :  Accum2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  Accum2;	  int    mean    =    isBiasCorrected?    1    :    accum;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
271	[BUG]  [BUGGY]  double  dev  =  Math.abs(var  *  accum);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(var  *  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(var  *  accum);	  double    dev    =    Math.abs(accum    *    var);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
272	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected.get(values,  begin,  length  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected.get(values,  begin,  length  +  1);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected.get(values,  begin,  length  +  1);	  int    mean    =    isBiasCorrected.get(values,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
273	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum2,  begin);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum2,  begin);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum2,  begin);	  double    dev    =    getDev(values,    begin,    length,    accum2);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
274	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  DEV);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  DEV);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  DEV);	  double    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    DEV);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
275	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  accum1,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  accum1,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  accum1,  length);	  int    mean    =    isBiasCorrected(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
276	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  *  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  *  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  *  1;	  double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY    +    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
277	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length,  accum2,  dev);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  begin,  length,  accum2,  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  begin,  length,  accum2,  dev);	  double    mean    =    isBiasCorrected(values,    begin,    length,    dev);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
278	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  /  2  +  1;  i++)  {  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  /  2  +  1;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  /  2  +  1;  i++)  {	  For(int    i    =    begin;    i    <    begin    +    length    /    2;    i++)    {    	non-compiled	[CE]  '.class'  expected	23	None	replace
279	[BUG]  [BUGGY]  double  accum2  =  0.0010.0;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  accum2  =  0.0010.0;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  accum2  =  0.0010.0;	  double    accum2    =    10.0;    	non-compiled	[CE]  ';'  expected	71	None	replace
280	[BUG]  [BUGGY]  Double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  Double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length));  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	Double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length));	  double    mean    =    incMoment?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length));    	non-compiled	[CE]  ';'  expected	96	None	replace
281	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum0];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum0];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum0];	  int    mean    =    isBiasCorrected?    values[accum0]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
282	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  values[accum1];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  values[accum1];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum0]  :  values[accum1];	  int    mean    =    isBiasCorrected?    values[accum0]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
283	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2  -  1];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  values[accum2  -  1];	  int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2    -    1];    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
284	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  values[accum2  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  values[accum2  -  1];  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum1]  :  values[accum2  -  1];	  int    mean    =    isBiasCorrected?    values[accum]    :    values[accum2    -    1];    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
285	[BUG]  [BUGGY]  double  dev  =  getDev(values,  begin,  length  /  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  begin,  length  /  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  begin,  length  /  1);	  double    dev    =    getDev(values,    begin,    length    -    1);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
286	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN,  dev  +  1;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN,  dev  +  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.POSITIVE_INFINITY  :  Double.NaN,  dev  +  1;	  double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NaN    +    1;    	non-compiled	[CE]  ';'  expected	43	None	replace
287	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  /  accum2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  /  accum2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  /  accum2);	  double    dev    =    Math.abs(accum2    /    dev);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
288	[BUG]  [BUGGY]  double  dev  =  Math.abs(dev  /  dev);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(dev  /  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(dev  /  dev);	  double    dev    =    Math.abs(accum2    /    dev);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
289	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  accum;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum1]  :  accum;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum1]  :  accum;	  int    mean    =    isBiasCorrected?    values[accum]    :    accum;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
290	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  accum;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum0]  :  accum;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum0]  :  accum;	  int    mean    =    isBiasCorrected?    values[accum]    :    accum;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
291	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  begin  :  begin  +  length  *  length;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  begin  :  begin  +  length  *  length;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  begin  :  begin  +  length  *  length;	  int    mean    =    isBiasCorrected?    begin    :    begin    +    length;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
292	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  begin  +  length  :  begin  +  length;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  begin  +  length  :  begin  +  length;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  begin  +  length  :  begin  +  length;	  int    mean    =    isBiasCorrected?    begin    :    begin    +    length;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
293	[BUG]  [BUGGY]  double  dev  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  values[i]  *  mean;  accum  +=  weights[i]  *  (dev  *  dev);	  double    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
294	[BUG]  [BUGGY]  accum  =  values[i]  -  mean;  dev  +=  weights[i]  *  (dev  *  dev);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  accum  =  values[i]  -  mean;  dev  +=  weights[i]  *  (dev  *  dev);  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	accum  =  values[i]  -  mean;  dev  +=  weights[i]  *  (dev  *  dev);	  double    dev    =    values[i]    -    mean;    accum    +=    weights[i]    *    (dev    *    dev);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
295	[BUG]  [BUGGY]  double  dev  =  getDev(values,  weights,  accum2,  length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  weights,  accum2,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  weights,  accum2,  length);	  double    dev    =    getDev(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
296	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  accum2;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  accum2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  0,  accum2;	  int    mean    =    isBiasCorrected?    1    :    0,    length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
297	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  begin  +  length;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  1  :  0,  begin  +  length;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  0,  begin  +  length;	  int    mean    =    isBiasCorrected?    1    :    0,    length;    	non-compiled	[CE]  ';'  expected	72	None	replace
298	[BUG]  [BUGGY]  double  accum2  =  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  accum2  =  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  accum2  =  1;	  double    accum2    =    0;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
299	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    int  i  =  begin  +  length;  i  >=  begin  +  length;  i++)  {	  	non-compiled	[CE]  not  a  statement	35	None	add
300	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  /  var2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  /  var2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  /  var2);	  double    dev    =    Math.abs(accum    /    var);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
301	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  /  dev)/  dev;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  /  dev)/  dev;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  /  dev)/  dev;	  double    dev    =    Math.abs(accum2    /    dev);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
302	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  while(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [CE]  '.class'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  while(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    while(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	93	None	add
303	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length);  i++)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length;  i++)  {  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length);  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    for(int  i  =  begin  +  length;  i  <  begin  +  length  *  length);  i++)  {	  	non-compiled	[CE]  ';'  expected	93	None	add
304	[BUG]  [BUGGY]  double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  -  1));  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  -  1));  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length  -  1));	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length    -    1));    	non-compiled	[CE]  ';'  expected	10	None	replace
305	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  dev;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  dev;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    	compilable	  [FE]  AssertionError  	94	2	replace
306	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  dev;  i++)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  dev;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  dev;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    	compilable	  [FE]  AssertionError  	94	2	replace
307	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  3;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  3;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	3	replace
308	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  3;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  <  begin  +  length  *  3;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  <  begin  +  length  *  3;  i++)  {	  for(int    i    =    begin    +    length;    i    <    begin    +    length    *    length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	3	replace
309	[BUG]  [BUGGY]  double  accum2  =.0;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  accum2  =.0;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  accum2  =.0;	  double    accum2    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
310	[BUG]  [BUGGY]  int  i  =  begin  +  length;  i  <  begin  +  length;  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  i  =  begin  +  length;  i  <  begin  +  length;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  i  =  begin  +  length;  i  <  begin  +  length;	  for(int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    (int    i    =    begin    +    length;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  >  expected	70	None	replace
311	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  -  accum);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  -  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  -  accum);	  double    dev    =    Math.abs(accum2    -    accum);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
312	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2  -  dev);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2  -  dev);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2  -  dev);	  double    dev    =    Math.abs(accum2    -    accum);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
313	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length,  dev);  i++)  {  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length,  dev);  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length,  dev);  i++)  {	  For(int    i    =    start;    i    <    begin    +    length;    i++)    {    	non-compiled	[CE]  '.class'  expected	74	None	replace
314	[BUG]  [BUGGY]  Double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  Double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	Double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;	  Double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
315	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  ValueUtils.doubleToLongBits(values,  begin,  length):  ValueUtils.doubleToLongBits(values,  begin,  length  +  1));  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  ValueUtils.doubleToLongBits(values,  begin,  length):  ValueUtils.doubleToLongBits(values,  begin,  length  +  1));  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  ValueUtils.doubleToLongBits(values,  begin,  length):  ValueUtils.doubleToLongBits(values,  begin,  length  +  1));	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length    +    1));    	non-compiled	[CE]  ';'  expected	9	None	replace
316	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected(values,  values,  begin,  length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected(values,  values,  begin,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected(values,  values,  begin,  length);	  double    mean    =    isBiasCorrected(values,    weights,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
317	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  dev,  begin,  length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  dev,  begin,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  dev,  begin,  length);	  double    dev    =    getDev(values,    accum,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
318	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  mean,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  mean,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  mean,  length);	  double    dev    =    getDev(values,    accum,    begin,    length);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
319	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected(values,  dev,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected(values,  dev,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected(values,  dev,  length);	  int    mean    =    isBiasCorrected(values,    accum2,    length);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
320	[BUG]  [BUGGY]  int  mean  =  begin.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  begin.length  -  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  begin.length  -  1;	  int    mean    =    isBiasCorrected.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
321	[BUG]  [BUGGY]  int  mean  =  dev.length;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  dev.length;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  dev.length;	  int    mean    =    accum.length;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
322	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum2,  accum2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum2,  accum2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum2,  accum2);	  double    dev    =    Math.abs(accum2,    var);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
323	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  &&  accum2  >  1)  {  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  &&  accum2  >  1)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  &&  accum2  >  1)  {	  For(int    i    =    begin;    i    <    begin    +    length    &&    length    >    1)    {    	non-compiled	[CE]  '.class'  expected	92	None	replace
324	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  &&  dev  >  1)  {  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  &&  dev  >  1)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  &&  dev  >  1)  {	  For(int    i    =    begin;    i    <    begin    +    length    &&    length    >    1)    {    	non-compiled	[CE]  '.class'  expected	92	None	replace
325	[BUG]  [BUGGY]  incMoment  -=  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  -=  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  -=  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;	  incMoment    =    isBiasCorrected?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
326	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  /  accum2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  /  accum2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  /  accum2);	  double    dev    =    Math.abs(accum    /    dev2);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
327	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  1  :  1,  dev;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  1  :  1,  dev;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  1  :  1,  dev;	  int    mean    =    isBiasCorrected?    1    :    0,    length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
328	[BUG]  [BUGGY]  int  mean  =  length?  1  :  0,  isBiasCorrected;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  length?  1  :  0,  isBiasCorrected;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  length?  1  :  0,  isBiasCorrected;	  int    mean    =    isBiasCorrected?    1    :    0,    length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
329	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  accum2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  values[accum2]  :  accum2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  values[accum2]  :  accum2;	  int    mean    =    isBiasCorrected?    values[accum]    :    accum2;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
330	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum,  length,  accum2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum,  length,  accum2);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum,  length,  accum2);	  double    dev    =    getDev(values,    begin,    length,    accum2);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
331	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  >  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	add	for(int  i  =  begin  +  length;  i  >  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	36	2	replace
332	[BUG]  [BUGGY]  for(int  i  =  begin  +  length;  i  >  begin  +  length;  i++)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  for(int  i  =  begin  +  length;  i  >  begin  +  length;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	for(int  i  =  begin  +  length;  i  >  begin  +  length;  i++)  {	  for(int    i    =    begin    +    length;    i    >=    begin    +    length;    i++)    {    	compilable	  [FE]  AssertionError  	36	2	replace
333	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2],  dev;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2],  dev;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum]  :  values[accum2],  dev;	  double    mean    =    isBiasCorrected?    values[accum]    :    values[accum2];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
334	[BUG]  [BUGGY]  double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  incMoment?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY  +  1;	  double    mean    =    isBiasCorrected?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY    +    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
335	[BUG]  [BUGGY]  incMoment  -=  isBiasCorrected;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  -=  isBiasCorrected;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  -=  isBiasCorrected;	  incMoment    =    isBiasCorrected;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
336	[BUG]  [BUGGY]  incMoment  =  isBiasCorrected?  1  :  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  incMoment  =  isBiasCorrected?  1  :  0;  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	incMoment  =  isBiasCorrected?  1  :  0;	  incMoment    =    isBiasCorrected;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
337	[BUG]  [BUGGY]  double  dev  =  getDev(values,  accum2,  accum);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(values,  accum2,  accum);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(values,  accum2,  accum);	  double    dev    =    getDev(values,    accum,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
338	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  var;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  values[accum]  :  var;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  values[accum]  :  var;	  int    mean    =    isBiasCorrected?    values[accum]    :    var;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
339	[BUG]  [BUGGY]  double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-  1);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  incMoment?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)-  1);	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length)-    1);    	non-compiled	[CE]  ';'  expected	77	None	replace
340	[BUG]  [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)&  1);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)&  1);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  isBiasCorrected?  Double.NaN  :  ValueUtils.doubleToLongBits(values,  begin,  length)&  1);	  double    mean    =    isBiasCorrected?    Double.NaN    :    ValueUtils.doubleToLongBits(values,    begin,    length)-    1);    	non-compiled	[CE]  ';'  expected	77	None	replace
341	[BUG]  [BUGGY]  int  mean  =  isBiasCorrected?  var.length  :  begin;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  int  mean  =  isBiasCorrected?  var.length  :  begin;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	int  mean  =  isBiasCorrected?  var.length  :  begin;	  int    mean    =    var.length;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
342	[BUG]  [BUGGY]  double  dev  =  getDev(accum,  begin,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  getDev(accum,  begin,  length);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  getDev(accum,  begin,  length);	  double    dev    =    getDev(values,    begin,    length,    accum);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
343	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  *  var)/  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  *  var)/  2;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  *  var)/  2;	  double    dev    =    Math.abs(accum    *    var);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
344	[BUG]  [BUGGY]  double  dev  =  Math.abs(accum  -  method);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  dev  =  Math.abs(accum  -  method);  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  dev  =  Math.abs(accum  -  method);	  double    dev    =    Math.abs(mean    -    accum2);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
345	[BUG]  [BUGGY]  double  mean  =  incMoment?  1  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  double  mean  =  incMoment?  1  :  0;  [BUGGY]      for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	double  mean  =  incMoment?  1  :  0;	  double    mean    =    isBiasCorrected?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
346	[BUG]  [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  *  2;  i++)  {  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;      [BUGGY]  For(int  i  =  begin;  i  <  begin  +  length  *  2;  i++)  {  [BUGGY]      dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	513	513	1	replace	For(int  i  =  begin;  i  <  begin  +  length  *  2;  i++)  {	  For(int    i    =    begin;    i    <    begin    +    length    /    2;    i++)    {    	non-compiled	[CE]  '.class'  expected	23	None	replace
