bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -=  values[i]  *  values[i];  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
2	[BUG]  [BUGGY]    if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  sumWts  +=  values[i]  *  values[i];  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
3	[BUG]  [BUGGY]    if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(isBiasCorrected)  {  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
4	[BUG]  [BUGGY]    if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  accum2  +=  values[i]  *  values[i];  }		non-compiled	[CE]  not  a  statement	28	None	add
5	[BUG]  [BUGGY]    if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [CE]  not  a  statement  [FE]            AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(isBiasCorrected)  {  double[]  values  =  getValues();  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  values[i]  -  mean;  }		non-compiled	[CE]  not  a  statement	28	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]  }  else  if(length  ==  1)  {  [BUGGY]  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(length  ==  1)  {	}  else  if  (length  >  1)  {  	compilable	  [FE]  AssertionError  	27	2	replace
7	[BUG]  [BUGGY]  }  else  if(length  ==  1)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]  }  else  if(length  ==  1)  {  [BUGGY]  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(length  ==  1)  {	}  else  if  (length  >  1)  {  	compilable	  [FE]  AssertionError  	27	2	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]  }  else  if(length  <  1)  {  [BUGGY]  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(length  <  1)  {	}  else  if  (length  >  1)  {  	compilable	  [FE]  AssertionError  	27	2	replace
9	[BUG]  [BUGGY]  }  else  if(length  <  1)  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]  }  else  if(length  <  1)  {  [BUGGY]  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(length  <  1)  {	}  else  if  (length  >  1)  {  	compilable	  [FE]  AssertionError  	27	2	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]  }  else  if(length  >  2)  {  [BUGGY]  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(length  >  2)  {	}  else  if  (length  >  1)  {  	compilable	  [FE]  AssertionError  	27	1	replace
11	[BUG]  [BUGGY]  }  else  if(length  >  2)  {  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]  }  else  if(length  >  2)  {  [BUGGY]  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(length  >  2)  {	}  else  if  (length  >  1)  {  	compilable	  [FE]  AssertionError  	27	1	replace
12	[BUG]  [BUGGY]    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum2  =  0.0;  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
13	[BUG]  [BUGGY]    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  =  0.0;  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
14	[BUG]  [BUGGY]    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  (dev  *		non-compiled	[CE]  illegal  start  of  expression	28	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }		compilable	  [FE]  AssertionError  	28	1	add
16	[BUG]  [BUGGY]    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  }		compilable	  [FE]  AssertionError  	28	1	add
17	[BUG]  [BUGGY]    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [CE]  ';'  expected  [FE]            AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(test(values,  weights,  begin,  length))  {  var  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum2  +=  values[i]  *  value		non-compiled	[CE]  ';'  expected	28	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;		compilable	  [FE]  AssertionError  	28	1	add
19	[BUG]  [BUGGY]    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    incMoment  =  isBiasCorrected?  Boolean.TRUE  :  Boolean.FALSE;		compilable	  [FE]  AssertionError  	28	1	add
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    incMoment  =  isBiasCorrected;  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	    incMoment  =  isBiasCorrected;		compilable	  [FE]  AssertionError  	28	1	add
21	[BUG]  [BUGGY]    incMoment  =  isBiasCorrected;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    incMoment  =  isBiasCorrected;  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    incMoment  =  isBiasCorrected;		compilable	  [FE]  AssertionError  	28	1	add
22	[BUG]  [BUGGY]    if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  mean;  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
23	[BUG]  [BUGGY]    if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  valueWts);  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
24	[BUG]  [BUGGY]    if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]    if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }  [BUGGY]  }  else  if  (length  >  1)  {  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	    if(incMoment)  {  double  accum  =  0.0;  for(int  i  =  begin;  i  <  begin  +  length;  i++)  {  accum  +=  values[i]  *  (values[i]  *  amount);  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]  }  else  if(length  >=  1)  {  [BUGGY]  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	add	}  else  if(length  >=  1)  {	}  else  if  (length  >  1)  {  	compilable	  [FE]  AssertionError  	27	1	replace
26	[BUG]  [BUGGY]  }  else  if(length  >=  1)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  final  double  mean,  final  int  begin,  final  int  length)  {  double  var  =  Double.NaN;  if  (test(values,  weights,  begin,  length))  {  if  (length  ==  1)  {  var  =  0.0;  [BUGGY]  }  else  if(length  >=  1)  {  [BUGGY]  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;  [CLASS]  Variance  [METHOD]  evaluate  [RETURN_TYPE]  double  final  double[]  values  final  double[]  weights  final  double  mean  final  int  begin  final  int  length  [VARIABLES]  boolean  incMoment  isBiasCorrected  double[]  values  weights  long  serialVersionUID  SecondMoment  m2  moment  double  accum  accum2  dev  mean  sumWts  var  int  begin  i  length  	projects/Math41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java	0.5773502691896258	509	509	1	replace	}  else  if(length  >=  1)  {	}  else  if  (length  >  1)  {  	compilable	  [FE]  AssertionError  	27	1	replace
