bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Annotation  caverphone(pString,  null);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(pString,  null);	  Annotation    caverphone(pString);    	non-compiled	[CE]  	146	None	replace
2	[BUG]  [BUGGY]  Annotation  caverphone(pString,  false);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(pString,  false);	  Annotation    caverphone(pString);    	non-compiled	[CE]  	146	None	replace
3	[BUG]  [BUGGY]  Annotation  caverphone(pString,  0);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(pString,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(pString,  0);	  Annotation    caverphone(pString);    	non-compiled	[CE]  	146	None	replace
4	[BUG]  [BUGGY]  Annotation  caverphone(pString,  true);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(pString,  true);	  Annotation    caverphone(pString);    	non-compiled	[CE]  	146	None	replace
5	[BUG]  [BUGGY]  Annotation  caverphone(pString,  boolean.valueOf(pString.toLowerCase()));  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(pString,  boolean.valueOf(pString.toLowerCase()));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(pString,  boolean.valueOf(pString.toLowerCase()));	  Annotation    caverphone(pString);    	non-compiled	[CE]  	146	None	replace
6	[BUG]  [BUGGY]  Annotation  caverphone(pString,  String.class);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(pString,  String.class);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(pString,  String.class);	  Annotation    caverphone(pString);    	non-compiled	[CE]  	146	None	replace
7	[BUG]  [BUGGY]  Annotation  caverphone(pString,  boolean.valueOf(pString.length()));  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(pString,  boolean.valueOf(pString.length()));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(pString,  boolean.valueOf(pString.length()));	  Annotation    caverphone(pString);    	non-compiled	[CE]  	146	None	replace
8	[BUG]  [BUGGY]  Annotation  caverphone(pString,  boolean.valueOf(pString));  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(pString,  boolean.valueOf(pString));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(pString,  boolean.valueOf(pString));	  Annotation    caverphone(pString);    	non-compiled	[CE]  	146	None	replace
9	[BUG]  [BUGGY]  Annotation  caverphone(pString,  this.encoder);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(pString,  this.encoder);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(pString,  this.encoder);	  Annotation    caverphone(pString);    	non-compiled	[CE]  	146	None	replace
10	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    	non-compiled	[CE]  	46	None	replace
11	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    	non-compiled	[CE]  	46	None	replace
12	[BUG]  [BUGGY]  if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    	non-compiled	[CE]  	46	None	replace
13	[BUG]  [BUGGY]  if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    	non-compiled	[CE]  	46	None	replace
14	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  new  String(pString.toLowerCase());  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  new  String(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  new  String(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    	non-compiled	[CE]  	46	None	replace
15	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  null;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  null;  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    	non-compiled	[CE]  	46	None	replace
16	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    	non-compiled	[CE]  	46	None	replace
17	[BUG]  [BUGGY]  return  this.caverphone(pString,  String.valueOf(pString));  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  String.valueOf(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  String.valueOf(pString));	  return    caverphone(pString,    String.valueOf(pString));    	non-compiled	[CE]  	178	None	replace
18	[BUG]  [BUGGY]  return  encode(pString,  String.valueOf(pString));  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  String.valueOf(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  String.valueOf(pString));	  return    caverphone(pString,    String.valueOf(pString));    	non-compiled	[CE]  	178	None	replace
19	[BUG]  [BUGGY]  return  this.encode(pString,  String.valueOf(pString));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  String.valueOf(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  String.valueOf(pString));	  return    caverphone(pString,    String.valueOf(pString));    	non-compiled	[CE]  	178	None	replace
20	[BUG]  [BUGGY]  return  caverphone(pString,  String.valueOf(pString).toLowerCase());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  String.valueOf(pString).toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  String.valueOf(pString).toLowerCase());	  return    caverphone(pString,    String.valueOf(pString));    	non-compiled	[CE]  	178	None	replace
21	[BUG]  [BUGGY]  return  getCamerphone(pString,  String.valueOf(pString));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  String.valueOf(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  String.valueOf(pString));	  return    caverphone(pString,    String.valueOf(pString));    	non-compiled	[CE]  	178	None	replace
22	[BUG]  [BUGGY]  return  parse(pString,  String.valueOf(pString));  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  parse(pString,  String.valueOf(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  parse(pString,  String.valueOf(pString));	  return    caverphone(pString,    String.valueOf(pString));    	non-compiled	[CE]  	178	None	replace
23	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString!=  null)  {  return  string.substring(0,  pString.length());  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString!=  null)  {  return  string.substring(0,  pString.length());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString!=  null)  {  return  string.substring(0,  pString.length());  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    string.substring(0,    pString.length()    -    1);    }    	non-compiled	[CE]  	463	None	replace
24	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString  ==  null)  {  return  string.substring(0,  pString.length());  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString  ==  null)  {  return  string.substring(0,  pString.length());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString  ==  null)  {  return  string.substring(0,  pString.length());  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    string.substring(0,    pString.length()    -    1);    }    	non-compiled	[CE]  	463	None	replace
25	[BUG]  [BUGGY]  String  pString  =  string.substring(0,  pString.length()  -  1);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  string.substring(0,  pString.length()  -  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  string.substring(0,  pString.length()  -  1);	  pendingCaverphones()    {    if(pString!=    null)    {    return    string.substring(0,    pString.length()    -    1);    }    	non-compiled	[CE]  	463	None	replace
26	[BUG]  [BUGGY]  pendingCaverphones()  {  return  string.substring(0,  pString.length());  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  return  string.substring(0,  pString.length());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  return  string.substring(0,  pString.length());  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    string.substring(0,    pString.length()    -    1);    }    	non-compiled	[CE]  	463	None	replace
27	[BUG]  [BUGGY]  pendingCaverphones()  {  return  caverphone(pString.substring(0,  pString.length()));  }  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  return  caverphone(pString.substring(0,  pString.length()));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  return  caverphone(pString.substring(0,  pString.length()));  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    string.substring(0,    pString.length()    -    1);    }    	non-compiled	[CE]  	463	None	replace
28	[BUG]  [BUGGY]  pendingCaverphones()  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    string.substring(0,    pString.length()    -    1);    }    	non-compiled	[CE]  	463	None	replace
29	[BUG]  [BUGGY]  return  caver(pString,  null,  0);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  null,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  null,  0);	  return    caver(pString,    null);    	non-compiled	[CE]  	203	None	replace
30	[BUG]  [BUGGY]  return  caver(pString,  null,  false);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  null,  false);	  return    caver(pString,    null);    	non-compiled	[CE]  	203	None	replace
31	[BUG]  [BUGGY]  return  caver(pString,  null,  true);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  null,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  null,  true);	  return    caver(pString,    null);    	non-compiled	[CE]  	203	None	replace
32	[BUG]  [BUGGY]  return  caver(pString,  null,  null);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  null,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  null,  null);	  return    caver(pString,    null);    	non-compiled	[CE]  	203	None	replace
33	[BUG]  [BUGGY]  return  caver(pString,  this,  null);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  this,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  this,  null);	  return    caver(pString,    null);    	non-compiled	[CE]  	203	None	replace
34	[BUG]  [BUGGY]  return  caver(pString,  null,  this);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  null,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  null,  this);	  return    caver(pString,    null);    	non-compiled	[CE]  	203	None	replace
35	[BUG]  [BUGGY]  return  caver(pString,  this);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  this);	  return    caver(pString,    null);    	non-compiled	[CE]  	203	None	replace
36	[BUG]  [BUGGY]  return  caver(pString,  null,  -1);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  null,  -1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  null,  -1);	  return    caver(pString,    null);    	non-compiled	[CE]  	203	None	replace
37	[BUG]  [BUGGY]  return  caver(pString,  null,  0.0);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  null,  0.0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  null,  0.0);	  return    caver(pString,    null);    	non-compiled	[CE]  	203	None	replace
38	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	328	None	replace
39	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	328	None	replace
40	[BUG]  [BUGGY]  Character.isLetter(pString.length())&&!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.length())&&!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.length())&&!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	328	None	replace
41	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	328	None	replace
42	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString);	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver!=    null)    {    return    caver;    }    	non-compiled	[CE]  	110	None	replace
43	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caver;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caver;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caver;  }	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver!=    null)    {    return    caver;    }    	non-compiled	[CE]  	110	None	replace
44	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver!=  null)  {  return  caver;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver!=  null)  {  return  caver;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver!=  null)  {  return  caver;  }	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver!=    null)    {    return    caver;    }    	non-compiled	[CE]  	110	None	replace
45	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver  ==  null)  {  return  caver;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver  ==  null)  {  return  caver;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver  ==  null)  {  return  caver;  }	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver!=    null)    {    return    caver;    }    	non-compiled	[CE]  	110	None	replace
46	[BUG]  [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  caver;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  caver;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  caver;  }	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver!=    null)    {    return    caver;    }    	non-compiled	[CE]  	110	None	replace
47	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver!=    null)    {    return    caver;    }    	non-compiled	[CE]  	110	None	replace
48	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString,  null);  if(caver!=  null)  {  return  caver;  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString,  null);  if(caver!=  null)  {  return  caver;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString,  null);  if(caver!=  null)  {  return  caver;  }	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver!=    null)    {    return    caver;    }    	non-compiled	[CE]  	110	None	replace
49	[BUG]  [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caver;  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caver;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caver;  }	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver!=    null)    {    return    caver;    }    	non-compiled	[CE]  	110	None	replace
50	[BUG]  [BUGGY]  String  pString  =  Character.isDigit(pString.charAt(0));  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  Character.isDigit(pString.charAt(0));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  Character.isDigit(pString.charAt(0));	  if(Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	428	None	replace
51	[BUG]  [BUGGY]  if(Character.isDigit(pString.charAt(0))||  Character.isDigit(pString.charAt(0))  {  return  pString;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(Character.isDigit(pString.charAt(0))||  Character.isDigit(pString.charAt(0))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(Character.isDigit(pString.charAt(0))||  Character.isDigit(pString.charAt(0))  {  return  pString;  }	  if(Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	428	None	replace
52	[BUG]  [BUGGY]  if(Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }	  if(Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	428	None	replace
53	[BUG]  [BUGGY]  if(Character.isDigit(pString.charAt(0))||  Character.isISOControl(pString.charAt(0)))  {  return  pString;  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(Character.isDigit(pString.charAt(0))||  Character.isISOControl(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(Character.isDigit(pString.charAt(0))||  Character.isISOControl(pString.charAt(0)))  {  return  pString;  }	  if(Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	428	None	replace
54	[BUG]  [BUGGY]  if(Character.isDigit(pString.charAt(0))||  Character.isJavaIdentifierPart(pString.charAt(0)))  {  return  pString;  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(Character.isDigit(pString.charAt(0))||  Character.isJavaIdentifierPart(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(Character.isDigit(pString.charAt(0))||  Character.isJavaIdentifierPart(pString.charAt(0)))  {  return  pString;  }	  if(Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	428	None	replace
55	[BUG]  [BUGGY]  return  this.caverphone(pString,  0,  pString.length);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  0,  pString.length);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  0,  pString.length);	  return    this.caverphone(pString,    0);    	non-compiled	[CE]  	143	None	replace
56	[BUG]  [BUGGY]  return  this.caverphone(pString,  0,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  0,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  0,  0);	  return    this.caverphone(pString,    0);    	non-compiled	[CE]  	143	None	replace
57	[BUG]  [BUGGY]  return  this.caverphone(pString,  0,  pString.length());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  0,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  0,  pString.length());	  return    this.caverphone(pString,    0);    	non-compiled	[CE]  	143	None	replace
58	[BUG]  [BUGGY]  return  this.caverphone(pString,  0,  null);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  0,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  0,  null);	  return    this.caverphone(pString,    0);    	non-compiled	[CE]  	143	None	replace
59	[BUG]  [BUGGY]  return  this.caverphone(pString,  0,  0.0);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  0,  0.0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  0,  0.0);	  return    this.caverphone(pString,    0);    	non-compiled	[CE]  	143	None	replace
60	[BUG]  [BUGGY]  return  this.caverphone(pString,  null,  0);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  null,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  null,  0);	  return    this.caverphone(pString,    0);    	non-compiled	[CE]  	143	None	replace
61	[BUG]  [BUGGY]  return  this.caverphone(pString,  0,  true);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  0,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  0,  true);	  return    this.caverphone(pString,    0);    	non-compiled	[CE]  	143	None	replace
62	[BUG]  [BUGGY]  return  this.caverphone(pString,  1);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  1);	  return    this.caverphone(pString,    0);    	non-compiled	[CE]  	143	None	replace
63	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	243	None	replace
64	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	243	None	replace
65	[BUG]  [BUGGY]  Characterphone  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Characterphone  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Characterphone  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	243	None	replace
66	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	243	None	replace
67	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()!=  0)  {  return  pString;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()!=  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	243	None	replace
68	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	243	None	replace
69	[BUG]  [BUGGY]  String  caverphone(pString.substring(0,  pString.length()));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.substring(0,  pString.length()));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.substring(0,  pString.length()));	  String    caverphone(pString.substring(0,    pString.length()    -    1));    	non-compiled	[CE]  	84	None	replace
70	[BUG]  [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  1));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  1));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.substring(0,  pString.length()  1));	  String    caverphone(pString.substring(0,    pString.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
71	[BUG]  [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  +  1));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.substring(0,  pString.length()  +  1));	  String    caverphone(pString.substring(0,    pString.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
72	[BUG]  [BUGGY]  String  caverphone(pString.substring(0,  pString.length()).toLowerCase());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.substring(0,  pString.length()).toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.substring(0,  pString.length()).toLowerCase());	  String    caverphone(pString.substring(0,    pString.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
73	[BUG]  [BUGGY]  String  caverphone(pString,  pString.substring(0,  pString.length()));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  pString.substring(0,  pString.length()));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  pString.substring(0,  pString.length()));	  String    caverphone(pString.substring(0,    pString.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
74	[BUG]  [BUGGY]  CharSequence  caverphone(pString.substring(0,  pString.length()));  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.substring(0,  pString.length()));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.substring(0,  pString.length()));	  String    caverphone(pString.substring(0,    pString.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
75	[BUG]  [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  2));  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  2));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.substring(0,  pString.length()  2));	  String    caverphone(pString.substring(0,    pString.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
76	[BUG]  [BUGGY]  String  caverphone(pString.substring(1,  pString.length()));  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.substring(1,  pString.length()));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.substring(1,  pString.length()));	  String    caverphone(pString.substring(0,    pString.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
77	[BUG]  [BUGGY]  String  caverphone(pString.substring(0,  pString.length()).trim());  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.substring(0,  pString.length()).trim());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.substring(0,  pString.length()).trim());	  String    caverphone(pString.substring(0,    pString.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
78	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  getCaverphone();	  Annotation    <    String>    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
79	[BUG]  [BUGGY]  final  Annotation  <  String>  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  <  String>  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  <  String>  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
80	[BUG]  [BUGGY]  final  Annotation  <  String>  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  <  String>  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  <  String>  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
81	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  getCamera();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  getCamera();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  getCamera();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
82	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  getCaverphone(pString);	  Annotation    <    String>    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
83	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  this.getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  this.getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  this.getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
84	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  caverphone(pString);  }	  if(pString!=    null)    {    String    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
85	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  String  caverphone(pString);  }	  if(pString!=    null)    {    String    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
86	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  String  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  String  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()!=  0)  {  String  caverphone(pString);  }	  if(pString!=    null)    {    String    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
87	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  caverphone(pString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
88	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone(pString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
89	[BUG]  [BUGGY]  Class  <?>  pString  =  caverphone(pString);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Class  <?>  pString  =  caverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Class  <?>  pString  =  caverphone(pString);	  if(pString!=    null)    {    String    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
90	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    String    pString    =    this.caverphone(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	307	None	replace
91	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    String    pString    =    this.caverphone(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	307	None	replace
92	[BUG]  [BUGGY]  String  pString  =  this.caverphone(pString);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  this.caverphone(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  this.caverphone(pString);	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    String    pString    =    this.caverphone(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	307	None	replace
93	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    String    pString    =    this.caverphone(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	307	None	replace
94	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    String    pString    =    this.caverphone(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	307	None	replace
95	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  pString;  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    String    pString    =    this.caverphone(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	307	None	replace
96	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    String    pString    =    this.caverphone(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	307	None	replace
97	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString!=  null)  {  return	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    String    pString    =    this.caverphone(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	307	None	replace
98	[BUG]  [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	192	None	replace
99	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	192	None	replace
100	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	192	None	replace
101	[BUG]  [BUGGY]  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	192	None	replace
102	[BUG]  [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.toUpperCase();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.toUpperCase();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString  ==  null)?  null  :  pString.toUpperCase();	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	192	None	replace
103	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	192	None	replace
104	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	192	None	replace
105	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toUpperCase();  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toUpperCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toUpperCase();  }	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	192	None	replace
106	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	165	None	replace
107	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	165	None	replace
108	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	165	None	replace
109	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	165	None	replace
110	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString).toLowerCase();  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString).toLowerCase();  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString).toLowerCase();  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	165	None	replace
111	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	165	None	replace
112	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.toUpperCase());  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.toUpperCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.toUpperCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	165	None	replace
113	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  this;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  this;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  this;  }	  Character.isUpperCase(pString.charAt(0))    {    return    null;    }    	non-compiled	[CE]  	75	None	replace
114	[BUG]  [BUGGY]  Character.isUpperCase(pString.toLowerCase())  {  return  null;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.toLowerCase())  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.toLowerCase())  {  return  null;  }	  Character.isUpperCase(pString.charAt(0))    {    return    null;    }    	non-compiled	[CE]  	75	None	replace
115	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  caverphone(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  caverphone(pString);  }	  Character.isUpperCase(pString.charAt(0))    {    return    null;    }    	non-compiled	[CE]  	75	None	replace
116	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  {  return  null;  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  {  return  null;  }	  Character.isUpperCase(pString.charAt(0))    {    return    null;    }    	non-compiled	[CE]  	75	None	replace
117	[BUG]  [BUGGY]  CharTypes.isUpperCase(pString.charAt(0))  {  return  null;  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.isUpperCase(pString.charAt(0))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.isUpperCase(pString.charAt(0))  {  return  null;  }	  Character.isUpperCase(pString.charAt(0))    {    return    null;    }    	non-compiled	[CE]  	75	None	replace
118	[BUG]  [BUGGY]  Character.isUpperCase(pString.length())  {  return  null;  }  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.length())  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.length())  {  return  null;  }	  Character.isUpperCase(pString.charAt(0))    {    return    null;    }    	non-compiled	[CE]  	75	None	replace
119	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  0;  }  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  0;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  0;  }	  Character.isUpperCase(pString.charAt(0))    {    return    null;    }    	non-compiled	[CE]  	75	None	replace
120	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0))  {  return  null;  }  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0))  {  return  null;  }	  Character.isUpperCase(pString.charAt(0))    {    return    null;    }    	non-compiled	[CE]  	75	None	replace
121	[BUG]  [BUGGY]  String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	327	None	replace
122	[BUG]  [BUGGY]  String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	327	None	replace
123	[BUG]  [BUGGY]  String  caverphone(pString.length(),  false)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length(),  false)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length(),  false)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	327	None	replace
124	[BUG]  [BUGGY]  String  caverphone(pString.length(),  true)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length(),  true)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length(),  true)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	327	None	replace
125	[BUG]  [BUGGY]  String  caverphone(pString.length(),  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length(),  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length(),  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	327	None	replace
126	[BUG]  [BUGGY]  String  caverphone(pString.length(),  0,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length(),  0,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length(),  0,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	327	None	replace
127	[BUG]  [BUGGY]  String  caverphone(pString,  0,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  0,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  0,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	327	None	replace
128	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	327	None	replace
129	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return  this;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return  this;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0)))  {  return  this;  }	  Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	72	None	replace
130	[BUG]  [BUGGY]  CharTypes.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.isUpperCase(pString.charAt(0)))  {  return  null;  }	  Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	72	None	replace
131	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0)))  {  return  null;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0)))  {  return  null;  }	  Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	72	None	replace
132	[BUG]  [BUGGY]  Character.isUpperCase(pString.toLowerCase()))  {  return  null;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.toLowerCase()))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.toLowerCase()))  {  return  null;  }	  Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	72	None	replace
133	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0)))  {  return  null;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0)))  {  return  null;  }	  Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	72	None	replace
134	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return  0;  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return  0;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0)))  {  return  0;  }	  Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	72	None	replace
135	[BUG]  [BUGGY]  Character.isUpperCase(pString.length()))  {  return  null;  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.length()))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.length()))  {  return  null;  }	  Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	72	None	replace
136	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return   " ";  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return   " ";  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0)))  {  return   " ";  }	  Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	72	None	replace
137	[BUG]  [BUGGY]  String  pString  =  pString.substring(0,  pString.length()  -  2);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.substring(0,  pString.length()  -  2);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.substring(0,  pString.length()  -  2);	  if(pString.length()    ==    2)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	427	None	replace
138	[BUG]  [BUGGY]  String  pString  =  pString.trim();  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.trim();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.trim();	  if(pString.length()    ==    2)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	427	None	replace
139	[BUG]  [BUGGY]  if(pString.length()  ==  2)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  2)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  2)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }	  if(pString.length()    ==    2)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	427	None	replace
140	[BUG]  [BUGGY]  if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  	55	None	replace
141	[BUG]  [BUGGY]  while(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  while(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	while(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  	55	None	replace
142	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  	55	None	replace
143	[BUG]  [BUGGY]  while(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  while(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	while(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  	55	None	replace
144	[BUG]  [BUGGY]  while(this.caverphone(pString)!=  null  &&  this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  while(this.caverphone(pString)!=  null  &&  this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	while(this.caverphone(pString)!=  null  &&  this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  	55	None	replace
145	[BUG]  [BUGGY]  while(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  while(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	while(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  	55	None	replace
146	[BUG]  [BUGGY]  String  pString  =  this.encode(pString);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  this.encode(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  this.encode(pString);	  return    this.encode(pString);    String    pString    =    this.encode(pString);    	non-compiled	[CE]  	249	None	replace
147	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }	  return    this.encode(pString);    String    pString    =    this.encode(pString);    	non-compiled	[CE]  	249	None	replace
148	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }	  return    this.encode(pString);    String    pString    =    this.encode(pString);    	non-compiled	[CE]  	249	None	replace
149	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }	  return    this.encode(pString);    String    pString    =    this.encode(pString);    	non-compiled	[CE]  	249	None	replace
150	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }	  return    this.encode(pString);    String    pString    =    this.encode(pString);    	non-compiled	[CE]  	249	None	replace
151	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }	  return    this.encode(pString);    String    pString    =    this.encode(pString);    	non-compiled	[CE]  	249	None	replace
152	[BUG]  [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }	  return    this.encode(pString);    String    pString    =    this.encode(pString);    	non-compiled	[CE]  	249	None	replace
153	[BUG]  [BUGGY]  if(pString.equals( " "))  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.equals( " "))  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.equals( " "))  {  return  this.encode(pString);  }  else  {  String  pString  =  this.encode(pString);  }	  return    this.encode(pString);    String    pString    =    this.encode(pString);    	non-compiled	[CE]  	249	None	replace
154	[BUG]  [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }	  return    this.encode(pString);    String    pString    =    this.encode(pString);    	non-compiled	[CE]  	249	None	replace
155	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	238	None	replace
156	[BUG]  [BUGGY]  Character.isDigit(pString.toCharArray())  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.toCharArray())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.toCharArray())  {  throw  new  IllegalArgumentException( " ");	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	238	None	replace
157	[BUG]  [BUGGY]  CharTypes.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	238	None	replace
158	[BUG]  [BUGGY]  Character.isDigit(pString.length())  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.length())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.length())  {  throw  new  IllegalArgumentException( " ");	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	238	None	replace
159	[BUG]  [BUGGY]  Character.isISOControl(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isISOControl(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isISOControl(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	238	None	replace
160	[BUG]  [BUGGY]  Character.isWhitespace(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isWhitespace(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isWhitespace(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	238	None	replace
161	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	310	None	replace
162	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	310	None	replace
163	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( ". "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( ". "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( ". "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	310	None	replace
164	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "java.util.ArrayList "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "java.util.ArrayList "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "java.util.ArrayList "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	310	None	replace
165	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ".);  }	  Parchet.checkArgument(!pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	310	None	replace
166	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	345	None	replace
167	[BUG]  [BUGGY]  Character.isDigit(pString.length())||!Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.length())||!Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.length())||!Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	345	None	replace
168	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  ||!Character.isDigit(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  ||!Character.isDigit(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  ||!Character.isDigit(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	345	None	replace
169	[BUG]  [BUGGY]  Annotations.encode(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    true)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	298	None	replace
170	[BUG]  [BUGGY]  Annotations.encode(pString,  false)  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  false)  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  false)  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    true)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	298	None	replace
171	[BUG]  [BUGGY]  Annotations.encode(pString,  false)  {  if(pString.length()  ==  1)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  false)  {  if(pString.length()  ==  1)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  false)  {  if(pString.length()  ==  1)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    true)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	298	None	replace
172	[BUG]  [BUGGY]  annotations.encode(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  annotations.encode(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	annotations.encode(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    true)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	298	None	replace
173	[BUG]  [BUGGY]  Annotation.encode(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation.encode(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation.encode(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    true)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	298	None	replace
174	[BUG]  [BUGGY]  Annotations.encode(pString,  false)  {  if(pString.length()  >=  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  false)  {  if(pString.length()  >=  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  false)  {  if(pString.length()  >=  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    true)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	298	None	replace
175	[BUG]  [BUGGY]  Annotations.encode(pString,  false)  {  if(pString.length()  ==  2)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  false)  {  if(pString.length()  ==  2)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  false)  {  if(pString.length()  ==  2)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    true)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	298	None	replace
176	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone(pString);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone(pString);	  String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	134	None	replace
177	[BUG]  [BUGGY]  if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	134	None	replace
178	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone();	  String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	134	None	replace
179	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone().toString();  if(caverphone!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone().toString();  if(caverphone!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone().toString();  if(caverphone!=  null)  {  return  caverphone(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	134	None	replace
180	[BUG]  [BUGGY]  if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	134	None	replace
181	[BUG]  [BUGGY]  String  caverphone(pString,  null,  false);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  null,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  null,  false);	  String    caverphone(pString,    null);    	non-compiled	[CE]  	93	None	replace
182	[BUG]  [BUGGY]  String  caverphone(pString,  null,  null);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  null,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  null,  null);	  String    caverphone(pString,    null);    	non-compiled	[CE]  	93	None	replace
183	[BUG]  [BUGGY]  String  caverphone(pString,  null,  true);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  null,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  null,  true);	  String    caverphone(pString,    null);    	non-compiled	[CE]  	93	None	replace
184	[BUG]  [BUGGY]  String  caverphone(pString,  null,  0);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  null,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  null,  0);	  String    caverphone(pString,    null);    	non-compiled	[CE]  	93	None	replace
185	[BUG]  [BUGGY]  String  caverphone(pString,  this);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  this);	  String    caverphone(pString,    null);    	non-compiled	[CE]  	93	None	replace
186	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);	  Character.isDigit(pString.charAt(0)))    {    return    pString;    	non-compiled	[CE]  	234	None	replace
187	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }	  Character.isDigit(pString.charAt(0)))    {    return    pString;    	non-compiled	[CE]  	234	None	replace
188	[BUG]  [BUGGY]  String  pString  =  pString.charAt(0);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.charAt(0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.charAt(0);	  Character.isDigit(pString.charAt(0)))    {    return    pString;    	non-compiled	[CE]  	234	None	replace
189	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  this.caverphone(pString);  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  this.caverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0)))  {  return  this.caverphone(pString);	  Character.isDigit(pString.charAt(0)))    {    return    pString;    	non-compiled	[CE]  	234	None	replace
190	[BUG]  [BUGGY]  Character.isDigit(pString.toCharArray()))  {  return  pString;  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.toCharArray()))  {  return  pString;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.toCharArray()))  {  return  pString;	  Character.isDigit(pString.charAt(0)))    {    return    pString;    	non-compiled	[CE]  	234	None	replace
191	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  null;  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  null;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0)))  {  return  null;	  Character.isDigit(pString.charAt(0)))    {    return    pString;    	non-compiled	[CE]  	234	None	replace
192	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  this.caverphone;  }  [CE]  [FE]                                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  this.caverphone;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0)))  {  return  this.caverphone;  }	  Character.isDigit(pString.charAt(0)))    {    return    pString;    	non-compiled	[CE]  	234	None	replace
193	[BUG]  [BUGGY]  Character.isDigit(pString.length()))  {  return  pString;  [CE]  [FE]                                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.length()))  {  return  pString;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.length()))  {  return  pString;	  Character.isDigit(pString.charAt(0)))    {    return    pString;    	non-compiled	[CE]  	234	None	replace
194	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  pString);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this,  pString);	  AnnotationTraversal.traverse(compiler,    pString,    this);    	non-compiled	[CE]  	397	None	replace
195	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  null,  this);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  null,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  null,  this);	  AnnotationTraversal.traverse(compiler,    pString,    this);    	non-compiled	[CE]  	397	None	replace
196	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this,  null);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  pString,  this,  null);	  AnnotationTraversal.traverse(compiler,    pString,    this);    	non-compiled	[CE]  	397	None	replace
197	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this,  false);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  pString,  this,  false);	  AnnotationTraversal.traverse(compiler,    pString,    this);    	non-compiled	[CE]  	397	None	replace
198	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this,  true);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  pString,  this,  true);	  AnnotationTraversal.traverse(compiler,    pString,    this);    	non-compiled	[CE]  	397	None	replace
199	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this,  caver);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this,  caver);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  pString,  this,  caver);	  AnnotationTraversal.traverse(compiler,    pString,    this);    	non-compiled	[CE]  	397	None	replace
200	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  getClass(),  pString,  this);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  getClass(),  pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  getClass(),  pString,  this);	  AnnotationTraversal.traverse(compiler,    pString,    this);    	non-compiled	[CE]  	397	None	replace
201	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  false,  pString,  this);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  false,  pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  false,  pString,  this);	  AnnotationTraversal.traverse(compiler,    pString,    this);    	non-compiled	[CE]  	397	None	replace
202	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	50	None	replace
203	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	50	None	replace
204	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	50	None	replace
205	[BUG]  [BUGGY]  return  this.caverphone(pString,  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	50	None	replace
206	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	50	None	replace
207	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	173	None	replace
208	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	173	None	replace
209	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	173	None	replace
210	[BUG]  [BUGGY]  String  pString  =  pString.toUpperCase();  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toUpperCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toUpperCase();	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	173	None	replace
211	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	173	None	replace
212	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	156	None	replace
213	[BUG]  [BUGGY]  if(cmv!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cmv!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cmv!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	156	None	replace
214	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	247	None	replace
215	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	247	None	replace
216	[BUG]  [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	247	None	replace
217	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	247	None	replace
218	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0)  {  return  pString;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    >=    0)    {    return    pString;    }    	non-compiled	[CE]  	246	None	replace
219	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    >=    0)    {    return    pString;    }    	non-compiled	[CE]  	246	None	replace
220	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >  0)  {  return  pString;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    >=    0)    {    return    pString;    }    	non-compiled	[CE]  	246	None	replace
221	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0)  {  return  pString;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    >=    0)    {    return    pString;    }    	non-compiled	[CE]  	246	None	replace
222	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0)  {  return  pString;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >=  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    >=    0)    {    return    pString;    }    	non-compiled	[CE]  	246	None	replace
223	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ".= "  +  pString;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ".= "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ".= "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString    +   "=   "    +    pString;    }    	non-compiled	[CE]  	9	None	replace
224	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	167	None	replace
225	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	167	None	replace
226	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  null;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  null;  }	  if(pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(1)))    {    return    null;    }    	non-compiled	[CE]  	76	None	replace
227	[BUG]  [BUGGY]  if(pString  ==  null)return  null;  if(pString!=  null)return  null;  return  pString.toLowerCase();  }  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)return  null;  if(pString!=  null)return  null;  return  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)return  null;  if(pString!=  null)return  null;  return  pString.toLowerCase();  }	  return(pString!=    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	12	None	replace
228	[BUG]  [BUGGY]  return(pString!=  null)?  null  :  pString.toUpperCase();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString!=  null)?  null  :  pString.toUpperCase();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString!=  null)?  null  :  pString.toUpperCase();	  return(pString!=    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	12	None	replace
229	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.toLowerCase()  + ", ";  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.toLowerCase()  + ", ";  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.toLowerCase()  + ", ";	  return(pString!=    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	12	None	replace
230	[BUG]  [BUGGY]  return(pString  >=  null)?  null  :  pString.toLowerCase();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  >=  null)?  null  :  pString.toLowerCase();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  >=  null)?  null  :  pString.toLowerCase();	  return(pString!=    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	12	None	replace
231	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  1)  {  return  pString;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  1)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  1)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    1)    {    return    pString;    }    	non-compiled	[CE]  	366	None	replace
232	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  1)  {  return  pString;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  1)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  1)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    1)    {    return    pString;    }    	non-compiled	[CE]  	366	None	replace
233	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  1)  {  return  pString;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  1)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  1)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    1)    {    return    pString;    }    	non-compiled	[CE]  	366	None	replace
234	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  2)  {  return  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  2)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  2)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    1)    {    return    pString;    }    	non-compiled	[CE]  	366	None	replace
235	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  2)  {  return  pString;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  2)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  2)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    1)    {    return    pString;    }    	non-compiled	[CE]  	366	None	replace
236	[BUG]  [BUGGY]  string  pString  =  pString.trim();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  string  pString  =  pString.trim();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	string  pString  =  pString.trim();	  char    pString    =    pString.trim();    	non-compiled	[CE]  	511	None	replace
237	[BUG]  [BUGGY]  Character  pString  =  pString.trim();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character  pString  =  pString.trim();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character  pString  =  pString.trim();	  char    pString    =    pString.trim();    	non-compiled	[CE]  	511	None	replace
238	[BUG]  [BUGGY]  String  c  =  pString.toLowerCase();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  c  =  pString.toLowerCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  c  =  pString.toLowerCase();	  char    c    =    pString.toLowerCase();    	non-compiled	[CE]  	520	None	replace
239	[BUG]  [BUGGY]  char  c  =  pString.toLowerCase(Locale.ENGLISH);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.toLowerCase(Locale.ENGLISH);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.toLowerCase(Locale.ENGLISH);	  char    c    =    pString.toLowerCase();    	non-compiled	[CE]  	520	None	replace
240	[BUG]  [BUGGY]  String  c  =  pString.toUpperCase();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  c  =  pString.toUpperCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  c  =  pString.toUpperCase();	  char    c    =    pString.toLowerCase();    	non-compiled	[CE]  	520	None	replace
241	[BUG]  [BUGGY]  char  c  =  pString.toLowerCase(Locale.getDefault());  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.toLowerCase(Locale.getDefault());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.toLowerCase(Locale.getDefault());	  char    c    =    pString.toLowerCase();    	non-compiled	[CE]  	520	None	replace
242	[BUG]  [BUGGY]  char  c  =  pString.toUpperCase();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.toUpperCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.toUpperCase();	  char    c    =    pString.toLowerCase();    	non-compiled	[CE]  	520	None	replace
243	[BUG]  [BUGGY]  char  c  =  pString.toLowerCase(Locale.US);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.toLowerCase(Locale.US);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.toLowerCase(Locale.US);	  char    c    =    pString.toLowerCase();    	non-compiled	[CE]  	520	None	replace
244	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  encode(pString.toLowerCase());  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  encode(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  encode(pString.toLowerCase());	  return(pString    ==    null)?    null    :    encode(pString);    	non-compiled	[CE]  	270	None	replace
245	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  String.valueOf(pString);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  String.valueOf(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  String.valueOf(pString);	  return(pString    ==    null)?    null    :    encode(pString);    	non-compiled	[CE]  	270	None	replace
246	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  encode(pString.toUpperCase());  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  encode(pString.toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  encode(pString.toUpperCase());	  return(pString    ==    null)?    null    :    encode(pString);    	non-compiled	[CE]  	270	None	replace
247	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  encode(pString,  true);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  encode(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  encode(pString,  true);	  return(pString    ==    null)?    null    :    encode(pString);    	non-compiled	[CE]  	270	None	replace
248	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  encode(pString,  this);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  encode(pString,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  encode(pString,  this);	  return(pString    ==    null)?    null    :    encode(pString);    	non-compiled	[CE]  	270	None	replace
249	[BUG]  [BUGGY]  return(pString!=  null)?  null  :  encode(pString);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString!=  null)?  null  :  encode(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString!=  null)?  null  :  encode(pString);	  return(pString    ==    null)?    null    :    encode(pString);    	non-compiled	[CE]  	270	None	replace
250	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  encode(pString,  false);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  encode(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  encode(pString,  false);	  return(pString    ==    null)?    null    :    encode(pString);    	non-compiled	[CE]  	270	None	replace
251	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  encode(pString.trim());  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  encode(pString.trim());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  encode(pString.trim());	  return(pString    ==    null)?    null    :    encode(pString);    	non-compiled	[CE]  	270	None	replace
252	[BUG]  [BUGGY]  return  super.encode(pString.toLowerCase(),  false);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString.toLowerCase(),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString.toLowerCase(),  false);	  return    super.encode(pString.toLowerCase());    	non-compiled	[CE]  	132	None	replace
253	[BUG]  [BUGGY]  return  super.encode(pString,  this.toLowerCase());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  this.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  this.toLowerCase());	  return    super.encode(pString.toLowerCase());    	non-compiled	[CE]  	132	None	replace
254	[BUG]  [BUGGY]  return  super.encode(pString.toLowerCase(),  true);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString.toLowerCase(),  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString.toLowerCase(),  true);	  return    super.encode(pString.toLowerCase());    	non-compiled	[CE]  	132	None	replace
255	[BUG]  [BUGGY]  return  super.encode(pString.toLowerCase()  +  1);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString.toLowerCase()  +  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString.toLowerCase()  +  1);	  return    super.encode(pString.toLowerCase());    	non-compiled	[CE]  	132	None	replace
256	[BUG]  [BUGGY]  return  super.encode(pString.toUpperCase());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString.toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString.toUpperCase());	  return    super.encode(pString.toLowerCase());    	non-compiled	[CE]  	132	None	replace
257	[BUG]  [BUGGY]  String  pString  =  super.encode(pString.toLowerCase());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  super.encode(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  super.encode(pString.toLowerCase());	  return    super.encode(pString.toLowerCase());    	non-compiled	[CE]  	132	None	replace
258	[BUG]  [BUGGY]  return  super.encode(pString.toLowerCase(),  null);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString.toLowerCase(),  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString.toLowerCase(),  null);	  return    super.encode(pString.toLowerCase());    	non-compiled	[CE]  	132	None	replace
259	[BUG]  [BUGGY]  return  super.encode(pString.toLowerCase(),  this);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString.toLowerCase(),  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString.toLowerCase(),  this);	  return    super.encode(pString.toLowerCase());    	non-compiled	[CE]  	132	None	replace
260	[BUG]  [BUGGY]  String  pString  =  getCamerphone().encode(pString);  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  getCamerphone().encode(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  getCamerphone().encode(pString);	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	354	None	replace
261	[BUG]  [BUGGY]  if(getCamerphone()!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(getCamerphone()!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(getCamerphone()!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	354	None	replace
262	[BUG]  [BUGGY]  if(getCamerphone()!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(getCamerphone()!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(getCamerphone()!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	354	None	replace
263	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	354	None	replace
264	[BUG]  [BUGGY]  if(pString!=  null)  {  return  getCamerphone().encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  getCamerphone().encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  getCamerphone().encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	354	None	replace
265	[BUG]  [BUGGY]  if(pString!=  null)  {  return  getCamerphone().encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  getCamerphone().encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  getCamerphone().encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	354	None	replace
266	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	354	None	replace
267	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	354	None	replace
268	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  pString);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMissingException( " ",  pString);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  	148	None	replace
269	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( "Current  exception: "  +  pString);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( "Current  exception: "  +  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMissingException( "Current  exception: "  +  pString);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  	148	None	replace
270	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode( ");  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode( ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMissingException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode( ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  	148	None	replace
271	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode( "  +  pString  + ") ");  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode( "  +  pString  + ") ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMissingException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode( "  +  pString  + ") ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  	148	None	replace
272	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( ", ");  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( ", ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMissingException( ", ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  	148	None	replace
273	[BUG]  [BUGGY]  return  cacheVersion(pString,  null);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheVersion(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheVersion(pString,  null);	  return    cacheVersion(pString);    	non-compiled	[CE]  	396	None	replace
274	[BUG]  [BUGGY]  return  cacheVersion(pString,  0);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheVersion(pString,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheVersion(pString,  0);	  return    cacheVersion(pString);    	non-compiled	[CE]  	396	None	replace
275	[BUG]  [BUGGY]  return  cacheVersion(pString,  true);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheVersion(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheVersion(pString,  true);	  return    cacheVersion(pString);    	non-compiled	[CE]  	396	None	replace
276	[BUG]  [BUGGY]  return  cacheVersion(pString,  false);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheVersion(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheVersion(pString,  false);	  return    cacheVersion(pString);    	non-compiled	[CE]  	396	None	replace
277	[BUG]  [BUGGY]  return  cacheVersion(String.valueOf(pString));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheVersion(String.valueOf(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheVersion(String.valueOf(pString));	  return    cacheVersion(pString);    	non-compiled	[CE]  	396	None	replace
278	[BUG]  [BUGGY]  return  cacheVersion(pString,  1.0);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheVersion(pString,  1.0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheVersion(pString,  1.0);	  return    cacheVersion(pString);    	non-compiled	[CE]  	396	None	replace
279	[BUG]  [BUGGY]  return  cacheVersion(pString,  StringEncoder.UTF8);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheVersion(pString,  StringEncoder.UTF8);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheVersion(pString,  StringEncoder.UTF8);	  return    cacheVersion(pString);    	non-compiled	[CE]  	396	None	replace
280	[BUG]  [BUGGY]  return  cacheVersion(pString,  StringEncoder.DEFAULT_VERSION);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheVersion(pString,  StringEncoder.DEFAULT_VERSION);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheVersion(pString,  StringEncoder.DEFAULT_VERSION);	  return    cacheVersion(pString);    	non-compiled	[CE]  	396	None	replace
281	[BUG]  [BUGGY]  return  cacheVersion(pString,  StringEncoder.DEFAULT_VALUE);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheVersion(pString,  StringEncoder.DEFAULT_VALUE);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheVersion(pString,  StringEncoder.DEFAULT_VALUE);	  return    cacheVersion(pString);    	non-compiled	[CE]  	396	None	replace
282	[BUG]  [BUGGY]  String  caverphone(pString.toUpperCase(),  true);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toUpperCase(),  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toUpperCase(),  true);	  String    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	82	None	replace
283	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase(),  false,  true);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase(),  false,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase(),  false,  true);	  String    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	82	None	replace
284	[BUG]  [BUGGY]  String  caverphone(pString.toUpperCase(),  false);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toUpperCase(),  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toUpperCase(),  false);	  String    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	82	None	replace
285	[BUG]  [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  -  1),  false);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  -  1),  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.substring(0,  pString.length()  -  1),  false);	  String    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	82	None	replace
286	[BUG]  [BUGGY]  String  caverphone(cString.toLowerCase(),  false);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(cString.toLowerCase(),  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(cString.toLowerCase(),  false);	  String    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	82	None	replace
287	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase(),  false,  null);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase(),  false,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase(),  false,  null);	  String    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	82	None	replace
288	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(1)))  {  return  null;  }  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(1)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(1)))  {  return  null;  }	  if(caverphone(pString)!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	413	None	replace
289	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  null;  [CE]  <identifier>  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  null;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  null;	  if(caverphone(pString)!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	413	None	replace
290	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(1))  {  return  null;  }  [CE]  <identifier>  expected  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(1))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(1))  {  return  null;  }	  if(caverphone(pString)!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	413	None	replace
291	[BUG]  [BUGGY]  Character  c  =  getCaver(pString);  [CE]  <identifier>  expected  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character  c  =  getCaver(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character  c  =  getCaver(pString);	  if(caverphone(pString)!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	413	None	replace
292	[BUG]  [BUGGY]  Context.codeBug();  [CE]  <identifier>  expected  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Context.codeBug();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Context.codeBug();	  if(caverphone(pString)!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	413	None	replace
293	[BUG]  [BUGGY]  Character  c  =  this.caverphone(pString);  [CE]  <identifier>  expected  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character  c  =  this.caverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character  c  =  this.caverphone(pString);	  if(caverphone(pString)!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	413	None	replace
294	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    String    pString    =    pString.toUpperCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	172	None	replace
295	[BUG]  [BUGGY]  return  caverphone(_typeFactory,  null,  pString);  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(_typeFactory,  null,  pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(_typeFactory,  null,  pString);	  return    caverphone(pString,    null,    _typeFactory);    	non-compiled	[CE]  <identifier>  expected	260	None	replace
296	[BUG]  [BUGGY]  return  _typeFactory.caverphone(pString,  null,  caverphone(pString);  [CE]  <identifier>  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _typeFactory.caverphone(pString,  null,  caverphone(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _typeFactory.caverphone(pString,  null,  caverphone(pString);	  return    caverphone(pString,    null,    _typeFactory);    	non-compiled	[CE]  <identifier>  expected	260	None	replace
297	[BUG]  [BUGGY]  return  _typeFactory.encode(pString,  null,  caverphone(pString));  [CE]  <identifier>  expected  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _typeFactory.encode(pString,  null,  caverphone(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _typeFactory.encode(pString,  null,  caverphone(pString));	  return    caverphone(pString,    null,    _typeFactory);    	non-compiled	[CE]  <identifier>  expected	260	None	replace
298	[BUG]  [BUGGY]  return  _typeFactory.caverphone(pString,  null,  caverphone);  [CE]  <identifier>  expected  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _typeFactory.caverphone(pString,  null,  caverphone);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _typeFactory.caverphone(pString,  null,  caverphone);	  return    caverphone(pString,    null,    _typeFactory);    	non-compiled	[CE]  <identifier>  expected	260	None	replace
299	[BUG]  [BUGGY]  return  _typeFactory.encode(pString,  null,  caverphone(pString);  [CE]  <identifier>  expected  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _typeFactory.encode(pString,  null,  caverphone(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _typeFactory.encode(pString,  null,  caverphone(pString);	  return    caverphone(pString,    null,    _typeFactory);    	non-compiled	[CE]  <identifier>  expected	260	None	replace
300	[BUG]  [BUGGY]  return  _typeFactory.casverphone(pString,  null,  caverphone(pString);  [CE]  <identifier>  expected  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _typeFactory.casverphone(pString,  null,  caverphone(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _typeFactory.casverphone(pString,  null,  caverphone(pString);	  return    caverphone(pString,    null,    _typeFactory);    	non-compiled	[CE]  <identifier>  expected	260	None	replace
301	[BUG]  [BUGGY]  return  _typeFactory.caverphone(pString,  null,  caverphone(pString));  [CE]  <identifier>  expected  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _typeFactory.caverphone(pString,  null,  caverphone(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _typeFactory.caverphone(pString,  null,  caverphone(pString));	  return    caverphone(pString,    null,    _typeFactory);    	non-compiled	[CE]  <identifier>  expected	260	None	replace
302	[BUG]  [BUGGY]  return  _typeFactory.verifyValue(pString,  null,  caverphone(pString));  [CE]  <identifier>  expected  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _typeFactory.verifyValue(pString,  null,  caverphone(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _typeFactory.verifyValue(pString,  null,  caverphone(pString));	  return    caverphone(pString,    null,    _typeFactory);    	non-compiled	[CE]  <identifier>  expected	260	None	replace
303	[BUG]  [BUGGY]  return  _typeFactory.construct(pString,  null,  caverphone(pString));  [CE]  <identifier>  expected  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _typeFactory.construct(pString,  null,  caverphone(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _typeFactory.construct(pString,  null,  caverphone(pString));	  return    caverphone(pString,    null,    _typeFactory);    	non-compiled	[CE]  <identifier>  expected	260	None	replace
304	[BUG]  [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toCharArray();    	non-compiled	[CE]  <identifier>  expected	256	None	replace
305	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toCharArray();    	non-compiled	[CE]  <identifier>  expected	256	None	replace
306	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toCharArray();    	non-compiled	[CE]  <identifier>  expected	256	None	replace
307	[BUG]  [BUGGY]  String  pString  =(pString!=  null)?  null  :  pString.toCharArray();  [CE]  <identifier>  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString!=  null)?  null  :  pString.toCharArray();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString!=  null)?  null  :  pString.toCharArray();	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toCharArray();    	non-compiled	[CE]  <identifier>  expected	256	None	replace
308	[BUG]  [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }  [CE]  <identifier>  expected  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toCharArray();    	non-compiled	[CE]  <identifier>  expected	256	None	replace
309	[BUG]  [BUGGY]  if(this.encode(pString)  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }  [CE]  <identifier>  expected  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toCharArray();    	non-compiled	[CE]  <identifier>  expected	256	None	replace
310	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  System.arraycopy(pString,  0,  pString,  0,  pString.length);  }  [CE]  <identifier>  expected  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  System.arraycopy(pString,  0,  pString,  0,  pString.length);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  System.arraycopy(pString,  0,  pString,  0,  pString.length);  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toCharArray();    	non-compiled	[CE]  <identifier>  expected	256	None	replace
311	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  System.arraycopy(pString,  0,  pString,  0,  pString.length);  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  System.arraycopy(pString,  0,  pString,  0,  pString.length);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toCharArray();  System.arraycopy(pString,  0,  pString,  0,  pString.length);  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toCharArray();    	non-compiled	[CE]  	256	None	replace
312	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	460	None	replace
313	[BUG]  [BUGGY]  pendingCaverphones()  {  if(caverphone!=  null)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(caverphone!=  null)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(caverphone!=  null)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	460	None	replace
314	[BUG]  [BUGGY]  pendingCaverphones()  {  if(caverphone  ==  null)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(caverphone  ==  null)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(caverphone  ==  null)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	460	None	replace
315	[BUG]  [BUGGY]  pendingCaverphones()  {  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {	  pendingCaverphones()    {    if(pString!=    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	460	None	replace
316	[BUG]  [BUGGY]  pendingCaverphones()  {  return  String.valueOf(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	460	None	replace
317	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	60	None	replace
318	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	60	None	replace
319	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	60	None	replace
320	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	60	None	replace
321	[BUG]  [BUGGY]  if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(pString!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	41	None	replace
322	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(pString!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	41	None	replace
323	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(pString!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	41	None	replace
324	[BUG]  [BUGGY]  if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(pString!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	41	None	replace
325	[BUG]  [BUGGY]  if(pString.equals( " "))  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.equals( " "))  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.equals( " "))  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(pString!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	41	None	replace
326	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());	  return    caverphone(pString.toLowerCase());    if(pString!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	41	None	replace
327	[BUG]  [BUGGY]  this.caverphone(pString);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  this.caverphone(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	this.caverphone(pString);	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    this.caverphone(pString);    	non-compiled	[CE]  	52	None	replace
328	[BUG]  [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    this.caverphone(pString);    	non-compiled	[CE]  	52	None	replace
329	[BUG]  [BUGGY]  final  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    this.caverphone(pString);    	non-compiled	[CE]  	52	None	replace
330	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  }	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    this.caverphone(pString);    	non-compiled	[CE]  	52	None	replace
331	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  }	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    this.caverphone(pString);    	non-compiled	[CE]  	52	None	replace
332	[BUG]  [BUGGY]  null  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  null  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	null  =(pString  ==  null)?  null  :  pString.toLowerCase();  this.caverphone(pString);	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    this.caverphone(pString);    	non-compiled	[CE]  	52	None	replace
333	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  pString.toLowerCase();  this.caverphone(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  pString.toLowerCase();  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  pString.toLowerCase();  this.caverphone(pString);  }	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    this.caverphone(pString);    	non-compiled	[CE]  	52	None	replace
334	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  pString.toLowerCase();  this.caverphone(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  pString.toLowerCase();  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  pString.toLowerCase();  this.caverphone(pString);  }	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.toLowerCase();    this.caverphone(pString);    	non-compiled	[CE]  	52	None	replace
335	[BUG]  [BUGGY]  Character  <?>  character  =  pString.charAt(0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character  <?>  character  =  pString.charAt(0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character  <?>  character  =  pString.charAt(0);	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	277	None	replace
336	[BUG]  [BUGGY]  return  String.valueOf(pString.charAt(0));  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  String.valueOf(pString.charAt(0));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  String.valueOf(pString.charAt(0));	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	277	None	replace
337	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(pString);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMissingValue(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMissingValue(pString);	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	277	None	replace
338	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMoreGuaranteed();	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	277	None	replace
339	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pString);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcher(pString);	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	277	None	replace
340	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  this.caverphone(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  this.caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  this.caverphone(pString);  }	  Character.isUpperCase(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	20	None	replace
341	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  super.encode(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  super.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  super.encode(pString);  }	  Character.isUpperCase(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	20	None	replace
342	[BUG]  [BUGGY]  Character.isUpperCase(pString.length())  {  return  pString;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.length())  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.length())  {  return  pString;  }	  Character.isUpperCase(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	20	None	replace
343	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  this.caverphone;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  this.caverphone;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  this.caverphone;  }	  Character.isUpperCase(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	20	None	replace
344	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  caverphone;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  caverphone;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  caverphone;  }	  Character.isUpperCase(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	20	None	replace
345	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  this.encode(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  this.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  this.encode(pString);  }	  Character.isUpperCase(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	20	None	replace
346	[BUG]  [BUGGY]  if(pString!=  null)  {  return  String.valueOf(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  String.valueOf(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  String.valueOf(pString);  }	  return    encode(pString);    if(pString    ==    null)    {    if(!pString.equals(   "   "))    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	201	None	replace
347	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  String.valueOf(pString);  }	  return    encode(pString);    if(pString    ==    null)    {    if(!pString.equals(   "   "))    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	201	None	replace
348	[BUG]  [BUGGY]  return  encode(pString,  null);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  null);	  return    encode(pString);    if(pString    ==    null)    {    if(!pString.equals(   "   "))    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	201	None	replace
349	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  encode(pString);  }	  return    encode(pString);    if(pString    ==    null)    {    if(!pString.equals(   "   "))    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	201	None	replace
350	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }	  return    encode(pString);    String    pString    =    getCamerphone().encode(pString);    	non-compiled	[CE]  	194	None	replace
351	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }	  return    encode(pString);    String    pString    =    getCamerphone().encode(pString);    	non-compiled	[CE]  	194	None	replace
352	[BUG]  [BUGGY]  return  encode(pString,  getCamerphone().encode(pString));  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  getCamerphone().encode(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  getCamerphone().encode(pString));	  return    encode(pString);    String    pString    =    getCamerphone().encode(pString);    	non-compiled	[CE]  	194	None	replace
353	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }	  return    encode(pString);    String    pString    =    getCamerphone().encode(pString);    	non-compiled	[CE]  	194	None	replace
354	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  return  getCamerphone().encode(pString);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  return  getCamerphone().encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  return  getCamerphone().encode(pString);  }	  return    encode(pString);    String    pString    =    getCamerphone().encode(pString);    	non-compiled	[CE]  	194	None	replace
355	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	342	None	replace
356	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	342	None	replace
357	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	342	None	replace
358	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString.toLowerCase())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString.toLowerCase())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString.toLowerCase())  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	433	None	replace
359	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString.charAt(0),  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString.charAt(0),  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString.charAt(0),  0)  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	433	None	replace
360	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString.charAt(0),  pString.length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString.charAt(0),  pString.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString.charAt(0),  pString.length())  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	433	None	replace
361	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString.substring(0,  pString.length()  -  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString.substring(0,  pString.length()  -  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString.substring(0,  pString.length()  -  1))  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	433	None	replace
362	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString,  pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString,  pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString,  pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	433	None	replace
363	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString,  charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString,  charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString,  charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	433	None	replace
364	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString.substring(1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString.substring(1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString.substring(1))  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	433	None	replace
365	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString.length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString.length())  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	433	None	replace
366	[BUG]  [BUGGY]  if(caverphone  ==  null)  {  String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString  + ",   "  +  pString;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone  ==  null)  {  String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString  + ",   "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone  ==  null)  {  String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString  + ",   "  +  pString;  }	  if(pString    ==    null)    {    String    pString    =    getCaverphone();    if(pString!=    null)    {    return    pString    +   ",   "    +    pString;    }    	non-compiled	[CE]  	438	None	replace
367	[BUG]  [BUGGY]  if(pString  ==  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(pString    ==    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	292	None	replace
368	[BUG]  [BUGGY]  if(pString  ==  null)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  null;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  null;  }	  if(pString    ==    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	292	None	replace
369	[BUG]  [BUGGY]  if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(pString    ==    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	292	None	replace
370	[BUG]  [BUGGY]  if(pString!=  null)  {  if(!Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(0))  {  return  pString;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  if(!Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(0))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  if(!Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(0))  {  return  pString;  }	  if(pString!=    null)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	348	None	replace
371	[BUG]  [BUGGY]  if(pString!=  null)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }	  if(pString!=    null)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	348	None	replace
372	[BUG]  [BUGGY]  if(pString!=  null)  {  if(!Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  if(!Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  if(!Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }	  if(pString!=    null)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	348	None	replace
373	[BUG]  [BUGGY]  if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }	  if(pString!=    null)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	348	None	replace
374	[BUG]  [BUGGY]  return(this.caverphone(pString,  0)  ==  null);  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString,  0)  ==  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString,  0)  ==  null);	  return(this.caverphone(pString)    ==    null);    	non-compiled	[CE]  	377	None	replace
375	[BUG]  [BUGGY]  return(this.caverphone(pString,  false)  ==  null);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString,  false)  ==  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString,  false)  ==  null);	  return(this.caverphone(pString)    ==    null);    	non-compiled	[CE]  	377	None	replace
376	[BUG]  [BUGGY]  return(this.caverphone(pString,  null)  ==  null);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString,  null)  ==  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString,  null)  ==  null);	  return(this.caverphone(pString)    ==    null);    	non-compiled	[CE]  	377	None	replace
377	[BUG]  [BUGGY]  return(this.caverphone(pString,  true)  ==  null);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString,  true)  ==  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString,  true)  ==  null);	  return(this.caverphone(pString)    ==    null);    	non-compiled	[CE]  	377	None	replace
378	[BUG]  [BUGGY]  return(this.caverphone(pString)  ==  null?  null  :  pString.toLowerCase());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString)  ==  null?  null  :  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString)  ==  null?  null  :  pString.toLowerCase());	  return(this.caverphone(pString)    ==    null);    	non-compiled	[CE]  	377	None	replace
379	[BUG]  [BUGGY]  return(this.caverphone(pString)  ==  null?  null  :  this.caverphone(pString));  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString)  ==  null?  null  :  this.caverphone(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString)  ==  null?  null  :  this.caverphone(pString));	  return(this.caverphone(pString)    ==    null);    	non-compiled	[CE]  	377	None	replace
380	[BUG]  [BUGGY]  return(this.caverphone(pString),  pString);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString),  pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString),  pString);	  return(this.caverphone(pString)    ==    null);    	non-compiled	[CE]  	377	None	replace
381	[BUG]  [BUGGY]  return  encode(getCamerphone().encode(pString));  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(getCamerphone().encode(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(getCamerphone().encode(pString));	  return    encode(pString);    if(pString    ==    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	355	None	replace
382	[BUG]  [BUGGY]  if(getCamerphone()!=  null)  {  return  encode(pString);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(getCamerphone()!=  null)  {  return  encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(getCamerphone()!=  null)  {  return  encode(pString);  }	  return    encode(pString);    if(pString    ==    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	355	None	replace
383	[BUG]  [BUGGY]  if(getCamerphone()!=  null)  {  return  String.valueOf(pString);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(getCamerphone()!=  null)  {  return  String.valueOf(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(getCamerphone()!=  null)  {  return  String.valueOf(pString);  }	  return    encode(pString);    if(pString    ==    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	355	None	replace
384	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  encode(pString);  }	  return    encode(pString);    if(pString    ==    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	355	None	replace
385	[BUG]  [BUGGY]  return  this.caverphone(pString,  null,  false);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  null,  false);	  return    this.caverphone(pString,    false);    	non-compiled	[CE]  	142	None	replace
386	[BUG]  [BUGGY]  return  this.caverphone(pString,  false,  null);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  false,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  false,  null);	  return    this.caverphone(pString,    false);    	non-compiled	[CE]  	142	None	replace
387	[BUG]  [BUGGY]  return  this.caverphone(pString,  false,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  false,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  false,  0);	  return    this.caverphone(pString,    false);    	non-compiled	[CE]  	142	None	replace
388	[BUG]  [BUGGY]  return  this.caverphone(this.pString,  pString,  false);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(this.pString,  pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(this.pString,  pString,  false);	  return    this.caverphone(pString,    false);    	non-compiled	[CE]  	142	None	replace
389	[BUG]  [BUGGY]  return  this.caverphone(pString,  false,  true);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  false,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  false,  true);	  return    this.caverphone(pString,    false);    	non-compiled	[CE]  	142	None	replace
390	[BUG]  [BUGGY]  return  pString.caverphone(this.caverphone(pString,  true);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.caverphone(this.caverphone(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.caverphone(this.caverphone(pString,  true);	  return    this.caverphone(pString,    false);    	non-compiled	[CE]  	142	None	replace
391	[BUG]  [BUGGY]  return  this.caverphone(this.pString,  pString,  true);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(this.pString,  pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(this.pString,  pString,  true);	  return    this.caverphone(pString,    false);    	non-compiled	[CE]  	142	None	replace
392	[BUG]  [BUGGY]  return  pString.caverphone(this.caverphone(pString,  false));  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.caverphone(this.caverphone(pString,  false));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.caverphone(this.caverphone(pString,  false));	  return    this.caverphone(pString,    false);    	non-compiled	[CE]  	142	None	replace
393	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(0));  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(0));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(0));  }	  if(pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(1)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	519	None	replace
394	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0));	  if(pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(1)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	519	None	replace
395	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(1))  {  return  String.valueOf(pString.charAt(0));  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(1))  {  return  String.valueOf(pString.charAt(0));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(1))  {  return  String.valueOf(pString.charAt(0));  }	  if(pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(1)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	519	None	replace
396	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(1));  }	  if(pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(1)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	519	None	replace
397	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(pString!=    null)    {    if(this.caverphone(pString)!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  	56	None	replace
398	[BUG]  [BUGGY]  if(this.caverphone(pString)  ==  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)  ==  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)  ==  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(pString!=    null)    {    if(this.caverphone(pString)!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  	56	None	replace
399	[BUG]  [BUGGY]  if(pString!=  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(pString!=    null)    {    if(this.caverphone(pString)!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  	56	None	replace
400	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(pString!=    null)    {    if(this.caverphone(pString)!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  	56	None	replace
401	[BUG]  [BUGGY]  if(pString  ==  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(pString!=    null)    {    if(this.caverphone(pString)!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  	56	None	replace
402	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "n   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
403	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "true "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "true "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "true "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "n   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
404	[BUG]  [BUGGY]  Parchet.checkState(pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "n   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
405	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "caverphone "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "caverphone "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "caverphone "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "n   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
406	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "com.verphone.caverphone. "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "com.verphone.caverphone. "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "com.verphone.caverphone. "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "n   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
407	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "com.verphone.caverphone.null "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "com.verphone.caverphone.null "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "com.verphone.caverphone.null "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "n   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
408	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "/ "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "/ "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "/ "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	309	None	replace
409	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	309	None	replace
410	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( ". ");  }	  Parchet.checkArgument(!pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	309	None	replace
411	[BUG]  [BUGGY]  CharTypes.encode(pString,  this.caverphone(pString)))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.encode(pString,  this.caverphone(pString)))  {  return  null;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.encode(pString,  this.caverphone(pString)))  {  return  null;	  if(caverphone(pString)    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	412	None	replace
412	[BUG]  [BUGGY]  CharTypes.encode(pString,  this.caverphone(pString)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.encode(pString,  this.caverphone(pString)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.encode(pString,  this.caverphone(pString)))  {  return  null;  }	  if(caverphone(pString)    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	412	None	replace
413	[BUG]  [BUGGY]  return  getCamerphone().encode(pString,  this);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone().encode(pString,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone().encode(pString,  this);	  return    getCamerphone().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	269	None	replace
414	[BUG]  [BUGGY]  return  getCamerphone().encode(pString,  true);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone().encode(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone().encode(pString,  true);	  return    getCamerphone().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	269	None	replace
415	[BUG]  [BUGGY]  return  getCamerphone().encode(pString,  null);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone().encode(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone().encode(pString,  null);	  return    getCamerphone().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	269	None	replace
416	[BUG]  [BUGGY]  return  getCamerphone().encode(pString,  0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone().encode(pString,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone().encode(pString,  0);	  return    getCamerphone().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	269	None	replace
417	[BUG]  [BUGGY]  return  getCamerphone().encode(pString).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone().encode(pString).toLowerCase();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone().encode(pString).toLowerCase();	  return    getCamerphone().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	269	None	replace
418	[BUG]  [BUGGY]  return  getCamerphone().encode(pString,  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone().encode(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone().encode(pString,  false);	  return    getCamerphone().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	269	None	replace
419	[BUG]  [BUGGY]  return  getCamerphone().encodeValue(pString);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone().encodeValue(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone().encodeValue(pString);	  return    getCamerphone().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	269	None	replace
420	[BUG]  [BUGGY]  Encoder.getCurrentName(pString)!=  null;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCurrentName(pString)!=  null;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCurrentName(pString)!=  null;	  Encoder.getCurrentName(pString)    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	367	None	replace
421	[BUG]  [BUGGY]  Encoder.getCurrentName(pString,  this.caverphone)  ==  null;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCurrentName(pString,  this.caverphone)  ==  null;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCurrentName(pString,  this.caverphone)  ==  null;	  Encoder.getCurrentName(pString)    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	367	None	replace
422	[BUG]  [BUGGY]  Encoder.getCurrentName(pString,  caverphone)  ==  null;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCurrentName(pString,  caverphone)  ==  null;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCurrentName(pString,  caverphone)  ==  null;	  Encoder.getCurrentName(pString)    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	367	None	replace
423	[BUG]  [BUGGY]  Encoder.getCurrentName(pString),  this);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCurrentName(pString),  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCurrentName(pString),  this);	  Encoder.getCurrentName(pString)    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	367	None	replace
424	[BUG]  [BUGGY]  Encoder.getCurrentName(pString),  null;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCurrentName(pString),  null;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCurrentName(pString),  null;	  Encoder.getCurrentName(pString)    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	367	None	replace
425	[BUG]  [BUGGY]  Encoder.getCurrentName(pString,  charEncoding)  ==  null;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCurrentName(pString,  charEncoding)  ==  null;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCurrentName(pString,  charEncoding)  ==  null;	  Encoder.getCurrentName(pString)    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	367	None	replace
426	[BUG]  [BUGGY]  Encoder.getCurrentName(pString,  this.caverphone);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCurrentName(pString,  this.caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCurrentName(pString,  this.caverphone);	  Encoder.getCurrentName(pString)    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	367	None	replace
427	[BUG]  [BUGGY]  Encoder.getCurrentName(pString,  0)  ==  null;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCurrentName(pString,  0)  ==  null;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCurrentName(pString,  0)  ==  null;	  Encoder.getCurrentName(pString)    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	367	None	replace
428	[BUG]  [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	251	None	replace
429	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	251	None	replace
430	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	251	None	replace
431	[BUG]  [BUGGY]  String  pString  =(pString!=  null)?  null  :  pString.substring(0,  pString.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString!=  null)?  null  :  pString.substring(0,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString!=  null)?  null  :  pString.substring(0,  pString.length());	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	251	None	replace
432	[BUG]  [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length()).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length()).toLowerCase();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length()).toLowerCase();	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	251	None	replace
433	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.substring(0,  pString.length());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.substring(0,  pString.length());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.substring(0,  pString.length());  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	251	None	replace
434	[BUG]  [BUGGY]  Encoder.getDefault().encode(pString,  this);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefault().encode(pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefault().encode(pString,  this);	  Encoder.getDefault().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	264	None	replace
435	[BUG]  [BUGGY]  Encoder.getDefault().caverphone(pString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefault().caverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefault().caverphone(pString);	  Encoder.getDefault().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	264	None	replace
436	[BUG]  [BUGGY]  Encoder.getDefault().encode(pString,  caverphone);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefault().encode(pString,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefault().encode(pString,  caverphone);	  Encoder.getDefault().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	264	None	replace
437	[BUG]  [BUGGY]  Encoder.getDefault().encode(pString,  null);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefault().encode(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefault().encode(pString,  null);	  Encoder.getDefault().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	264	None	replace
438	[BUG]  [BUGGY]  Encoder.getDefault().encode(pString,  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefault().encode(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefault().encode(pString,  true);	  Encoder.getDefault().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	264	None	replace
439	[BUG]  [BUGGY]  Encoder.getDefault().encode(pString,  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefault().encode(pString,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefault().encode(pString,  0);	  Encoder.getDefault().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	264	None	replace
440	[BUG]  [BUGGY]  Encoder.getDefault().encode(pString,  false);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefault().encode(pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefault().encode(pString,  false);	  Encoder.getDefault().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	264	None	replace
441	[BUG]  [BUGGY]  Encoder.getDefault().encode(pString,  this.caverphone);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefault().encode(pString,  this.caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefault().encode(pString,  this.caverphone);	  Encoder.getDefault().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	264	None	replace
442	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ",  pString);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMalformedException( " ",  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMalformedException( " ",  pString);	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
443	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( "Current  exception: "  +  pString);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMalformedException( "Current  exception: "  +  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMalformedException( "Current  exception: "  +  pString);	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
444	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode(pString)  in  StringEncoder);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMalformedException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode(pString)  in  StringEncoder);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMalformedException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode(pString)  in  StringEncoder);	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
445	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( "Unexpected  exception: "  +  pString);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMalformedException( "Unexpected  exception: "  +  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMalformedException( "Unexpected  exception: "  +  pString);	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
446	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode( "  +  pString  + ") ");  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMalformedException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode( "  +  pString  + ") ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMalformedException( "Caverphone  is  not  abstract  and  does  not  override  abstract  method  encode( "  +  pString  + ") ");	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
447	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  this);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getChronology().encode(pString,  this);	  Annotation    <    String>    pString    =    getChronology().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	399	None	replace
448	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  null);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getChronology().encode(pString,  null);	  Annotation    <    String>    pString    =    getChronology().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	399	None	replace
449	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getCaverphone().encode(pString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getCaverphone().encode(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getCaverphone().encode(pString);	  Annotation    <    String>    pString    =    getChronology().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	399	None	replace
450	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  caverphone);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getChronology().encode(pString,  caverphone);	  Annotation    <    String>    pString    =    getChronology().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	399	None	replace
451	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  true);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getChronology().encode(pString,  true);	  Annotation    <    String>    pString    =    getChronology().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	399	None	replace
452	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  this.caverphone);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  this.caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getChronology().encode(pString,  this.caverphone);	  Annotation    <    String>    pString    =    getChronology().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	399	None	replace
453	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getCurrentChronology().encode(pString);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getCurrentChronology().encode(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getCurrentChronology().encode(pString);	  Annotation    <    String>    pString    =    getChronology().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	399	None	replace
454	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  false);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode(pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getChronology().encode(pString,  false);	  Annotation    <    String>    pString    =    getChronology().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	399	None	replace
455	[BUG]  [BUGGY]  Character.isDigit(pString.length())&&!Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.length())&&!Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.length())&&!Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))&&!Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	500	None	replace
456	[BUG]  [BUGGY]  Constructor  <  String>  caverphone  =  Constructor.getCaver(pString);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone  =  Constructor.getCaver(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone  =  Constructor.getCaver(pString);	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	324	None	replace
457	[BUG]  [BUGGY]  CharacterImpl  caverphone(pString);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharacterImpl  caverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharacterImpl  caverphone(pString);	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	324	None	replace
458	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString);	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	324	None	replace
459	[BUG]  [BUGGY]  String  pString  =  pString.substring(0,  pString.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.substring(0,  pString.length()  -  3);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.substring(0,  pString.length()  -  3);	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	324	None	replace
460	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
461	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
462	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
463	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
464	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(cString.toLowerCase());  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(cString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(cString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	139	None	replace
465	[BUG]  [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString;  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString  ==  null)?  null  :  pString;	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString;    	non-compiled	[CE]  	199	None	replace
466	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString;  }	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString;    	non-compiled	[CE]  	199	None	replace
467	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString;  }	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString;    	non-compiled	[CE]  	199	None	replace
468	[BUG]  [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.toString();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.toString();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString  ==  null)?  null  :  pString.toString();	  return    encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString;    	non-compiled	[CE]  	199	None	replace
469	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.toString();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.toString();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.toString();	  return(pString!=    null)?    null    :    pString.trim();    	non-compiled	[CE]  	37	None	replace
470	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  -  1);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  -  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  -  1);	  return(pString!=    null)?    null    :    pString.trim();    	non-compiled	[CE]  	37	None	replace
471	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  -  2);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  -  2);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  -  2);	  return(pString!=    null)?    null    :    pString.trim();    	non-compiled	[CE]  	37	None	replace
472	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(1);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.substring(1);	  return(pString!=    null)?    null    :    pString.trim();    	non-compiled	[CE]  	37	None	replace
473	[BUG]  [BUGGY]  CharTypes.encode(pString,  this.caverphone(pString)))  {  return  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.encode(pString,  this.caverphone(pString)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.encode(pString,  this.caverphone(pString)))  {  return  pString;  }	  if(caverphone(pString)    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	408	None	replace
474	[BUG]  [BUGGY]  CharTypes.encode(pString,  this.caverphone(pString)))  {  return  pString;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.encode(pString,  this.caverphone(pString)))  {  return  pString;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.encode(pString,  this.caverphone(pString)))  {  return  pString;	  if(caverphone(pString)    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	408	None	replace
475	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return  this.caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return  this.caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0)))  {  return  this.caverphone(pString);  }	  if(caverphone(pString)    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	408	None	replace
476	[BUG]  [BUGGY]  CharTypes.encode(pString,  this.caverphone(pString));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.encode(pString,  this.caverphone(pString));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.encode(pString,  this.caverphone(pString));	  if(caverphone(pString)    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	408	None	replace
477	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.length()  +  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.length()  +  1);	  return    caverphone(pString,    0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
478	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.length()  -  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.length()  -  1);	  return    caverphone(pString,    0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
479	[BUG]  [BUGGY]  return  encode(pString,  0,  pString.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  0,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  0,  pString.length());	  return    caverphone(pString,    0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
480	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.length()  +  1,  pString.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.length()  +  1,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.length()  +  1,  pString.length());	  return    caverphone(pString,    0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
481	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.length()  +  2);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.length()  +  2);	  return    caverphone(pString,    0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
482	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.length()  -  2);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.length()  -  2);	  return    caverphone(pString,    0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
483	[BUG]  [BUGGY]  return  super.encode(pString,  0,  pString.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  0,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  0,  pString.length());	  return    caverphone(pString,    0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
484	[BUG]  [BUGGY]  String  caverphone(cString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(cString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(cString.toLowerCase());	  String    caverphone(pString.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
485	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase()));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase()));	  String    caverphone(pString.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
486	[BUG]  [BUGGY]  String  cacheverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  cacheverphone(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  cacheverphone(pString.toLowerCase());	  String    caverphone(pString.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
487	[BUG]  [BUGGY]  String  caverphone(null.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(null.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(null.toLowerCase());	  String    caverphone(pString.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
488	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	301	None	replace
489	[BUG]  [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(String  pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	301	None	replace
490	[BUG]  [BUGGY]  final  Annotation  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	301	None	replace
491	[BUG]  [BUGGY]  Annotation  caverphone(int  pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(int  pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(int  pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	301	None	replace
492	[BUG]  [BUGGY]  Annotation  <?>  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <?>  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <?>  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	301	None	replace
493	[BUG]  [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(String  pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	301	None	replace
494	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	301	None	replace
495	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getCaverphone(pString);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getCaverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getCaverphone(pString);	  Annotation    <    String>    pString    =    getCaverphone();    	non-compiled	[CE]  illegal  start  of  expression	400	None	replace
496	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getClass().encode(pString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getClass().encode(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getClass().encode(pString);	  Annotation    <    String>    pString    =    getCaverphone();    	non-compiled	[CE]  illegal  start  of  expression	400	None	replace
497	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getCaverphone().encodeValue(pString);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getCaverphone().encodeValue(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getCaverphone().encodeValue(pString);	  Annotation    <    String>    pString    =    getCaverphone();    	non-compiled	[CE]  illegal  start  of  expression	400	None	replace
498	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getCaverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getCaverphone(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getCaverphone(pString.toLowerCase());	  Annotation    <    String>    pString    =    getCaverphone();    	non-compiled	[CE]  illegal  start  of  expression	400	None	replace
499	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getCaverphone(0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getCaverphone(0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getCaverphone(0);	  Annotation    <    String>    pString    =    getCaverphone();    	non-compiled	[CE]  illegal  start  of  expression	400	None	replace
500	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  this.caverphone();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  this.caverphone();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  this.caverphone();	  Annotation    <    String>    pString    =    getCaverphone();    	non-compiled	[CE]  illegal  start  of  expression	400	None	replace
501	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getCaverphone().toString();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getCaverphone().toString();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getCaverphone().toString();	  Annotation    <    String>    pString    =    getCaverphone();    	non-compiled	[CE]  illegal  start  of  expression	400	None	replace
502	[BUG]  [BUGGY]  if(pString.length()  >  0)  {  return  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  >  0)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  >  0)  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(pString!=    null)    {    if(pString.length()    >    0)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
503	[BUG]  [BUGGY]  String  pString  =  caverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  caverphone(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  caverphone(pString.toLowerCase());	  return    caverphone(pString.toLowerCase());    if(pString!=    null)    {    if(pString.length()    >    0)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
504	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  +  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  +  1);	  return(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
505	[BUG]  [BUGGY]  return(pString!=  null)?  null  :  pString.substring(0,  pString.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString!=  null)?  null  :  pString.substring(0,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString!=  null)?  null  :  pString.substring(0,  pString.length());	  return(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
506	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()).toLowerCase();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()).toLowerCase();	  return(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
507	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  *  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  *  2);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  *  2);	  return(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
508	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  +  2);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.substring(0,  pString.length()  +  2);	  return(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
509	[BUG]  [BUGGY]  char  pString  =  pString.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  pString  =  pString.toUpperCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  pString  =  pString.toUpperCase();	  String    caverphone(pString.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
510	[BUG]  [BUGGY]  String  caverphone(pString.toUpperCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toUpperCase()  +  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toUpperCase()  +  1);	  String    caverphone(pString.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
511	[BUG]  [BUGGY]  String  caverphone(pString.toUpperCase()  + ": ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toUpperCase()  + ": ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toUpperCase()  + ": ");	  String    caverphone(pString.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
512	[BUG]  [BUGGY]  String  caverphone(pString.toUpperCase()  + ", ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toUpperCase()  + ", ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toUpperCase()  + ", ");	  String    caverphone(pString.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
513	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  cmverphone.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  cmverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  cmverphone.encode(pString);  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone    >=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	391	None	replace
514	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  cache.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  cache.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  cache.encode(pString);  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone    >=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	391	None	replace
515	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caver.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caver.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caver.encode(pString);  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone    >=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	391	None	replace
516	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
517	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
518	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
519	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  p.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  p.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  p.toLowerCase();  if(pString  ==  null)  {  return  pString;  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
520	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
521	[BUG]  [BUGGY]  Encoder.isTrue(pString.length()  ==  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.length()  ==  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.length()  ==  1);	  Encoder.isTrue(pString.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  expression	262	None	replace
522	[BUG]  [BUGGY]  Encoder.isTrue(pString.length()  ==  2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.length()  ==  2);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.length()  ==  2);	  Encoder.isTrue(pString.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  expression	262	None	replace
523	[BUG]  [BUGGY]  Encoder.isTrue(pString.length()  <  =  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.length()  <  =  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.length()  <  =  0);	  Encoder.isTrue(pString.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  expression	262	None	replace
524	[BUG]  [BUGGY]  Encoder.isTrue(pString.length()!=  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.length()!=  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.length()!=  1);	  Encoder.isTrue(pString.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  expression	262	None	replace
525	[BUG]  [BUGGY]  Encoder.isTrue(pString.length()  ==  4);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.length()  ==  4);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.length()  ==  4);	  Encoder.isTrue(pString.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  expression	262	None	replace
526	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  Comparerphone  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  Comparerphone  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  Comparerphone  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    Comparerphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	288	None	replace
527	[BUG]  [BUGGY]  if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  Comparerphone  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  Comparerphone  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  Comparerphone  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    Comparerphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	288	None	replace
528	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  Comparerphone  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  Comparerphone  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  Comparerphone  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    Comparerphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	288	None	replace
529	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  Comparerphone  caverphone(pString,  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  Comparerphone  caverphone(pString,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  Comparerphone  caverphone(pString,  pString.toLowerCase());	  return    caverphone(pString.toLowerCase());    Comparerphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	288	None	replace
530	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  Comparerphone  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  Comparerphone  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  Comparerphone  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    Comparerphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	288	None	replace
531	[BUG]  [BUGGY]  return  caverphone(pString.toLowerCase(),  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString.toLowerCase(),  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString.toLowerCase(),  pString.toLowerCase());	  return    caverphone(pString.toLowerCase());    Comparerphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	288	None	replace
532	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
533	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
534	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
535	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
536	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
537	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
538	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
539	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()!=  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()!=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
540	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	384	None	replace
541	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	384	None	replace
542	[BUG]  [BUGGY]  if(getCamerphone()!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(getCamerphone()!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(getCamerphone()!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	384	None	replace
543	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	384	None	replace
544	[BUG]  [BUGGY]  if(this.encode(pString)!=  null)  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)!=  null)  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)!=  null)  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	384	None	replace
545	[BUG]  [BUGGY]  if(getCamerphone()!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(getCamerphone()!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(getCamerphone()!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString  ==  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	384	None	replace
546	[BUG]  [BUGGY]  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	384	None	replace
547	[BUG]  [BUGGY]  enablesCaverphone(pString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  enablesCaverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	enablesCaverphone(pString);	  allowsCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
548	[BUG]  [BUGGY]  allowCaverphone(pString);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  allowCaverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	allowCaverphone(pString);	  allowsCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
549	[BUG]  [BUGGY]  enableCaverphone(pString);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  enableCaverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	enableCaverphone(pString);	  allowsCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
550	[BUG]  [BUGGY]  enablesCaverphone(pString,  null);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  enablesCaverphone(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	enablesCaverphone(pString,  null);	  allowsCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
551	[BUG]  [BUGGY]  allowsCaverphone(pString,  null);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  allowsCaverphone(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	allowsCaverphone(pString,  null);	  allowsCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
552	[BUG]  [BUGGY]  allowCaverphone(pString,  null);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  allowCaverphone(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	allowCaverphone(pString,  null);	  allowsCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
553	[BUG]  [BUGGY]  enablesCaverphone(pString,  true);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  enablesCaverphone(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	enablesCaverphone(pString,  true);	  allowsCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
554	[BUG]  [BUGGY]  allowsCaverphone(pString,  true);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  allowsCaverphone(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	allowsCaverphone(pString,  true);	  allowsCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
555	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	331	None	replace
556	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	331	None	replace
557	[BUG]  [BUGGY]  return  this.encode(pString,  0,  0);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  0,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  0,  0);	  return    this.encode(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
558	[BUG]  [BUGGY]  return  this.encode(pString,  0,  null);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  0,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  0,  null);	  return    this.encode(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
559	[BUG]  [BUGGY]  return  this.encode(pString,  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  1);	  return    this.encode(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
560	[BUG]  [BUGGY]  return  this.encode(pString,  0,  pString.length);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  0,  pString.length);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  0,  pString.length);	  return    this.encode(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
561	[BUG]  [BUGGY]  return  this.encode(pString,  0L);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  0L);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  0L);	  return    this.encode(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
562	[BUG]  [BUGGY]  String  pString  =  pString.length();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.length();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.length();	  if(pString.length()    ==    0    ||    Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	414	None	replace
563	[BUG]  [BUGGY]  String  caverphone(pString.length()  0  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  0  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  0  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(pString.length()    ==    0    ||    Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	414	None	replace
564	[BUG]  [BUGGY]  String  caverphone(pString.length()  -  1  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  -  1  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  -  1  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(pString.length()    ==    0    ||    Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	414	None	replace
565	[BUG]  [BUGGY]  String  caverphone(pString.length())  ==  0  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  ==  0  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  ==  0  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(pString.length()    ==    0    ||    Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	414	None	replace
566	[BUG]  [BUGGY]  String  caverphone(pString.length())  ==  0  ||  Character.isUpperCase(pString.charAt(0))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  ==  0  ||  Character.isUpperCase(pString.charAt(0))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  ==  0  ||  Character.isUpperCase(pString.charAt(0))  {  return  null;  }	  if(pString.length()    ==    0    ||    Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	414	None	replace
567	[BUG]  [BUGGY]  String  caverphone(pString.length()  -  1  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  -  1  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  -  1  ||  Character.isUpperCase(pString.charAt(0)))  {  return  null;	  if(pString.length()    ==    0    ||    Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	414	None	replace
568	[BUG]  [BUGGY]  String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
569	[BUG]  [BUGGY]  String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
570	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
571	[BUG]  [BUGGY]  CharTypes.encode(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.encode(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.encode(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
572	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isLetter(pString.charAt(0)))  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isLetter(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(!Character.isLetter(pString.charAt(0)))  {  return  pString;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
573	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
574	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isLowerCase(pString.charAt(0)))  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isLowerCase(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(!Character.isLowerCase(pString.charAt(0)))  {  return  pString;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
575	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  >=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  >=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  >=  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    >=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	316	None	replace
576	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  >=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  >=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  >=  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    >=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	316	None	replace
577	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString.length()  ==  0)  {  return  string.substring(0,  pString.length());  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString.length()  ==  0)  {  return  string.substring(0,  pString.length());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString.length()  ==  0)  {  return  string.substring(0,  pString.length());  }	  pendingCaverphones()    {    if(pString.length()    ==    0)    {    return    string.substring(0,    pString.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	464	None	replace
578	[BUG]  [BUGGY]  pendingCaverphones()  {  return  caverphone.substring(0,  pString.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  return  caverphone.substring(0,  pString.length()  -  1);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  return  caverphone.substring(0,  pString.length()  -  1);  }	  pendingCaverphones()    {    if(pString.length()    ==    0)    {    return    string.substring(0,    pString.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	464	None	replace
579	[BUG]  [BUGGY]  pendingCaverphones()  {  return  string.substring(0,  pString.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  return  string.substring(0,  pString.length()  -  1);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  return  string.substring(0,  pString.length()  -  1);  }	  pendingCaverphones()    {    if(pString.length()    ==    0)    {    return    string.substring(0,    pString.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	464	None	replace
580	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString.length()!=  0)  {  return  string.substring(0,  pString.length());  }  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString.length()!=  0)  {  return  string.substring(0,  pString.length());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString.length()!=  0)  {  return  string.substring(0,  pString.length());  }	  pendingCaverphones()    {    if(pString.length()    ==    0)    {    return    string.substring(0,    pString.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	464	None	replace
581	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString.length()!=  0)  {  return  string.substring(0,  pString.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString.length()!=  0)  {  return  string.substring(0,  pString.length()  -  1);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString.length()!=  0)  {  return  string.substring(0,  pString.length()  -  1);  }	  pendingCaverphones()    {    if(pString.length()    ==    0)    {    return    string.substring(0,    pString.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	464	None	replace
582	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	429	None	replace
583	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString.charAt(0),  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString.charAt(0),  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString.charAt(0),  0))  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	429	None	replace
584	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString.charAt(0),  pString.length()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString.charAt(0),  pString.length()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString.charAt(0),  pString.length()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	429	None	replace
585	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString.charAt(0),  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString.charAt(0),  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString.charAt(0),  '/'))  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	429	None	replace
586	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString,  charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString,  charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString,  charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	429	None	replace
587	[BUG]  [BUGGY]  MutableCharacter.isUpperCase(pString.trim()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableCharacter.isUpperCase(pString.trim()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableCharacter.isUpperCase(pString.trim()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableCharacter.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	429	None	replace
588	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString,  null);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString,  null);	  Annotation    <    String>    caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
589	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString,  false);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString,  false);	  Annotation    <    String>    caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
590	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString,  0);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString,  0);	  Annotation    <    String>    caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
591	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString,  true);  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString,  true);	  Annotation    <    String>    caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
592	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString,  pString);  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString,  pString);	  Annotation    <    String>    caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
593	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString,  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString,  pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString,  pString.toLowerCase());	  Annotation    <    String>    caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
594	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString,  -1);  [CE]  illegal  start  of  expression  [FE]                                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString,  -1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString,  -1);	  Annotation    <    String>    caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
595	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString,  boolean.valueOf(pString.length()));  [CE]  illegal  start  of  expression  [FE]                                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString,  boolean.valueOf(pString.length()));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString,  boolean.valueOf(pString.length()));	  Annotation    <    String>    caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
596	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString,  pString.length());  [CE]  illegal  start  of  expression  [FE]                                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString,  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString,  pString.length());	  Annotation    <    String>    caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
597	[BUG]  [BUGGY]  return  cacheverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString.toLowerCase());	  return    caverphone(pString.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
598	[BUG]  [BUGGY]  return  asverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  asverphone(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  asverphone(pString.toLowerCase());	  return    caverphone(pString.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
599	[BUG]  [BUGGY]  return  caverphone(pString,  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  pString.toLowerCase());	  return    caverphone(pString.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
600	[BUG]  [BUGGY]  return  cmverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cmverphone(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cmverphone(pString.toLowerCase());	  return    caverphone(pString.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
601	[BUG]  [BUGGY]  if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
602	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
603	[BUG]  [BUGGY]  if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
604	[BUG]  [BUGGY]  if(pString.length()  >  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  >  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  >  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
605	[BUG]  [BUGGY]  if(pString.equals( " "))  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.equals( " "))  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.equals( " "))  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    String    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
606	[BUG]  [BUGGY]  String  pString  =  super.encode(pString);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  super.encode(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  super.encode(pString);	  return    super.encode(pString,    pString);    	non-compiled	[CE]  illegal  start  of  expression	339	None	replace
607	[BUG]  [BUGGY]  return  super.encode(pString,  '/');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  '/');  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  '/');	  return    super.encode(pString,    pString);    	non-compiled	[CE]  illegal  start  of  expression	339	None	replace
608	[BUG]  [BUGGY]  return  super.encode(pString,  this.charset);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  this.charset);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  this.charset);	  return    super.encode(pString,    pString);    	non-compiled	[CE]  illegal  start  of  expression	339	None	replace
609	[BUG]  [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  0);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone  =  getCaverphone(pString,  0);	  Annotation    caverphone    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
610	[BUG]  [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  true);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone  =  getCaverphone(pString,  true);	  Annotation    caverphone    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
611	[BUG]  [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  false);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone  =  getCaverphone(pString,  false);	  Annotation    caverphone    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
612	[BUG]  [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  null);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone  =  getCaverphone(pString,  null);	  Annotation    caverphone    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
613	[BUG]  [BUGGY]  Annotation  caverphone  =  getCaverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone  =  getCaverphone(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone  =  getCaverphone(pString.toLowerCase());	  Annotation    caverphone    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
614	[BUG]  [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  -1);  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  -1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone  =  getCaverphone(pString,  -1);	  Annotation    caverphone    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
615	[BUG]  [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  1.0);  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  1.0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone  =  getCaverphone(pString,  1.0);	  Annotation    caverphone    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
616	[BUG]  [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  this.encoder);  [CE]  illegal  start  of  expression  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone  =  getCaverphone(pString,  this.encoder);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone  =  getCaverphone(pString,  this.encoder);	  Annotation    caverphone    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
617	[BUG]  [BUGGY]  return  caverphone(pString,  null,  null,  pString.trim());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  null,  pString.trim());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  null,  pString.trim());	  return    caverphone(pString,    null,    pString.trim());    	non-compiled	[CE]  illegal  start  of  expression	483	None	replace
618	[BUG]  [BUGGY]  return  caverphone(pString,  null,  false,  pString.trim());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  false,  pString.trim());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  false,  pString.trim());	  return    caverphone(pString,    null,    pString.trim());    	non-compiled	[CE]  illegal  start  of  expression	483	None	replace
619	[BUG]  [BUGGY]  return  caverphone(pString,  null,  String.valueOf(pString.trim()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  String.valueOf(pString.trim()));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  String.valueOf(pString.trim()));	  return    caverphone(pString,    null,    pString.trim());    	non-compiled	[CE]  illegal  start  of  expression	483	None	replace
620	[BUG]  [BUGGY]  return  caverphone(pString,  null,  null,  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  null,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  null,  pString.toLowerCase());	  return    caverphone(pString,    null,    pString.trim());    	non-compiled	[CE]  illegal  start  of  expression	483	None	replace
621	[BUG]  [BUGGY]  return  caverphone(pString,  null,  0,  pString.trim());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  0,  pString.trim());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  0,  pString.trim());	  return    caverphone(pString,    null,    pString.trim());    	non-compiled	[CE]  illegal  start  of  expression	483	None	replace
622	[BUG]  [BUGGY]  return  caverphone(pString,  null,  null,  pString.length());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  null,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  null,  pString.length());	  return    caverphone(pString,    null,    pString.trim());    	non-compiled	[CE]  illegal  start  of  expression	483	None	replace
623	[BUG]  [BUGGY]  return  caverphone(pString,  null,  null,  pString.trim()).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  null,  pString.trim()).toLowerCase();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  null,  pString.trim()).toLowerCase();	  return    caverphone(pString,    null,    pString.trim());    	non-compiled	[CE]  illegal  start  of  expression	483	None	replace
624	[BUG]  [BUGGY]  return  caverphone(pString,  null,  true,  pString.trim());  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  true,  pString.trim());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  true,  pString.trim());	  return    caverphone(pString,    null,    pString.trim());    	non-compiled	[CE]  illegal  start  of  expression	483	None	replace
625	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  0,  pString.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  0,  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  0,  pString.length());	  CharSequence    caverphone(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
626	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  0,  0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  0,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  0,  0);	  CharSequence    caverphone(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
627	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  0,  pString.length);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  0,  pString.length);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  0,  pString.length);	  CharSequence    caverphone(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
628	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  0L);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  0L);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  0L);	  CharSequence    caverphone(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	223	None	replace
629	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  0,  null);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  0,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  0,  null);	  CharSequence    caverphone(pString,    0);    	non-compiled	[CE]  	223	None	replace
630	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  1);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  1);	  CharSequence    caverphone(pString,    0);    	non-compiled	[CE]  	223	None	replace
631	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  0,  true);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  0,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  0,  true);	  CharSequence    caverphone(pString,    0);    	non-compiled	[CE]  	223	None	replace
632	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone();	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	453	None	replace
633	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone().encode(pString);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone().encode(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone().encode(pString);	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	453	None	replace
634	[BUG]  [BUGGY]  final  Annotation  <  String>  caver  =  getCaverphone();  if(caver!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  <  String>  caver  =  getCaverphone();  if(caver!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  <  String>  caver  =  getCaverphone();  if(caver!=  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	453	None	replace
635	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	453	None	replace
636	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone().encode(pString);  if(caver!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone().encode(pString);  if(caver!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone().encode(pString);  if(caver!=  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	453	None	replace
637	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone().getValue();  if(caver!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone().getValue();  if(caver!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone().getValue();  if(caver!=  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	453	None	replace
638	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString).toLowerCase());  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString).toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.valueOf(pString).toLowerCase());	  return    caverphone(pString,    0,    String.valueOf(pString));    	non-compiled	[CE]  	362	None	replace
639	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString.toLowerCase()));  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString.toLowerCase()));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.valueOf(pString.toLowerCase()));	  return    caverphone(pString,    0,    String.valueOf(pString));    	non-compiled	[CE]  	362	None	replace
640	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString),  null);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString),  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.valueOf(pString),  null);	  return    caverphone(pString,    0,    String.valueOf(pString));    	non-compiled	[CE]  	362	None	replace
641	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString),  0);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString),  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.valueOf(pString),  0);	  return    caverphone(pString,    0,    String.valueOf(pString));    	non-compiled	[CE]  	362	None	replace
642	[BUG]  [BUGGY]  return  caverphone(pString,  null,  String.valueOf(pString));  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  String.valueOf(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  String.valueOf(pString));	  return    caverphone(pString,    0,    String.valueOf(pString));    	non-compiled	[CE]  	362	None	replace
643	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString)+  1);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString)+  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.valueOf(pString)+  1);	  return    caverphone(pString,    0,    String.valueOf(pString));    	non-compiled	[CE]  	362	None	replace
644	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString),  false);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.valueOf(pString),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.valueOf(pString),  false);	  return    caverphone(pString,    0,    String.valueOf(pString));    	non-compiled	[CE]  	362	None	replace
645	[BUG]  [BUGGY]  return  this.caverphone(pString,  0,  String.valueOf(pString));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  0,  String.valueOf(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  0,  String.valueOf(pString));	  return    caverphone(pString,    0,    String.valueOf(pString));    	non-compiled	[CE]  	362	None	replace
646	[BUG]  [BUGGY]  Parchet.checkArgument(pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	271	None	replace
647	[BUG]  [BUGGY]  Parchet.checkArgument(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	271	None	replace
648	[BUG]  [BUGGY]  Parchet.checkArgument(pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	271	None	replace
649	[BUG]  [BUGGY]  Parchet.checkArgument(pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(pString.equals( "null "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	271	None	replace
650	[BUG]  [BUGGY]  Parchet.checkArgument(pString.equals( "n "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(pString.equals( "n "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(pString.equals( "n "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	271	None	replace
651	[BUG]  [BUGGY]  Parchet.checkArgument(pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	271	None	replace
652	[BUG]  [BUGGY]  Parchet.checkArgument(pString.equals( "   ")||  pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(pString.equals( "   ")||  pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(pString.equals( "   ")||  pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(pString.equals(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	271	None	replace
653	[BUG]  [BUGGY]  Encoder.isTrue(pString.endsWith( "Caverphone "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.endsWith( "Caverphone "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.endsWith( "Caverphone "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.endsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	387	None	replace
654	[BUG]  [BUGGY]  Encoder.isTrue(pString.endsWith( ".java "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.endsWith( ".java "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.endsWith( ".java "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.endsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	387	None	replace
655	[BUG]  [BUGGY]  Encoder.isTrue(pString.endsWith( "_ "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.endsWith( "_ "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.endsWith( "_ "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.endsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	387	None	replace
656	[BUG]  [BUGGY]  Encoder.isTrue(pString.endsWith( "caverphone   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.endsWith( "caverphone   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.endsWith( "caverphone   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.endsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	387	None	replace
657	[BUG]  [BUGGY]  Encoder.isTrue(pString.endsWith( "Comparable   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.endsWith( "Comparable   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.endsWith( "Comparable   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.endsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	387	None	replace
658	[BUG]  [BUGGY]  Encoder.isTrue(pString.startsWith( "Caverphone   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.startsWith( "Caverphone   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.startsWith( "Caverphone   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.endsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	387	None	replace
659	[BUG]  [BUGGY]  Encoder.isTrue(pString.endsWith( "cache "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.endsWith( "cache "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.endsWith( "cache "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.endsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	387	None	replace
660	[BUG]  [BUGGY]  return  caverphone(pString,  true,  null,  pString.toLowerCase());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  null,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  null,  pString.toLowerCase());	  return    caverphone(pString,    true,    pString.toLowerCase());    	non-compiled	[CE]  	448	None	replace
661	[BUG]  [BUGGY]  return  caverphone(pString,  true,  false,  pString.toLowerCase());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  false,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  false,  pString.toLowerCase());	  return    caverphone(pString,    true,    pString.toLowerCase());    	non-compiled	[CE]  	448	None	replace
662	[BUG]  [BUGGY]  return  caverphone(pString,  false,  null,  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  null,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  null,  pString.toLowerCase());	  return    caverphone(pString,    true,    pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	448	None	replace
663	[BUG]  [BUGGY]  return  cacheverphone(pString,  false,  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  false,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  false,  pString.toLowerCase());	  return    caverphone(pString,    true,    pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	448	None	replace
664	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
665	[BUG]  [BUGGY]  CharSequence.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
666	[BUG]  [BUGGY]  CharTypes.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
667	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
668	[BUG]  [BUGGY]  Character.isUpperCase(pString.length()))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.length()))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.length()))  {  throw  new  IllegalArgumentException( " ");	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
669	[BUG]  [BUGGY]  CharTypes.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
670	[BUG]  [BUGGY]  return  caverphone(pString,  null,  0,  pString.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  0,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  0,  pString.length());	  return    caverphone(pString,    null,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
671	[BUG]  [BUGGY]  return  caverphone(pString,  null,  pString.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  pString.length()  +  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  pString.length()  +  1);	  return    caverphone(pString,    null,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
672	[BUG]  [BUGGY]  return  caverphone(pString,  null,  String.valueOf(pString.length()));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  String.valueOf(pString.length()));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  String.valueOf(pString.length()));	  return    caverphone(pString,    null,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
673	[BUG]  [BUGGY]  return  caverphone(pString,  null,  false,  pString.length());  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  false,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  false,  pString.length());	  return    caverphone(pString,    null,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
674	[BUG]  [BUGGY]  return  caverphone(pString,  null,  this.encodePath(pString.length()));  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  this.encodePath(pString.length()));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  this.encodePath(pString.length()));	  return    caverphone(pString,    null,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
675	[BUG]  [BUGGY]  return  caverphone(pString,  null,  pString.length(),  false);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  pString.length(),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  pString.length(),  false);	  return    caverphone(pString,    null,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
676	[BUG]  [BUGGY]  return  caverphone(pString,  null,  this.pString.length());  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  this.pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  this.pString.length());	  return    caverphone(pString,    null,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
677	[BUG]  [BUGGY]  String  caverphone(pString.length()  0  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  0  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  0  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0    ||    pString.charAt(0)    ==    '-')    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	462	None	replace
678	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.charAt(0)!=  '-')  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.charAt(0)!=  '-')  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.charAt(0)!=  '-')  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0    ||    pString.charAt(0)    ==    '-')    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	462	None	replace
679	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString.length()!=  0  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString.length()!=  0  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString.length()!=  0  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0    ||    pString.charAt(0)    ==    '-')    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	462	None	replace
680	[BUG]  [BUGGY]  String  pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0    ||    pString.charAt(0)    ==    '-')    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	462	None	replace
681	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString.length()  ==  1  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString.length()  ==  1  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString.length()  ==  1  ||  pString.charAt(0)  ==  '-')  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0    ||    pString.charAt(0)    ==    '-')    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	462	None	replace
682	[BUG]  [BUGGY]  final  Annotation  <  String>  caver  =  getCaverphone();  if(caver  ==  null)  {  return  caverphone.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  <  String>  caver  =  getCaverphone();  if(caver  ==  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  <  String>  caver  =  getCaverphone();  if(caver  ==  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver    ==    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	454	None	replace
683	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caverphone.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver    ==    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	454	None	replace
684	[BUG]  [BUGGY]  char  c  =  pString.charAt(pString.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(pString.length());	  char    c    =    pString.charAt(pString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	509	None	replace
685	[BUG]  [BUGGY]  String  c  =  pString.charAt(pString.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  c  =  pString.charAt(pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  c  =  pString.charAt(pString.length());	  char    c    =    pString.charAt(pString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	509	None	replace
686	[BUG]  [BUGGY]  String  c  =  pString.charAt(pString.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  c  =  pString.charAt(pString.length()  -  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  c  =  pString.charAt(pString.length()  -  1);	  char    c    =    pString.charAt(pString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	509	None	replace
687	[BUG]  [BUGGY]  char  c  =  pString.charAt(pString.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(pString.length()  +  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(pString.length()  +  1);	  char    c    =    pString.charAt(pString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	509	None	replace
688	[BUG]  [BUGGY]  char  c  =  pString.charAt(pString.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(pString.length();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(pString.length();	  char    c    =    pString.charAt(pString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	509	None	replace
689	[BUG]  [BUGGY]  char  c  =  pString.charAt(pString.length()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(pString.length()));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(pString.length()));	  char    c    =    pString.charAt(pString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	509	None	replace
690	[BUG]  [BUGGY]  char  c  =  pString.charAt(pString.length()  *  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(pString.length()  *  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(pString.length()  *  1);	  char    c    =    pString.charAt(pString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	509	None	replace
691	[BUG]  [BUGGY]  char  c  =  pString.charAt(pString.length()  *  2);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(pString.length()  *  2);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(pString.length()  *  2);	  char    c    =    pString.charAt(pString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	509	None	replace
692	[BUG]  [BUGGY]  byte  c  =  pString.charAt(pString.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  byte  c  =  pString.charAt(pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	byte  c  =  pString.charAt(pString.length());	  char    c    =    pString.charAt(pString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	509	None	replace
693	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  encode(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  encode(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  encode(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(caverphone(pString.toLowerCase())!=    null)    {    return    caverphone(pString.toLowerCase());    }    else    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	490	None	replace
694	[BUG]  [BUGGY]  if(pString.equals( " "))  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.equals( " "))  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.equals( " "))  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(caverphone(pString.toLowerCase())!=    null)    {    return    caverphone(pString.toLowerCase());    }    else    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	490	None	replace
695	[BUG]  [BUGGY]  if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  encode(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  encode(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()!=  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  encode(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(caverphone(pString.toLowerCase())!=    null)    {    return    caverphone(pString.toLowerCase());    }    else    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	490	None	replace
696	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return "   ";  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return "   ";  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return "   ";  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return       "   ";    }    	non-compiled	[CE]  illegal  start  of  expression	315	None	replace
697	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.encode(pString);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.encode(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.encode(pString);	  return(pString    ==    null)?    null    :    pString.trim();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
698	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
699	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
700	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
701	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
702	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
703	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
704	[BUG]  [BUGGY]  CharacterImpl  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharacterImpl  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharacterImpl  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  CharacterImpl    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
705	[BUG]  [BUGGY]  CharacterImpl  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharacterImpl  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharacterImpl  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  CharacterImpl    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
706	[BUG]  [BUGGY]  CharacterImpl  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharacterImpl  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharacterImpl  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0))  {  return  null;  }	  CharacterImpl    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
707	[BUG]  [BUGGY]  CharacterImpl  caverphone(pString.length(),  false)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharacterImpl  caverphone(pString.length(),  false)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharacterImpl  caverphone(pString.length(),  false)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  CharacterImpl    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
708	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString    +   ".,   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
709	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString    +   ".,   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
710	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString  + "., "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString  + "., "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString  + "., "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString    +   ".,   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
711	[BUG]  [BUGGY]  validate(pString)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  validate(pString)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	validate(pString)  {  throw  new  IllegalArgumentException( " ");  }	  allows(pString)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	476	None	replace
712	[BUG]  [BUGGY]  allow(pString)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  allow(pString)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	allow(pString)  {  throw  new  IllegalArgumentException( " ");  }	  allows(pString)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	476	None	replace
713	[BUG]  [BUGGY]  ensureCapacity(pString)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  ensureCapacity(pString)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	ensureCapacity(pString)  {  throw  new  IllegalArgumentException( " ");  }	  allows(pString)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	476	None	replace
714	[BUG]  [BUGGY]  accept(pString)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  accept(pString)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	accept(pString)  {  throw  new  IllegalArgumentException( " ");  }	  allows(pString)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	476	None	replace
715	[BUG]  [BUGGY]  enable(pString)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  enable(pString)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	enable(pString)  {  throw  new  IllegalArgumentException( " ");  }	  allows(pString)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	476	None	replace
716	[BUG]  [BUGGY]  parse(pString)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  parse(pString)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	parse(pString)  {  throw  new  IllegalArgumentException( " ");  }	  allows(pString)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	476	None	replace
717	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	throw  new  IllegalArgumentException( " ");	  allows(pString)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	476	None	replace
718	[BUG]  [BUGGY]  enables(pString)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  enables(pString)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	enables(pString)  {  throw  new  IllegalArgumentException( " ");  }	  allows(pString)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	476	None	replace
719	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	159	None	replace
720	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	159	None	replace
721	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  p.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  p.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  p.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	159	None	replace
722	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	159	None	replace
723	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	159	None	replace
724	[BUG]  [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.trim();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString  ==  null)?  null  :  pString.trim();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString  ==  null)?  null  :  pString.trim();	  return    encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.trim();    	non-compiled	[CE]  	197	None	replace
725	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }	  return    encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.trim();    	non-compiled	[CE]  	197	None	replace
726	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.trim();  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.trim();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.trim();  }	  return    encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.trim();    	non-compiled	[CE]  	197	None	replace
727	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }	  return    encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.trim();    	non-compiled	[CE]  	197	None	replace
728	[BUG]  [BUGGY]  String  pString  =(pString!=  null)?  null  :  pString.trim();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =(pString!=  null)?  null  :  pString.trim();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =(pString!=  null)?  null  :  pString.trim();	  return    encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.trim();    	non-compiled	[CE]  	197	None	replace
729	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.trim();  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.trim();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.trim();  }	  return    encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.trim();    	non-compiled	[CE]  	197	None	replace
730	[BUG]  [BUGGY]  return  String.valueOf(pString.charAt(1));  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  String.valueOf(pString.charAt(1));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  String.valueOf(pString.charAt(1));	  if(pString    ==    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	280	None	replace
731	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone().toString();  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone().toString();  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone().toString();  if(caverphone  ==  null)  {  return  caverphone(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	135	None	replace
732	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
733	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone().toCharArray();  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone().toCharArray();  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone().toCharArray();  if(caverphone  ==  null)  {  return  caverphone(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
734	[BUG]  [BUGGY]  CharTypes.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
735	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
736	[BUG]  [BUGGY]  Character.isUpperCase(pString.toLowerCase())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.toLowerCase())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.toLowerCase())  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
737	[BUG]  [BUGGY]  CharSequence.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
738	[BUG]  [BUGGY]  Character.isUpperCase(pString.length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.length())  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
739	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
740	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ".);  }	  Character.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
741	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	245	None	replace
742	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	245	None	replace
743	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	245	None	replace
744	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(pString!=    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	469	None	replace
745	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }	  if(pString!=    null    ||    pString.length()    ==    0)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	244	None	replace
746	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }	  if(pString!=    null    ||    pString.length()    ==    0)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	244	None	replace
747	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()!=  0)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }	  if(pString!=    null    ||    pString.length()    ==    0)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	244	None	replace
748	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }	  if(pString!=    null    ||    pString.length()    ==    0)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	244	None	replace
749	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }	  if(pString!=    null    ||    pString.length()    ==    0)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	244	None	replace
750	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "*   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	475	None	replace
751	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( ".* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( ".* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( ".* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "*   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	475	None	replace
752	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "* "))  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "* "))  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "* "))  {  throw  new  IllegalArgumentException( ". ");  }	  Parchet.checkArgument(!pString.equals(   "*   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	475	None	replace
753	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "* "))  {  throw  new  IllegalArgumentException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "* "))  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "* "))  {  throw  new  IllegalArgumentException( ", ");  }	  Parchet.checkArgument(!pString.equals(   "*   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	475	None	replace
754	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	304	None	replace
755	[BUG]  [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(String  pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	304	None	replace
756	[BUG]  [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString!=  null)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString!=  null)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(String  pString)  {  if(pString!=  null)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	304	None	replace
757	[BUG]  [BUGGY]  Annotation  caverphone(int  pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(int  pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(int  pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	304	None	replace
758	[BUG]  [BUGGY]  final  Annotation  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	304	None	replace
759	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	304	None	replace
760	[BUG]  [BUGGY]  Annotation  <?>  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <?>  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <?>  caverphone(pString)  {  if(pString  ==  null)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString    ==    null)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	304	None	replace
761	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  null,  pString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  null,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  null,  pString);	  AnnotationTraversal.traverse(compiler,    pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	401	None	replace
762	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  pString,  null);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this,  pString,  null);	  AnnotationTraversal.traverse(compiler,    pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	401	None	replace
763	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  pString,  null);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.caverphone,  pString,  null);	  AnnotationTraversal.traverse(compiler,    pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	401	None	replace
764	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.pString,  null);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.pString,  null);	  AnnotationTraversal.traverse(compiler,    pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	401	None	replace
765	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  null);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this,  null);	  AnnotationTraversal.traverse(compiler,    pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	401	None	replace
766	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphones,  pString,  null);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphones,  pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.caverphones,  pString,  null);	  AnnotationTraversal.traverse(compiler,    pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	401	None	replace
767	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  null);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.caverphone,  null);	  AnnotationTraversal.traverse(compiler,    pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	401	None	replace
768	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  return  caverphone(pString.toLowerCase(),  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  return  caverphone(pString.toLowerCase(),  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  return  caverphone(pString.toLowerCase(),  pString.toLowerCase());	  return    caverphone(pString.toLowerCase());    Caverphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
769	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  return  caverphone(pString.toLowerCase()  +  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  return  caverphone(pString.toLowerCase()  +  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  return  caverphone(pString.toLowerCase()  +  pString.toLowerCase());	  return    caverphone(pString.toLowerCase());    Caverphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
770	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  return  caverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  return  caverphone(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  return  caverphone(pString.toLowerCase());	  return    caverphone(pString.toLowerCase());    Caverphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
771	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  Caverphone  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  Caverphone  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  Caverphone  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    Caverphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
772	[BUG]  [BUGGY]  null  caverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  null  caverphone(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	null  caverphone(pString.toLowerCase());	  return    caverphone(pString.toLowerCase());    Caverphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
773	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  return  caverphone(pString,  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  return  caverphone(pString,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  return  caverphone(pString,  pString.toLowerCase());	  return    caverphone(pString.toLowerCase());    Caverphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
774	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  super.encode(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  super.encode(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  super.encode(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    Caverphone    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
775	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  this.caverphone(pString,  false);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  this.caverphone(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  this.caverphone(pString,  false);	  return(pString!=    null)?    null    :    this.caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
776	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  this.caverphone(pString,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  this.caverphone(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  this.caverphone(pString,  true);	  return(pString!=    null)?    null    :    this.caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
777	[BUG]  [BUGGY]  return(this.caverphone!=  null)?  null  :  this.caverphone(pString);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone!=  null)?  null  :  this.caverphone(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone!=  null)?  null  :  this.caverphone(pString);	  return(pString!=    null)?    null    :    this.caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
778	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  this.caverphone(pString,  StringEncoder.UTF8);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  this.caverphone(pString,  StringEncoder.UTF8);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  this.caverphone(pString,  StringEncoder.UTF8);	  return(pString!=    null)?    null    :    this.caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
779	[BUG]  [BUGGY]  return(this.caverphone!=  null)?  null  :  pString;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone!=  null)?  null  :  pString;  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone!=  null)?  null  :  pString;	  return(pString!=    null)?    null    :    this.caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
780	[BUG]  [BUGGY]  return(pString!=  null)?  null  :  this.caverphone(pString,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString!=  null)?  null  :  this.caverphone(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString!=  null)?  null  :  this.caverphone(pString,  false);	  return(pString!=    null)?    null    :    this.caverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
781	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(pString    ==    null)    {    String    caverphone(pString.toLowerCase());    }    else    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	287	None	replace
782	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	326	None	replace
783	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	326	None	replace
784	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	326	None	replace
785	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	326	None	replace
786	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ",   "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ",   "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ",   "  +  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString    +   ",   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
787	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ",   "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ",   "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ",   "  +  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString    +   ",   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
788	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
789	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
790	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
791	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
792	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
793	[BUG]  [BUGGY]  return  caverphone(pString,  null,  true,  pString);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  true,  pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  true,  pString);	  return    caverphone(pString,    true,    pString);    	non-compiled	[CE]  illegal  start  of  expression	449	None	replace
794	[BUG]  [BUGGY]  return  caverphone(pString,  false,  pString.toCharArray());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  pString.toCharArray());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  pString.toCharArray());	  return    caverphone(pString,    true,    pString);    	non-compiled	[CE]  illegal  start  of  expression	449	None	replace
795	[BUG]  [BUGGY]  return  caverphone(pString,  false,  null,  pString);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  null,  pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  null,  pString);	  return    caverphone(pString,    true,    pString);    	non-compiled	[CE]  illegal  start  of  expression	449	None	replace
796	[BUG]  [BUGGY]  return  caverphone(pString,  true,  null,  pString);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  null,  pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  null,  pString);	  return    caverphone(pString,    true,    pString);    	non-compiled	[CE]  illegal  start  of  expression	449	None	replace
797	[BUG]  [BUGGY]  return  caverphone(pString,  true,  false,  pString);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  false,  pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  false,  pString);	  return    caverphone(pString,    true,    pString);    	non-compiled	[CE]  illegal  start  of  expression	449	None	replace
798	[BUG]  [BUGGY]  return  caverphone(pString,  false,  pString.charAt(0));  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  pString.charAt(0));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  pString.charAt(0));	  return    caverphone(pString,    true,    pString);    	non-compiled	[CE]  illegal  start  of  expression	449	None	replace
799	[BUG]  [BUGGY]  CharCase  caverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharCase  caverphone(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharCase  caverphone(pString.toLowerCase());	  char    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	386	None	replace
800	[BUG]  [BUGGY]  Character  caverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character  caverphone(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character  caverphone(pString.toLowerCase());	  char    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	386	None	replace
801	[BUG]  [BUGGY]  CharBuffer  caverphone(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharBuffer  caverphone(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharBuffer  caverphone(pString.toLowerCase());	  char    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	386	None	replace
802	[BUG]  [BUGGY]  String  caverface(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverface(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverface(pString.toLowerCase());	  char    caverphone(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	386	None	replace
803	[BUG]  [BUGGY]  String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
804	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
805	[BUG]  [BUGGY]  String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
806	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isLowerCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isLowerCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(!Character.isLowerCase(pString.charAt(0)))  {  return  null;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
807	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isLetter(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isLetter(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(!Character.isLetter(pString.charAt(0)))  {  return  null;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
808	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
809	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(isUpperCase(pString.charAt(0)))  {  return  null;  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
810	[BUG]  [BUGGY]  CharSequence  caverphone(pString.toCharArray(),  false);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.toCharArray(),  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.toCharArray(),  false);	  CharSequence    caverphone(pString.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
811	[BUG]  [BUGGY]  CharSequence  caverphone(pString.toCharArray(),  true);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.toCharArray(),  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.toCharArray(),  true);	  CharSequence    caverphone(pString.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
812	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  this.toCharArray());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  this.toCharArray());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  this.toCharArray());	  CharSequence    caverphone(pString.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
813	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  String.valueOf(pString.toCharArray()));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  String.valueOf(pString.toCharArray()));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  String.valueOf(pString.toCharArray()));	  CharSequence    caverphone(pString.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
814	[BUG]  [BUGGY]  CharSequence  caverphone(pString.toCharArray(),  null);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.toCharArray(),  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.toCharArray(),  null);	  CharSequence    caverphone(pString.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
815	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  encoder.toCharArray());  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  encoder.toCharArray());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  encoder.toCharArray());	  CharSequence    caverphone(pString.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
816	[BUG]  [BUGGY]  CharSequence  caverphone(cString.toCharArray());  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(cString.toCharArray());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(cString.toCharArray());	  CharSequence    caverphone(pString.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
817	[BUG]  [BUGGY]  CharSequence  caverphone(pString.toCharArray(),  this);  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.toCharArray(),  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.toCharArray(),  this);	  CharSequence    caverphone(pString.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
818	[BUG]  [BUGGY]  if(this.caverphone(pString)  ==  null)  {  if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)  ==  null)  {  if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)  ==  null)  {  if(this.caverphone(pString)  ==  null)  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(pString!=    null)    {    if(this.caverphone(pString)    ==    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	308	None	replace
819	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString);  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(cString);    }    	non-compiled	[CE]  illegal  start  of  expression	323	None	replace
820	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(cString);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(cString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(cString);  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(cString);    }    	non-compiled	[CE]  illegal  start  of  expression	323	None	replace
821	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString);  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(cString);    }    	non-compiled	[CE]  illegal  start  of  expression	323	None	replace
822	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString);  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString);  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(cString);    }    	non-compiled	[CE]  illegal  start  of  expression	323	None	replace
823	[BUG]  [BUGGY]  String  caverphone(pString.length()  0  ||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  0  ||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  0  ||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(pString.length()    ==    0    ||!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	295	None	replace
824	[BUG]  [BUGGY]  String  caverphone(pString.length()  -  1  ||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  -  1  ||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  -  1  ||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(pString.length()    ==    0    ||!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	295	None	replace
825	[BUG]  [BUGGY]  Encoder.getInstance().encode(pString,  this);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encode(pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encode(pString,  this);	  Encoder.getInstance().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	261	None	replace
826	[BUG]  [BUGGY]  Encoder.getInstance().encode(pString,  caverphone);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encode(pString,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encode(pString,  caverphone);	  Encoder.getInstance().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	261	None	replace
827	[BUG]  [BUGGY]  Encoder.getInstance().encode(pString,  null);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encode(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encode(pString,  null);	  Encoder.getInstance().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	261	None	replace
828	[BUG]  [BUGGY]  Encoder.getInstance().caverphone(pString);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().caverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().caverphone(pString);	  Encoder.getInstance().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	261	None	replace
829	[BUG]  [BUGGY]  Encoder.getInstance().encode(pString,  true);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encode(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encode(pString,  true);	  Encoder.getInstance().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	261	None	replace
830	[BUG]  [BUGGY]  Encoder.getInstance().encode(pString,  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encode(pString,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encode(pString,  0);	  Encoder.getInstance().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	261	None	replace
831	[BUG]  [BUGGY]  Encoder.getInstance().encode(pString,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encode(pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encode(pString,  false);	  Encoder.getInstance().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	261	None	replace
832	[BUG]  [BUGGY]  Encoder.getInstance().encode(pString,  this.caverphone);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encode(pString,  this.caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encode(pString,  this.caverphone);	  Encoder.getInstance().encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	261	None	replace
833	[BUG]  [BUGGY]  return  cacheverphone(pString,  true);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  true);	  return    cacheverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	395	None	replace
834	[BUG]  [BUGGY]  return  cacheverphone(pString,  null);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  null);	  return    cacheverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	395	None	replace
835	[BUG]  [BUGGY]  return  cacheverphone(pString,  0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  0);	  return    cacheverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	395	None	replace
836	[BUG]  [BUGGY]  return  cacheverphone(pString,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  false);	  return    cacheverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	395	None	replace
837	[BUG]  [BUGGY]  return  cacheverphone(pString,  String.valueOf(pString));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  String.valueOf(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  String.valueOf(pString));	  return    cacheverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	395	None	replace
838	[BUG]  [BUGGY]  return  cacheverphone(pString,  StringEncoder.UTF8);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  StringEncoder.UTF8);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  StringEncoder.UTF8);	  return    cacheverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	395	None	replace
839	[BUG]  [BUGGY]  return  cacheverphone(pString,  this.encoder);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  this.encoder);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  this.encoder);	  return    cacheverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	395	None	replace
840	[BUG]  [BUGGY]  return  cacheverphone(pString,  StringEncoder.DEFAULT_CUSTOM);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  StringEncoder.DEFAULT_CUSTOM);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  StringEncoder.DEFAULT_CUSTOM);	  return    cacheverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	395	None	replace
841	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(1)))  {  return  pString;  }	  if(pString!=    null    ||    pString.length()    ==    0)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	351	None	replace
842	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  return  pString;  }	  if(pString!=    null    ||    pString.length()    ==    0)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	351	None	replace
843	[BUG]  [BUGGY]  return  caverphone(pString,  null,  false,  pString);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  false,  pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  false,  pString);	  return    caverphone(pString,    false,    pString);    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
844	[BUG]  [BUGGY]  return  caverphone(pString,  false,  pString,  null);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  pString,  null);	  return    caverphone(pString,    false,    pString);    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
845	[BUG]  [BUGGY]  Encoder.getInstance().encodeAsString(pString,  this);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeAsString(pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeAsString(pString,  this);	  Encoder.getInstance().encodeAsString(pString);    	non-compiled	[CE]  illegal  start  of  expression	267	None	replace
846	[BUG]  [BUGGY]  Encoder.getInstance().encodeAsString(pString,  caverphone);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeAsString(pString,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeAsString(pString,  caverphone);	  Encoder.getInstance().encodeAsString(pString);    	non-compiled	[CE]  illegal  start  of  expression	267	None	replace
847	[BUG]  [BUGGY]  Encoder.getInstance().encodeAsCaverphone(pString);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeAsCaverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeAsCaverphone(pString);	  Encoder.getInstance().encodeAsString(pString);    	non-compiled	[CE]  illegal  start  of  expression	267	None	replace
848	[BUG]  [BUGGY]  Encoder.getInstance().encodeAsString(pString,  null);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeAsString(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeAsString(pString,  null);	  Encoder.getInstance().encodeAsString(pString);    	non-compiled	[CE]  	267	None	replace
849	[BUG]  [BUGGY]  Encoder.getInstance().encodeCaverphone(pString);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeCaverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeCaverphone(pString);	  Encoder.getInstance().encodeAsString(pString);    	non-compiled	[CE]  	267	None	replace
850	[BUG]  [BUGGY]  Encoder.getInstance().encodeAsCharacter(pString);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeAsCharacter(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeAsCharacter(pString);	  Encoder.getInstance().encodeAsString(pString);    	non-compiled	[CE]  	267	None	replace
851	[BUG]  [BUGGY]  Encoder.getInstance().encodeAsFunction(pString);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeAsFunction(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeAsFunction(pString);	  Encoder.getInstance().encodeAsString(pString);    	non-compiled	[CE]  	267	None	replace
852	[BUG]  [BUGGY]  final  Annotation  <  String>  caver  =  getCaverphone();  if(caver!=  null)  {  return  caver.encode(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  <  String>  caver  =  getCaverphone();  if(caver!=  null)  {  return  caver.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  <  String>  caver  =  getCaverphone();  if(caver!=  null)  {  return  caver.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	189	None	replace
853	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone().getValue();  if(caver!=  null)  {  return  caver.encode(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone().getValue();  if(caver!=  null)  {  return  caver.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone().getValue();  if(caver!=  null)  {  return  caver.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	189	None	replace
854	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCamerphone();  if(caver!=  null)  {  return  caver.encode(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCamerphone();  if(caver!=  null)  {  return  caver.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCamerphone();  if(caver!=  null)  {  return  caver.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	189	None	replace
855	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    if(!Character.isDigit(pString.charAt(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	346	None	replace
856	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    if(!Character.isDigit(pString.charAt(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	346	None	replace
857	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(2))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(2))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(2))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    if(!Character.isDigit(pString.charAt(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	346	None	replace
858	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))]  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))]  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))]  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    if(!Character.isDigit(pString.charAt(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	346	None	replace
859	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ".);  }	  if(pString!=    null)    {    if(!Character.isDigit(pString.charAt(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	346	None	replace
860	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	187	None	replace
861	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  string.encode(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  string.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  string.encode(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	187	None	replace
862	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  string.encode(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  string.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  string.encode(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone    ==    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	187	None	replace
863	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    String    pString    =    this.caverphone(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	306	None	replace
864	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    String    pString    =    this.caverphone(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	306	None	replace
865	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  this.caverphone(pString);  if(pString  ==  null)  {  return  pString;  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    String    pString    =    this.caverphone(pString);    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	306	None	replace
866	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.class,  pString.length());  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.class,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.class,  pString.length());	  return    caverphone(pString,    0,    String.class);    	non-compiled	[CE]  	361	None	replace
867	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.class,  pString.length);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.class,  pString.length);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.class,  pString.length);	  return    caverphone(pString,    0,    String.class);    	non-compiled	[CE]  	361	None	replace
868	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.class,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.class,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.class,  0);	  return    caverphone(pString,    0,    String.class);    	non-compiled	[CE]  	361	None	replace
869	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.class,  null);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.class,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.class,  null);	  return    caverphone(pString,    0,    String.class);    	non-compiled	[CE]  	361	None	replace
870	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.class,  true);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.class,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.class,  true);	  return    caverphone(pString,    0,    String.class);    	non-compiled	[CE]  	361	None	replace
871	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.class,  pString.toLowerCase());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.class,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.class,  pString.toLowerCase());	  return    caverphone(pString,    0,    String.class);    	non-compiled	[CE]  	361	None	replace
872	[BUG]  [BUGGY]  return  caverphone(pString,  null,  0,  String.class);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  0,  String.class);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  0,  String.class);	  return    caverphone(pString,    0,    String.class);    	non-compiled	[CE]  	361	None	replace
873	[BUG]  [BUGGY]  return  caverphone(pString,  0,  String.class,  Character.class);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  String.class,  Character.class);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  String.class,  Character.class);	  return    caverphone(pString,    0,    String.class);    	non-compiled	[CE]  	361	None	replace
874	[BUG]  [BUGGY]  return  caverphone(pString,  null,  null,  this);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  null,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  null,  this);	  return    caverphone(pString,    null,    this);    	non-compiled	[CE]  	122	None	replace
875	[BUG]  [BUGGY]  return  caverphone(pString,  null,  null,  null);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  null,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  null,  null);	  return    caverphone(pString,    null,    this);    	non-compiled	[CE]  	122	None	replace
876	[BUG]  [BUGGY]  return  caverphone(pString,  null,  this,  0);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  this,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  this,  0);	  return    caverphone(pString,    null,    this);    	non-compiled	[CE]  	122	None	replace
877	[BUG]  [BUGGY]  return  caverphone(pString,  null,  this,  null);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  this,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  this,  null);	  return    caverphone(pString,    null,    this);    	non-compiled	[CE]  	122	None	replace
878	[BUG]  [BUGGY]  return  caverphone(pString,  null,  this,  false);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  this,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  this,  false);	  return    caverphone(pString,    null,    this);    	non-compiled	[CE]  	122	None	replace
879	[BUG]  [BUGGY]  return  caverphone(pString,  null,  this,  true);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  this,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  this,  true);	  return    caverphone(pString,    null,    this);    	non-compiled	[CE]  	122	None	replace
880	[BUG]  [BUGGY]  return  caverphone(pString,  null,  null,  false);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  null,  false);	  return    caverphone(pString,    null,    this);    	non-compiled	[CE]  	122	None	replace
881	[BUG]  [BUGGY]  return  this.caverphone(pString,  null,  this);  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  null,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  null,  this);	  return    caverphone(pString,    null,    this);    	non-compiled	[CE]  	122	None	replace
882	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	365	None	replace
883	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	365	None	replace
884	[BUG]  [BUGGY]  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	365	None	replace
885	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()!=  0)  {  return  pString;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()!=  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	365	None	replace
886	[BUG]  [BUGGY]  if(this.encode(pString)!=  null)  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)!=  null)  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)!=  null)  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	383	None	replace
887	[BUG]  [BUGGY]  if(getCamerphone()!=  null)  {  return  this.encode(pString);  }  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(getCamerphone()!=  null)  {  return  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(getCamerphone()!=  null)  {  return  this.encode(pString);  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    getCamerphone().encode(pString);    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	383	None	replace
888	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  null;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0)))  {  return  null;  }	  Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	230	None	replace
889	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  this.caverphone(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  this.caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0)))  {  return  this.caverphone(pString);  }	  Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	230	None	replace
890	[BUG]  [BUGGY]  Character.isDigit(pString.length()))  {  return  pString;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.length()))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.length()))  {  return  pString;  }	  Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	230	None	replace
891	[BUG]  [BUGGY]  Character.isDigit(pString.toCharArray()))  {  return  pString;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.toCharArray()))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.toCharArray()))  {  return  pString;  }	  Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	230	None	replace
892	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  caverphone;  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0)))  {  return  caverphone;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0)))  {  return  caverphone;  }	  Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	230	None	replace
893	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  &&  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  &&  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  &&  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))||    pString.charAt(0)    ==    '/')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	504	None	replace
894	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  &&  pString.charAt(1)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  &&  pString.charAt(1)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  &&  pString.charAt(1)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))||    pString.charAt(0)    ==    '/')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	504	None	replace
895	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  &&  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  &&  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  &&  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))||    pString.charAt(0)    ==    '/')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	504	None	replace
896	[BUG]  [BUGGY]  CharTypes.isDigit(pString.charAt(0))  &&  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.isDigit(pString.charAt(0))  &&  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.isDigit(pString.charAt(0))  &&  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))||    pString.charAt(0)    ==    '/')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	504	None	replace
897	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  ||  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  ||  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  ||  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))||    pString.charAt(0)    ==    '/')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	504	None	replace
898	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  ||  pString.charAt(1)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  ||  pString.charAt(1)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  ||  pString.charAt(1)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))||    pString.charAt(0)    ==    '/')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	504	None	replace
899	[BUG]  [BUGGY]  Character.isDigit(pString.length())||  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.length())||  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.length())||  pString.charAt(0)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))||    pString.charAt(0)    ==    '/')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	504	None	replace
900	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  ||  pString.charAt(1)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  ||  pString.charAt(1)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  ||  pString.charAt(1)  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))||    pString.charAt(0)    ==    '/')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	504	None	replace
901	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }	  return    this.encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	248	None	replace
902	[BUG]  [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }	  return    this.encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	248	None	replace
903	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	360	None	replace
904	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	360	None	replace
905	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	360	None	replace
906	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ".= "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ".= "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ".= "  +  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString    +   "=   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
907	[BUG]  [BUGGY]  Parchet.checkState(pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "*   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
908	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "* ")||  pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "* ")||  pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "* ")||  pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "*   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
909	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( ".* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( ".* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( ".* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "*   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
910	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "* ")||!pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "* ")||!pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "* ")||!pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "*   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
911	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "/ "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "/ "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "/ "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "*   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
912	[BUG]  [BUGGY]  Parchet.checkState(!pString.startsWith( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.startsWith( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.startsWith( "* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   "*   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
913	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString);  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
914	[BUG]  [BUGGY]  Class  <?>  caverphone  =  getCaverphone(pString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Class  <?>  caverphone  =  getCaverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Class  <?>  caverphone  =  getCaverphone(pString);	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
915	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
916	[BUG]  [BUGGY]  Class  <?>  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Class  <?>  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Class  <?>  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString);  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
917	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  2));  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  2));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  2));  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
918	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  new  Comparable  <  String>());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  new  Comparable  <  String>());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.caverphone,  new  Comparable  <  String>());	  AnnotationTraversal.traverse(compiler,    pString,    new    Comparable    <    String>());    	non-compiled	[CE]  illegal  start  of  expression	398	None	replace
919	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  null,  new  Comparable  <  String>());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  null,  new  Comparable  <  String>());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  null,  new  Comparable  <  String>());	  AnnotationTraversal.traverse(compiler,    pString,    new    Comparable    <    String>());    	non-compiled	[CE]  illegal  start  of  expression	398	None	replace
920	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.pString,  new  Comparable  <  String>());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.pString,  new  Comparable  <  String>());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.pString,  new  Comparable  <  String>());	  AnnotationTraversal.traverse(compiler,    pString,    new    Comparable    <    String>());    	non-compiled	[CE]  illegal  start  of  expression	398	None	replace
921	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  null,  new  Comparable  <  String>());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  null,  new  Comparable  <  String>());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  pString,  null,  new  Comparable  <  String>());	  AnnotationTraversal.traverse(compiler,    pString,    new    Comparable    <    String>());    	non-compiled	[CE]  illegal  start  of  expression	398	None	replace
922	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this.caverphone(pString));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this.caverphone(pString));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  pString,  this.caverphone(pString));	  AnnotationTraversal.traverse(compiler,    pString,    new    Comparable    <    String>());    	non-compiled	[CE]  illegal  start  of  expression	398	None	replace
923	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  caverphone(pString));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  caverphone(pString));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  pString,  caverphone(pString));	  AnnotationTraversal.traverse(compiler,    pString,    new    Comparable    <    String>());    	non-compiled	[CE]  illegal  start  of  expression	398	None	replace
924	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  new  Comparable  <?>());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  new  Comparable  <?>());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  pString,  new  Comparable  <?>());	  AnnotationTraversal.traverse(compiler,    pString,    new    Comparable    <    String>());    	non-compiled	[CE]  illegal  start  of  expression	398	None	replace
925	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  new  Comparable  <  String>());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  new  Comparable  <  String>());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  new  Comparable  <  String>());	  AnnotationTraversal.traverse(compiler,    pString,    new    Comparable    <    String>());    	non-compiled	[CE]  illegal  start  of  expression	398	None	replace
926	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.indexOf('.',  0));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.indexOf('.',  0));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.indexOf('.',  0));	  return    caverphone(pString,    0,    pString.indexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	441	None	replace
927	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.lastIndexOf('.'));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.lastIndexOf('.'));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.lastIndexOf('.'));	  return    caverphone(pString,    0,    pString.indexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	441	None	replace
928	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.indexOf('.')+  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.indexOf('.')+  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.indexOf('.')+  1);	  return    caverphone(pString,    0,    pString.indexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	441	None	replace
929	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.indexOf('.'),  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.indexOf('.'),  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.indexOf('.'),  0);	  return    caverphone(pString,    0,    pString.indexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	441	None	replace
930	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.charAt(pString.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.charAt(pString.length()  -  1));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.charAt(pString.length()  -  1));	  return    caverphone(pString,    0,    pString.indexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	441	None	replace
931	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.indexOf('.',  -1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.indexOf('.',  -1));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.indexOf('.',  -1));	  return    caverphone(pString,    0,    pString.indexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	441	None	replace
932	[BUG]  [BUGGY]  return  this.caverphone(pString,  0,  pString.indexOf('.'));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  0,  pString.indexOf('.'));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  0,  pString.indexOf('.'));	  return    caverphone(pString,    0,    pString.indexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	441	None	replace
933	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.indexOf('.'),  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.indexOf('.'),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.indexOf('.'),  false);	  return    caverphone(pString,    0,    pString.indexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	441	None	replace
934	[BUG]  [BUGGY]  if(pString!=  null)  {  return  pString.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  pString.toLowerCase();  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   ",   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	418	None	replace
935	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  pString.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  pString.toLowerCase();  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   ",   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	418	None	replace
936	[BUG]  [BUGGY]  if(pString!=  null)  {  return  String.valueOf(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  String.valueOf(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  String.valueOf(pString.toLowerCase());  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   ",   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	418	None	replace
937	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  String.valueOf(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  String.valueOf(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  String.valueOf(pString.toLowerCase());  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   ",   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	418	None	replace
938	[BUG]  [BUGGY]  if(pString!=  null)  {  return  pString  + ", "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  pString  + ", "  +  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  pString  + ", "  +  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   ",   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	418	None	replace
939	[BUG]  [BUGGY]  if(pString!=  null)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   ",   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	418	None	replace
940	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	498	None	replace
941	[BUG]  [BUGGY]  CharTypes.encode(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.encode(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.encode(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	498	None	replace
942	[BUG]  [BUGGY]  final  MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	498	None	replace
943	[BUG]  [BUGGY]  MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isDigit(pString.toUpperCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isDigit(pString.toUpperCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isDigit(pString.toUpperCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	498	None	replace
944	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	498	None	replace
945	[BUG]  [BUGGY]  MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	498	None	replace
946	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toUpperCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toUpperCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.toUpperCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	498	None	replace
947	[BUG]  [BUGGY]  Character.toLowerCase(pString)  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.toLowerCase(pString)  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.toLowerCase(pString)  {  if(!Character.isDigit(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	498	None	replace
948	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone();  if(caver  ==  null)  {  return  cavercount.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone();  if(caver  ==  null)  {  return  cavercount.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone();  if(caver  ==  null)  {  return  cavercount.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    cavercount.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	456	None	replace
949	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  cavercount.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  cavercount.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  cavercount.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    cavercount.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	456	None	replace
950	[BUG]  [BUGGY]  final  Annotation  <  String>  caver  =  getCaverphone();  if(caver!=  null)  {  return  cavercount.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  <  String>  caver  =  getCaverphone();  if(caver!=  null)  {  return  cavercount.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  <  String>  caver  =  getCaverphone();  if(caver!=  null)  {  return  cavercount.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver!=    null)    {    return    cavercount.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	456	None	replace
951	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
952	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
953	[BUG]  [BUGGY]  final  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
954	[BUG]  [BUGGY]  char  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());	  return    this.caverphone(pString);    String    pString    =(pString    ==    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
955	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "* ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	497	None	replace
956	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( ": ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( ": ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( ": ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	497	None	replace
957	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( ".: "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( ".: "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( ".: "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	497	None	replace
958	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( ". ")||  pString.startsWith( ".: "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( ". ")||  pString.startsWith( ".: "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( ". ")||  pString.startsWith( ".: "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	497	None	replace
959	[BUG]  [BUGGY]  Parchet.checkArgument(pString.equals( "   ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(pString.equals( "   ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(pString.equals( "   ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	497	None	replace
960	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "n ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "n ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "n ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	497	None	replace
961	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "_ ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "_ ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "_ ")||  pString.startsWith( ": "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	497	None	replace
962	[BUG]  [BUGGY]  return  caverphone(pString,  null,  false,  booleanValues);  [CE]  unclosed  string  literal  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  false,  booleanValues);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  false,  booleanValues);	  return    caverphone(pString,    null,    booleanValues);    	non-compiled	[CE]  unclosed  string  literal	259	None	replace
963	[BUG]  [BUGGY]  return  caverphone(pString,  null,  true,  booleanValues);  [CE]  unclosed  string  literal  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  true,  booleanValues);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  true,  booleanValues);	  return    caverphone(pString,    null,    booleanValues);    	non-compiled	[CE]  unclosed  string  literal	259	None	replace
964	[BUG]  [BUGGY]  return  caverphone(pString,  null,  0,  booleanValues);  [CE]  unclosed  string  literal  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  0,  booleanValues);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  0,  booleanValues);	  return    caverphone(pString,    null,    booleanValues);    	non-compiled	[CE]  unclosed  string  literal	259	None	replace
965	[BUG]  [BUGGY]  return  caverphone(pString,  null,  this.booleanValues);  [CE]  unclosed  string  literal  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  this.booleanValues);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  this.booleanValues);	  return    caverphone(pString,    null,    booleanValues);    	non-compiled	[CE]  unclosed  string  literal	259	None	replace
966	[BUG]  [BUGGY]  return  caverphone(pString,  null,  false,  true);  [CE]  unclosed  string  literal  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  false,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  false,  true);	  return    caverphone(pString,    null,    booleanValues);    	non-compiled	[CE]  unclosed  string  literal	259	None	replace
967	[BUG]  [BUGGY]  return  caverphone(pString,  null,  booleanValues,  false);  [CE]  unclosed  string  literal  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  booleanValues,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  booleanValues,  false);	  return    caverphone(pString,    null,    booleanValues);    	non-compiled	[CE]  unclosed  string  literal	259	None	replace
968	[BUG]  [BUGGY]  return  caverphone(pString,  null,  booleanValues,  true);  [CE]  unclosed  string  literal  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  booleanValues,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  booleanValues,  true);	  return    caverphone(pString,    null,    booleanValues);    	non-compiled	[CE]  unclosed  string  literal	259	None	replace
969	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))&&!Character.isDigit(pString.charAt(2))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))&&!Character.isDigit(pString.charAt(2))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))&&!Character.isDigit(pString.charAt(2))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	341	None	replace
970	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))&&!Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  unclosed  string  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))&&!Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))&&!Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ".);  }	  if(pString    ==    null)    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	341	None	replace
971	[BUG]  [BUGGY]  return  getCamerphone(pString.toLowerCase(),  true);  [CE]  unclosed  string  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString.toLowerCase(),  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString.toLowerCase(),  true);	  return    getCamerphone(pString,    true);    	non-compiled	[CE]  unclosed  string  literal	96	None	replace
972	[BUG]  [BUGGY]  return  getCamerphone(pString,  true,  false);  [CE]  unclosed  string  literal  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  true,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  true,  false);	  return    getCamerphone(pString,    true);    	non-compiled	[CE]  unclosed  string  literal	96	None	replace
973	[BUG]  [BUGGY]  return  getDefaultCamerphone(pString,  true);  [CE]  unclosed  string  literal  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getDefaultCamerphone(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getDefaultCamerphone(pString,  true);	  return    getCamerphone(pString,    true);    	non-compiled	[CE]  unclosed  string  literal	96	None	replace
974	[BUG]  [BUGGY]  return  getCamerphone(encode(pString,  true));  [CE]  unclosed  string  literal  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(encode(pString,  true));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(encode(pString,  true));	  return    getCamerphone(pString,    true);    	non-compiled	[CE]  unclosed  string  literal	96	None	replace
975	[BUG]  [BUGGY]  return  getCamerphone(pString.toLowerCase(),  false);  [CE]  unclosed  string  literal  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString.toLowerCase(),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString.toLowerCase(),  false);	  return    getCamerphone(pString,    true);    	non-compiled	[CE]  unclosed  string  literal	96	None	replace
976	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    caverphone(pString.toLowerCase());    if(pString!=    null)    {    if(pString.length()    ==    0)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  unclosed  string  literal	47	None	replace
977	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(0));  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(0));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(0));  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  illegal  start  of  expression	282	None	replace
978	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	282	None	replace
979	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(0));  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(0));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(0));  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	282	None	replace
980	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	282	None	replace
981	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.substring(0,    pString.length()    -    1));    }    	non-compiled	[CE]  	375	None	replace
982	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.substring(0,    pString.length()    -    1));    }    	non-compiled	[CE]  	375	None	replace
983	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.substring(0,    pString.length()    -    1));    }    	non-compiled	[CE]  	375	None	replace
984	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.substring(0,  pString.length()  -  1));  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.substring(0,    pString.length()    -    1));    }    	non-compiled	[CE]  	375	None	replace
985	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()).toLowerCase());  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()).toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()).toLowerCase());  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.substring(0,    pString.length()    -    1));    }    	non-compiled	[CE]  	375	None	replace
986	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()).toLowerCase());  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()).toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()).toLowerCase());  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.substring(0,    pString.length()    -    1));    }    	non-compiled	[CE]  	375	None	replace
987	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  +  1));  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  +  1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  +  1));  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.substring(0,    pString.length()    -    1));    }    	non-compiled	[CE]  	375	None	replace
988	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  +  1));  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  +  1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.substring(0,  pString.length()  +  1));  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.substring(0,    pString.length()    -    1));    }    	non-compiled	[CE]  	375	None	replace
989	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	415	None	replace
990	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	415	None	replace
991	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	415	None	replace
992	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	415	None	replace
993	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	415	None	replace
994	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	415	None	replace
995	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	415	None	replace
996	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  p  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  p  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  p	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	415	None	replace
997	[BUG]  [BUGGY]  Character.isUpperCase(pString.length())  {  return  String.valueOf(pString.charAt(1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.length())  {  return  String.valueOf(pString.charAt(1));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.length())  {  return  String.valueOf(pString.charAt(1));	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
998	[BUG]  [BUGGY]  Character.isUpperCase(pString.length())  {  return  String.valueOf(pString.charAt(1));  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.length())  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.length())  {  return  String.valueOf(pString.charAt(1));  }	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
999	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1000	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  0);	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1001	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  pString.charAt(1));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  pString.charAt(1));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  pString.charAt(1));	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1002	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  4);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  4);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  4);	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1003	[BUG]  [BUGGY]  Character.isUpperCase(pString.length())  {  return  String.valueOf(pString.charAt(0));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.length())  {  return  String.valueOf(pString.charAt(0));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.length())  {  return  String.valueOf(pString.charAt(0));	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1004	[BUG]  [BUGGY]  return  super.encode(pString,  this.charEncoding);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  this.charEncoding);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  this.charEncoding);	  return    super.encode(pString,    charEncoding);    	non-compiled	[CE]  illegal  start  of  expression	505	None	replace
1005	[BUG]  [BUGGY]  return  super.encode(pString,  0,  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  0,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  0,  0);	  return    super.encode(pString,    charEncoding);    	non-compiled	[CE]  illegal  start  of  expression	505	None	replace
1006	[BUG]  [BUGGY]  return  super.encode(pString,  DEFAULT_QUOTE);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  DEFAULT_QUOTE);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  DEFAULT_QUOTE);	  return    super.encode(pString,    charEncoding);    	non-compiled	[CE]  illegal  start  of  expression	505	None	replace
1007	[BUG]  [BUGGY]  return  super.encode(pString,  CharacterEncoding.UTF8);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  CharacterEncoding.UTF8);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  CharacterEncoding.UTF8);	  return    super.encode(pString,    charEncoding);    	non-compiled	[CE]  illegal  start  of  expression	505	None	replace
1008	[BUG]  [BUGGY]  return  caverphone(pString,  false,  0,  0);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  0,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  0,  0);	  return    caverphone(pString,    false,    0);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1009	[BUG]  [BUGGY]  return  caverphone(pString,  false,  false);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  false);	  return    caverphone(pString,    false,    0);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1010	[BUG]  [BUGGY]  return  caverphone(pString,  true,  0,  0);  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  0,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  0,  0);	  return    caverphone(pString,    false,    0);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1011	[BUG]  [BUGGY]  return  encode(pString,  false,  0);  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  false,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  false,  0);	  return    caverphone(pString,    false,    0);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1012	[BUG]  [BUGGY]  return  caverphone(pString,  false,  1);  [CE]  illegal  start  of  expression  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  1);	  return    caverphone(pString,    false,    0);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1013	[BUG]  [BUGGY]  CharSequence  caverphone('.',  pString);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone('.',  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone('.',  pString);	  CharSequence    caverphone(pString,    '.');    	non-compiled	[CE]  illegal  start  of  expression	492	None	replace
1014	[BUG]  [BUGGY]  final  CharSequence  caverphone(pString,  '.');  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  CharSequence  caverphone(pString,  '.');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  CharSequence  caverphone(pString,  '.');	  CharSequence    caverphone(pString,    '.');    	non-compiled	[CE]  illegal  start  of  expression	492	None	replace
1015	[BUG]  [BUGGY]  String  caverphone(pString,  '.');  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  '.');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  '.');	  CharSequence    caverphone(pString,    '.');    	non-compiled	[CE]  illegal  start  of  expression	492	None	replace
1016	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  '.',  '+');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  '.',  '+');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  '.',  '+');	  CharSequence    caverphone(pString,    '.');    	non-compiled	[CE]  illegal  start  of  expression	492	None	replace
1017	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  '.',  '/');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  '.',  '/');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  '.',  '/');	  CharSequence    caverphone(pString,    '.');    	non-compiled	[CE]  illegal  start  of  expression	492	None	replace
1018	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  '.',  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  '.',  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  '.',  0);	  CharSequence    caverphone(pString,    '.');    	non-compiled	[CE]  illegal  start  of  expression	492	None	replace
1019	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  '.',  '-');  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  '.',  '-');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  '.',  '-');	  CharSequence    caverphone(pString,    '.');    	non-compiled	[CE]  illegal  start  of  expression	492	None	replace
1020	[BUG]  [BUGGY]  char[]  caverphone(pString,  '.');  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char[]  caverphone(pString,  '.');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char[]  caverphone(pString,  '.');	  CharSequence    caverphone(pString,    '.');    	non-compiled	[CE]  illegal  start  of  expression	492	None	replace
1021	[BUG]  [BUGGY]  String  c  =  pString.charAt(0);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  c  =  pString.charAt(0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  c  =  pString.charAt(0);	  char    c    =    pString.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	508	None	replace
1022	[BUG]  [BUGGY]  char  c  =  pString.charAt(0,  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(0,  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(0,  1);	  char    c    =    pString.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	508	None	replace
1023	[BUG]  [BUGGY]  char  c  =  pString.charAt(0,  4);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(0,  4);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(0,  4);	  char    c    =    pString.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	508	None	replace
1024	[BUG]  [BUGGY]  char  c  =  pString.charAt(0,  2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(0,  2);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(0,  2);	  char    c    =    pString.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	508	None	replace
1025	[BUG]  [BUGGY]  char  c  =  pString.charAt(1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(1);	  char    c    =    pString.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	508	None	replace
1026	[BUG]  [BUGGY]  char  c  =  pString.charAt(0,  12);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(0,  12);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(0,  12);	  char    c    =    pString.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	508	None	replace
1027	[BUG]  [BUGGY]  char  c  =  pString.charAt(0,  3);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.charAt(0,  3);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.charAt(0,  3);	  char    c    =    pString.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	508	None	replace
1028	[BUG]  [BUGGY]  char  c  =  pString.toCharArray();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  c  =  pString.toCharArray();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  c  =  pString.toCharArray();	  char    c    =    pString.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	508	None	replace
1029	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	442	None	replace
1030	[BUG]  [BUGGY]  CharSequence  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	442	None	replace
1031	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	442	None	replace
1032	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	442	None	replace
1033	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	442	None	replace
1034	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	442	None	replace
1035	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	442	None	replace
1036	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    >=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1037	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    >=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1038	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    >=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1039	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ").getMessage());  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ").getMessage());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ").getMessage());  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1040	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ").getMessage());  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ").getMessage());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ").getMessage());  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1041	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ").getMessage()  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ").getMessage()  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ").getMessage()	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1042	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver();  if(caver!=  null)  {  return  caver.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver();  if(caver!=  null)  {  return  caver.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver();  if(caver!=  null)  {  return  caver.encode(pString);  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1043	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver();  if(caver!=  null)  {  return  caverphone.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver();  if(caver!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver();  if(caver!=  null)  {  return  caverphone.encode(pString);  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1044	[BUG]  [BUGGY]  Class  <?>  caverphone  =  getCaverphone();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Class  <?>  caverphone  =  getCaverphone();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Class  <?>  caverphone  =  getCaverphone();	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1045	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }	  return    encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1046	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  if(!this.caverphone(pString))  {  return  this.caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  if(!this.caverphone(pString))  {  return  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  if(!this.caverphone(pString))  {  return  this.caverphone(pString);  }	  return    this.caverphone(pString);    if(this.caverphone(pString)!=    null)    {    if(this.caverphone(pString)    ==    null)    {    return    this.caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	305	None	replace
1047	[BUG]  [BUGGY]  if(this.encode(pString)  ==  null)  {  return  this.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)  ==  null)  {  return  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)  ==  null)  {  return  this.encode(pString);  }	  return    this.encode(pString);    if(pString!=    null)    {    return    this.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	422	None	replace
1048	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.toCharArray();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.toCharArray();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.toCharArray();	  return(pString!=    null)?    null    :    pString;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1049	[BUG]  [BUGGY]  return(pString!=  null)?  null  :  pString.toString();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString!=  null)?  null  :  pString.toString();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString!=  null)?  null  :  pString.toString();	  return(pString!=    null)?    null    :    pString;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1050	[BUG]  [BUGGY]  return  caverphone(pString,  false,  pString.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  pString.length()  +  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  pString.length()  +  1);	  return    caverphone(pString,    false,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1051	[BUG]  [BUGGY]  String  pString  =  caverphone(pString,  false,  pString.length());  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  caverphone(pString,  false,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  caverphone(pString,  false,  pString.length());	  return    caverphone(pString,    false,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1052	[BUG]  [BUGGY]  return  this.caverphone(pString,  false,  pString.length());  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  false,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  false,  pString.length());	  return    caverphone(pString,    false,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1053	[BUG]  [BUGGY]  return  encode(pString,  false,  pString.length());  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  false,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  false,  pString.length());	  return    caverphone(pString,    false,    pString.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1054	[BUG]  [BUGGY]  return  cacheverphone(pString,  true,  pString.length());  [CE]  unclosed  string  literal  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  true,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  true,  pString.length());	  return    caverphone(pString,    false,    pString.length());    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
1055	[BUG]  [BUGGY]  return  caverphone(pString,  false,  pString.length()  +  1,  pString.length());  [CE]  unclosed  string  literal  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  pString.length()  +  1,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  pString.length()  +  1,  pString.length());	  return    caverphone(pString,    false,    pString.length());    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
1056	[BUG]  [BUGGY]  return  caverphone(pString.toUpperCase(),  false);  [CE]  unclosed  string  literal  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString.toUpperCase(),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString.toUpperCase(),  false);	  return    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  unclosed  string  literal	131	None	replace
1057	[BUG]  [BUGGY]  return  caverphone(pString,  pString.toLowerCase(),  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  pString.toLowerCase(),  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  pString.toLowerCase(),  true);	  return    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1058	[BUG]  [BUGGY]  return  cacheverphone(pString.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString.toLowerCase(),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString.toLowerCase(),  false);	  return    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1059	[BUG]  [BUGGY]  return  this.caverphone(pString.toLowerCase(),  true);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString.toLowerCase(),  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString.toLowerCase(),  true);	  return    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1060	[BUG]  [BUGGY]  return  cmverphone(pString.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cmverphone(pString.toLowerCase(),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cmverphone(pString.toLowerCase(),  false);	  return    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1061	[BUG]  [BUGGY]  return  cache(pString.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cache(pString.toLowerCase(),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cache(pString.toLowerCase(),  false);	  return    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1062	[BUG]  [BUGGY]  return  encode(pString.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString.toLowerCase(),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString.toLowerCase(),  false);	  return    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1063	[BUG]  [BUGGY]  return  pString.toLowerCase().encode(true);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.toLowerCase().encode(true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.toLowerCase().encode(true);	  return    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1064	[BUG]  [BUGGY]  return  pString.encode(this.charphone);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.encode(this.charphone);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.encode(this.charphone);	  return    this.charphone.encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	435	None	replace
1065	[BUG]  [BUGGY]  return  this.charphone.encode(pString,  0);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.charphone.encode(pString,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.charphone.encode(pString,  0);	  return    this.charphone.encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	435	None	replace
1066	[BUG]  [BUGGY]  return  this.charphone.encode(pString,  null);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.charphone.encode(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.charphone.encode(pString,  null);	  return    this.charphone.encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	435	None	replace
1067	[BUG]  [BUGGY]  return  this.charphone.encode(pString,  true);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.charphone.encode(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.charphone.encode(pString,  true);	  return    this.charphone.encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	435	None	replace
1068	[BUG]  [BUGGY]  return  this.charphone.encode(pString,  false);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.charphone.encode(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.charphone.encode(pString,  false);	  return    this.charphone.encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	435	None	replace
1069	[BUG]  [BUGGY]  return  this.charphone.encode(pString,  this.stringEncoder);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.charphone.encode(pString,  this.stringEncoder);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.charphone.encode(pString,  this.stringEncoder);	  return    this.charphone.encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	435	None	replace
1070	[BUG]  [BUGGY]  return  this.charphone.encode(pString,  this.sourceName);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.charphone.encode(pString,  this.sourceName);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.charphone.encode(pString,  this.sourceName);	  return    this.charphone.encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	435	None	replace
1071	[BUG]  [BUGGY]  String  pString  =  this.charphone.encode(pString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  this.charphone.encode(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  this.charphone.encode(pString);	  return    this.charphone.encode(pString);    	non-compiled	[CE]  illegal  start  of  expression	435	None	replace
1072	[BUG]  [BUGGY]  String  pString  =  new  String(pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  new  String(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  new  String(pString.toLowerCase());	  char    pString    =    pString.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1073	[BUG]  [BUGGY]  String  pString  =  p.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  p.toLowerCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  p.toLowerCase();	  char    pString    =    pString.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1074	[BUG]  [BUGGY]  String  pString  =  this.pString.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  this.pString.toLowerCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  this.pString.toLowerCase();	  char    pString    =    pString.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1075	[BUG]  [BUGGY]  String  pString  =  null.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  null.toLowerCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  null.toLowerCase();	  char    pString    =    pString.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1076	[BUG]  [BUGGY]  String  pString  =  string.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  string.toLowerCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  string.toLowerCase();	  char    pString    =    pString.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1077	[BUG]  [BUGGY]  String  pString  =  type.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  type.toLowerCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  type.toLowerCase();	  char    pString    =    pString.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1078	[BUG]  [BUGGY]  Annotations.encode(pString,  this)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  this)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  this)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    null)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	300	None	replace
1079	[BUG]  [BUGGY]  Annotations.encode(pString,  caverphone)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  caverphone)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  caverphone)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    null)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	300	None	replace
1080	[BUG]  [BUGGY]  Annotations.encode(pString,  caverphones)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  caverphones)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  caverphones)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    null)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	300	None	replace
1081	[BUG]  [BUGGY]  Annotations.encode(pString,  null,  caverphone(pString))  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  null,  caverphone(pString))  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  null,  caverphone(pString))  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    null)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	300	None	replace
1082	[BUG]  [BUGGY]  Annotations.encode(pString,  String.class)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  String.class)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  String.class)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    null)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	300	None	replace
1083	[BUG]  [BUGGY]  Annotations.encode(pString,  this.caverphone)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  this.caverphone)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  this.caverphone)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    null)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	300	None	replace
1084	[BUG]  [BUGGY]  Annotations.encode(pString,  this)  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotations.encode(pString,  this)  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotations.encode(pString,  this)  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }	  Annotations.encode(pString,    null)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	300	None	replace
1085	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ". "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ". "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ". "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   ".,   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	491	None	replace
1086	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ". "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ". "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ". "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   ".,   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	491	None	replace
1087	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ". "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ". "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ". "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   ".,   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	491	None	replace
1088	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ". "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ". "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + ". "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   ".,   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	491	None	replace
1089	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ". "  +  pString;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ". "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ". "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   ".,   "    +    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	491	None	replace
1090	[BUG]  [BUGGY]  CharSequence  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	443	None	replace
1091	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	443	None	replace
1092	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	443	None	replace
1093	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	443	None	replace
1094	[BUG]  [BUGGY]  String  caverphone(pString.length(),  false)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length(),  false)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length(),  false)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	343	None	replace
1095	[BUG]  [BUGGY]  String  caverphone(pString.length(),  true)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length(),  true)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length(),  true)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	343	None	replace
1096	[BUG]  [BUGGY]  String  caverphone(pString.length()  -  1)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  -  1)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  -  1)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	343	None	replace
1097	[BUG]  [BUGGY]  String  caverphone(pString.length(),  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length(),  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length(),  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	343	None	replace
1098	[BUG]  [BUGGY]  String  caverphone(pString,  0,  pString.length())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  0,  pString.length())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  0,  pString.length())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	343	None	replace
1099	[BUG]  [BUGGY]  String  caverphone(pString.length(),  0,  pString.length())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length(),  0,  pString.length())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length(),  0,  pString.length())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	343	None	replace
1100	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(!Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	343	None	replace
1101	[BUG]  [BUGGY]  String  caverphone(pString.length()  +  1)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  +  1)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  +  1)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  String    caverphone(pString.length())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	343	None	replace
1102	[BUG]  [BUGGY]  return  caver(pString,  0,  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  0,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  0,  0);	  return    caver(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1103	[BUG]  [BUGGY]  return  caver(pString,  0,  pString.length);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  0,  pString.length);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  0,  pString.length);	  return    caver(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1104	[BUG]  [BUGGY]  return  caver(pString,  0,  pString.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  0,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  0,  pString.length());	  return    caver(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1105	[BUG]  [BUGGY]  return  caver(pString,  0,  null);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  0,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  0,  null);	  return    caver(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1106	[BUG]  [BUGGY]  return  caver(pString,  0,  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  0,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  0,  true);	  return    caver(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1107	[BUG]  [BUGGY]  return  caver(pString,  0,  String.valueOf(pString.length()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  0,  String.valueOf(pString.length()));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  0,  String.valueOf(pString.length()));	  return    caver(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1108	[BUG]  [BUGGY]  return  caver(pString,  0,  String.valueOf(pString));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  0,  String.valueOf(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  0,  String.valueOf(pString));	  return    caver(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1109	[BUG]  [BUGGY]  return  caver(pString,  0,  StringEncoder.encode(pString));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  0,  StringEncoder.encode(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  0,  StringEncoder.encode(pString));	  return    caver(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1110	[BUG]  [BUGGY]  return  caver(pString,  0,  StringEncoder.isUpperCase(pString));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  0,  StringEncoder.isUpperCase(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  0,  StringEncoder.isUpperCase(pString));	  return    caver(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1111	[BUG]  [BUGGY]  String  pString  =  super.encode(pString,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  super.encode(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  super.encode(pString,  false);	  return    super.encode(pString,    true);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1112	[BUG]  [BUGGY]  return  super.encode(ctxt,  pString,  true);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(ctxt,  pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(ctxt,  pString,  true);	  return    super.encode(pString,    true);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1113	[BUG]  [BUGGY]  return  super.encode(pString,  true,  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  true,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  true,  false);	  return    super.encode(pString,    true);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1114	[BUG]  [BUGGY]  return  super.encode(pString,  true,  null);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  true,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  true,  null);	  return    super.encode(pString,    true);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1115	[BUG]  [BUGGY]  String  pString  =  super.encode(pString,  true);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  super.encode(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  super.encode(pString,  true);	  return    super.encode(pString,    true);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1116	[BUG]  [BUGGY]  return  super.encode(pString,  null,  null);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  null,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  null,  null);	  return    super.encode(pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1117	[BUG]  [BUGGY]  return  super.encode(pString,  null,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  null,  false);	  return    super.encode(pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1118	[BUG]  [BUGGY]  return  super.encode(pString,  null,  0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  null,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  null,  0);	  return    super.encode(pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1119	[BUG]  [BUGGY]  return  super.encode(pString,  null,  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  null,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  null,  true);	  return    super.encode(pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1120	[BUG]  [BUGGY]  return  super.encode(pString,  null,  this);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  null,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  null,  this);	  return    super.encode(pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1121	[BUG]  [BUGGY]  String  pString  =  super.encode(pString,  null);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  super.encode(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  super.encode(pString,  null);	  return    super.encode(pString,    null);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1122	[BUG]  [BUGGY]  if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(cache    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	467	None	replace
1123	[BUG]  [BUGGY]  if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(cache    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	467	None	replace
1124	[BUG]  [BUGGY]  String  pString  =  getCaverphone(pString);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  getCaverphone(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  getCaverphone(pString);	  return    this.caverphone(pString);    String    pString    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1125	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  getCaverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  getCaverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  getCaverphone(pString);  }	  return    this.caverphone(pString);    String    pString    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1126	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  getCaverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  getCaverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  getCaverphone(pString);  }	  return    this.caverphone(pString);    String    pString    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1127	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  return  getCaverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  return  getCaverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  return  getCaverphone(pString);  }	  return    this.caverphone(pString);    String    pString    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1128	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  getCaverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  getCaverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =  getCaverphone(pString);  }	  return    this.caverphone(pString);    String    pString    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1129	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  return  getCaverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  return  getCaverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  return  getCaverphone(pString);  }	  return    this.caverphone(pString);    String    pString    =    getCaverphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1130	[BUG]  [BUGGY]  return  encode(pString.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString.toLowerCase()  +  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString.toLowerCase()  +  1);	  return    encode(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1131	[BUG]  [BUGGY]  return  encode(pString.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString.toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString.toUpperCase());	  return    encode(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1132	[BUG]  [BUGGY]  return  encode(pString.toLowerCase(),  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString.toLowerCase(),  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString.toLowerCase(),  true);	  return    encode(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1133	[BUG]  [BUGGY]  return  encode(pString.toLowerCase()  +  1,  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString.toLowerCase()  +  1,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString.toLowerCase()  +  1,  pString.toLowerCase());	  return    encode(pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1134	[BUG]  [BUGGY]  return  this.encode(pString.toLowerCase());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString.toLowerCase());	  return    encode(pString.toLowerCase());    	non-compiled	[CE]  	133	None	replace
1135	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()!=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	241	None	replace
1136	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()!=    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	241	None	replace
1137	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    this.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	423	None	replace
1138	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    this.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	423	None	replace
1139	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    this.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	423	None	replace
1140	[BUG]  [BUGGY]  if(this.encode(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    this.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	423	None	replace
1141	[BUG]  [BUGGY]  if(pString.length()!=  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()!=  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()!=  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  this.encode(pString);  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    this.encode(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	423	None	replace
1142	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	216	None	replace
1143	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	216	None	replace
1144	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	216	None	replace
1145	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	216	None	replace
1146	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "- ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "- ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "- ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.equals(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	471	None	replace
1147	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "/ ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "/ ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "/ ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.equals(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	471	None	replace
1148	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "n ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "n ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "n ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.equals(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	471	None	replace
1149	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.equals(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	471	None	replace
1150	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( ". ")||  pString.equals( ".- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( ". ")||  pString.equals( ".- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( ". ")||  pString.equals( ".- "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.equals(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	471	None	replace
1151	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( "-* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( "-* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( "-* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.equals(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	471	None	replace
1152	[BUG]  [BUGGY]  return  this.encodeCamerphone(pString,  null);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeCamerphone(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeCamerphone(pString,  null);	  return    this.encodeCamerphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	338	None	replace
1153	[BUG]  [BUGGY]  return  this.encodeCamerphone(pString,  0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeCamerphone(pString,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeCamerphone(pString,  0);	  return    this.encodeCamerphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	338	None	replace
1154	[BUG]  [BUGGY]  return  this.encodeCamerphone(pString,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeCamerphone(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeCamerphone(pString,  true);	  return    this.encodeCamerphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	338	None	replace
1155	[BUG]  [BUGGY]  return  this.encodeCamerphone(pString,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeCamerphone(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeCamerphone(pString,  false);	  return    this.encodeCamerphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	338	None	replace
1156	[BUG]  [BUGGY]  return  this.encodeCamerphone(pString,  0,  0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeCamerphone(pString,  0,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeCamerphone(pString,  0,  0);	  return    this.encodeCamerphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	338	None	replace
1157	[BUG]  [BUGGY]  return  super.encodeCamerphone(pString);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encodeCamerphone(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encodeCamerphone(pString);	  return    this.encodeCamerphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	338	None	replace
1158	[BUG]  [BUGGY]  return  this.encodeCamerphone(pString,  1.0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeCamerphone(pString,  1.0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeCamerphone(pString,  1.0);	  return    this.encodeCamerphone(pString);    	non-compiled	[CE]  illegal  start  of  expression	338	None	replace
1159	[BUG]  [BUGGY]  CharSequence  caverphone(pString.toLowerCase(),  true);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.toLowerCase(),  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.toLowerCase(),  true);	  String    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1160	[BUG]  [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  -  1),  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  -  1),  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.substring(0,  pString.length()  -  1),  true);	  String    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1161	[BUG]  [BUGGY]  char  caverphone(pString.toLowerCase(),  true);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  caverphone(pString.toLowerCase(),  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  caverphone(pString.toLowerCase(),  true);	  String    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1162	[BUG]  [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  -  2),  true);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.substring(0,  pString.length()  -  2),  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.substring(0,  pString.length()  -  2),  true);	  String    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1163	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase()  +  1,  true);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase()  +  1,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase()  +  1,  true);	  String    caverphone(pString.toLowerCase(),    true);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1164	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	459	None	replace
1165	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString!=  null  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString!=  null  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString!=  null  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	459	None	replace
1166	[BUG]  [BUGGY]  pendingCaverphones()  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	459	None	replace
1167	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString.length()  >=  0)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString.length()  >=  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString.length()  >=  0)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	459	None	replace
1168	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString.length()  ==  1)  {  return  String.valueOf(pString);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString.length()  ==  1)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString.length()  ==  1)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	459	None	replace
1169	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	479	None	replace
1170	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	479	None	replace
1171	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( "  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( "  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( "	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	479	None	replace
1172	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	479	None	replace
1173	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	479	None	replace
1174	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	479	None	replace
1175	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	479	None	replace
1176	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	213	None	replace
1177	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.substring(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	434	None	replace
1178	[BUG]  [BUGGY]  MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(2)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(2)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(2)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.substring(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	434	None	replace
1179	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.substring(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	434	None	replace
1180	[BUG]  [BUGGY]  MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(0,  1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(0,  1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(0,  1)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.substring(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	434	None	replace
1181	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(2)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(2)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(2)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.substring(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	434	None	replace
1182	[BUG]  [BUGGY]  CharacterImpl  caver(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharacterImpl  caver(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharacterImpl  caver(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.substring(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	434	None	replace
1183	[BUG]  [BUGGY]  MutableString  caverphone(pString.toLowerCase(),  false)  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString.toLowerCase(),  false)  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString.toLowerCase(),  false)  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.substring(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	434	None	replace
1184	[BUG]  [BUGGY]  MutableString  caverphone(pString.toLowerCase(),  true)  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString.toLowerCase(),  true)  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString.toLowerCase(),  true)  {  if(!Character.isUpperCase(pString.substring(1)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.substring(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	434	None	replace
1185	[BUG]  [BUGGY]  if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(cache    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	481	None	replace
1186	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(cache    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	481	None	replace
1187	[BUG]  [BUGGY]  if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(cache    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	481	None	replace
1188	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	162	None	replace
1189	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  >=  null)  {  return  pString;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  >=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  >=  null)  {  return  pString;  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	162	None	replace
1190	[BUG]  [BUGGY]  return  this.caverphone(pString,  true,  false);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  true,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  true,  false);	  return    caverphone(pString,    true,    false);    	non-compiled	[CE]  	25	None	replace
1191	[BUG]  [BUGGY]  String  pString  =  caverphone(pString,  true,  false);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  caverphone(pString,  true,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  caverphone(pString,  true,  false);	  return    caverphone(pString,    true,    false);    	non-compiled	[CE]  	25	None	replace
1192	[BUG]  [BUGGY]  return  encode(pString,  true,  false);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  true,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  true,  false);	  return    caverphone(pString,    true,    false);    	non-compiled	[CE]  	25	None	replace
1193	[BUG]  [BUGGY]  return  caverphone(pString,  true,  true);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  true);	  return    caverphone(pString,    true,    false);    	non-compiled	[CE]  	25	None	replace
1194	[BUG]  [BUGGY]  parser().encode(pString);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  parser().encode(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	parser().encode(pString);	  pullParser().encode(pString);    	non-compiled	[CE]  	402	None	replace
1195	[BUG]  [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  pullParser().encode(pString);    	non-compiled	[CE]  	402	None	replace
1196	[BUG]  [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  return  caverphone(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  return  caverphone(pString);  }	  pullParser().encode(pString);    	non-compiled	[CE]  	402	None	replace
1197	[BUG]  [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  pullParser().encode(pString);  }	  pullParser().encode(pString);    	non-compiled	[CE]  	402	None	replace
1198	[BUG]  [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  caverphone(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  caverphone(pString);  }	  pullParser().encode(pString);    	non-compiled	[CE]  	402	None	replace
1199	[BUG]  [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  throw  new  IllegalStateException( " ");  }	  pullParser().encode(pString);    	non-compiled	[CE]  	402	None	replace
1200	[BUG]  [BUGGY]  pullParser().encode(pString,  caverphone);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pullParser().encode(pString,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pullParser().encode(pString,  caverphone);	  pullParser().encode(pString);    	non-compiled	[CE]  	402	None	replace
1201	[BUG]  [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  this.caverphone(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  this.caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  pullParser().encode(pString);  }  else  {  this.caverphone(pString);  }	  pullParser().encode(pString);    	non-compiled	[CE]  	402	None	replace
1202	[BUG]  [BUGGY]  return  pString.encode(this,  null);  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.encode(this,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.encode(this,  null);	  return    pString.encode(this);    	non-compiled	[CE]  	436	None	replace
1203	[BUG]  [BUGGY]  return(pString!=  null)?  null  :  pString.encode(this);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString!=  null)?  null  :  pString.encode(this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString!=  null)?  null  :  pString.encode(this);	  return    pString.encode(this);    	non-compiled	[CE]  	436	None	replace
1204	[BUG]  [BUGGY]  return  pString.encode(this,  this);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.encode(this,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.encode(this,  this);	  return    pString.encode(this);    	non-compiled	[CE]  	436	None	replace
1205	[BUG]  [BUGGY]  return  pString.encode(this,  pString);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.encode(this,  pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.encode(this,  pString);	  return    pString.encode(this);    	non-compiled	[CE]  illegal  start  of  expression	436	None	replace
1206	[BUG]  [BUGGY]  return  pString.encode(this,  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.encode(this,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.encode(this,  false);	  return    pString.encode(this);    	non-compiled	[CE]  illegal  start  of  expression	436	None	replace
1207	[BUG]  [BUGGY]  return  pString.encode(this,  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.encode(this,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.encode(this,  true);	  return    pString.encode(this);    	non-compiled	[CE]  illegal  start  of  expression	436	None	replace
1208	[BUG]  [BUGGY]  return  pString.toLowerCase().encode(this);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.toLowerCase().encode(this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.toLowerCase().encode(this);	  return    pString.encode(this);    	non-compiled	[CE]  illegal  start  of  expression	436	None	replace
1209	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }	  Annotation    <    String>    caverphone    =    getCaverphone(pString);    if(caverphone    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1210	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());	  Annotation    <    String>    caverphone    =    getCaverphone(pString);    if(caverphone    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	102	None	replace
1211	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString.toLowerCase());  }	  Annotation    <    String>    caverphone    =    getCaverphone(pString);    if(caverphone    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	102	None	replace
1212	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone  ==  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caverphone    =    getCaverphone(pString);    if(caverphone    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	102	None	replace
1213	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  getCaverphone(pString.toLowerCase());  if(caverphone!=  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caverphone    =    getCaverphone(pString);    if(caverphone    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	102	None	replace
1214	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toUpperCase());  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString.toUpperCase());  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  getCaverphone(pString.toUpperCase());  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }	  Annotation    <    String>    caverphone    =    getCaverphone(pString);    if(caverphone    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	102	None	replace
1215	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caveraudio  ==  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caveraudio  ==  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caveraudio  ==  null)  {  return  caverphone.encode(pString);  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caveraudio!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	390	None	replace
1216	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone();  if(caveraudio!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone();  if(caveraudio!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone();  if(caveraudio!=  null)  {  return  caverphone.encode(pString);  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caveraudio!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	390	None	replace
1217	[BUG]  [BUGGY]  Character.isDigit(pString.toCharArray()))  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.toCharArray()))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.toCharArray()))  {  throw  new  IllegalArgumentException( " ");	  Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	237	None	replace
1218	[BUG]  [BUGGY]  Character.isISOControl(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isISOControl(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isISOControl(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");	  Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	237	None	replace
1219	[BUG]  [BUGGY]  Character.isDigit(pString.length()))  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.length()))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.length()))  {  throw  new  IllegalArgumentException( " ");	  Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	237	None	replace
1220	[BUG]  [BUGGY]  Character.isWhitespace(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isWhitespace(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isWhitespace(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");	  Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	237	None	replace
1221	[BUG]  [BUGGY]  return  caverphone(ctxt,  pString,  false);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(ctxt,  pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(ctxt,  pString,  false);	  return    caverphone(ctxt,    pString,    true);    	non-compiled	[CE]  	318	None	replace
1222	[BUG]  [BUGGY]  return  caverphone(pString,  ctxt,  true);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  ctxt,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  ctxt,  true);	  return    caverphone(ctxt,    pString,    true);    	non-compiled	[CE]  	318	None	replace
1223	[BUG]  [BUGGY]  return  caverphone(ctxt,  null,  pString,  true);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(ctxt,  null,  pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(ctxt,  null,  pString,  true);	  return    caverphone(ctxt,    pString,    true);    	non-compiled	[CE]  	318	None	replace
1224	[BUG]  [BUGGY]  return  cacheverphone(ctxt,  pString,  false);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(ctxt,  pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(ctxt,  pString,  false);	  return    caverphone(ctxt,    pString,    true);    	non-compiled	[CE]  	318	None	replace
1225	[BUG]  [BUGGY]  return  caverphone(ctxt,  pString,  null,  true);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(ctxt,  pString,  null,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(ctxt,  pString,  null,  true);	  return    caverphone(ctxt,    pString,    true);    	non-compiled	[CE]  	318	None	replace
1226	[BUG]  [BUGGY]  return  asverphone(ctxt,  pString,  false);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  asverphone(ctxt,  pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  asverphone(ctxt,  pString,  false);	  return    caverphone(ctxt,    pString,    true);    	non-compiled	[CE]  	318	None	replace
1227	[BUG]  [BUGGY]  return  caverphone(ctxt,  pString,  null,  false);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(ctxt,  pString,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(ctxt,  pString,  null,  false);	  return    caverphone(ctxt,    pString,    true);    	non-compiled	[CE]  	318	None	replace
1228	[BUG]  [BUGGY]  return  cache(ctxt,  pString,  false);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cache(ctxt,  pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cache(ctxt,  pString,  false);	  return    caverphone(ctxt,    pString,    true);    	non-compiled	[CE]  	318	None	replace
1229	[BUG]  [BUGGY]  return  encode(ctxt,  pString,  false);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(ctxt,  pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(ctxt,  pString,  false);	  return    caverphone(ctxt,    pString,    true);    	non-compiled	[CE]  	318	None	replace
1230	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString    +   ".,   "    +    pString;    }    	non-compiled	[CE]  	466	None	replace
1231	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString    +   ".,   "    +    pString;    }    	non-compiled	[CE]  	466	None	replace
1232	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString  + ". "  +  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString    +   ".,   "    +    pString;    }    	non-compiled	[CE]  	466	None	replace
1233	[BUG]  [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver!=  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	109	None	replace
1234	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver!=  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver!=  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver!=  null)  {  return  caverphone(pString.toLowerCase());  }	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1235	[BUG]  [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1236	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver  ==  null)  {  return  caverphone(pString.toLowerCase());  }	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1237	[BUG]  [BUGGY]  Annotation  <?>  caver  =  getCaverphone(pString);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <?>  caver  =  getCaverphone(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <?>  caver  =  getCaverphone(pString);	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1238	[BUG]  [BUGGY]  char  pString  =  pString.charAt(pString.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  pString  =  pString.charAt(pString.length()  -  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  pString  =  pString.charAt(pString.length()  -  1);	  String    caverphone(pString,    ';');    	non-compiled	[CE]  illegal  start  of  expression	284	None	replace
1239	[BUG]  [BUGGY]  char  pString  =  ';';  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  pString  =  ';';  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  pString  =  ';';	  String    caverphone(pString,    ';');    	non-compiled	[CE]  illegal  start  of  expression	284	None	replace
1240	[BUG]  [BUGGY]  String  pString  =  encode(pString,  ';');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  encode(pString,  ';');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  encode(pString,  ';');	  String    caverphone(pString,    ';');    	non-compiled	[CE]  illegal  start  of  expression	284	None	replace
1241	[BUG]  [BUGGY]  char  pString  =  pString.charAt(pString.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  pString  =  pString.charAt(pString.length()  -  2);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  pString  =  pString.charAt(pString.length()  -  2);	  String    caverphone(pString,    ';');    	non-compiled	[CE]  illegal  start  of  expression	284	None	replace
1242	[BUG]  [BUGGY]  String  caverphone(pString,  ':');  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  ':');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  ':');	  String    caverphone(pString,    ';');    	non-compiled	[CE]  illegal  start  of  expression	284	None	replace
1243	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(pString    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1244	[BUG]  [BUGGY]  return  caverphone(pString,  null,  0,  0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  0,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  0,  0);	  return    caverphone(pString,    null,    0);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1245	[BUG]  [BUGGY]  return  caverphone(pString,  null,  0,  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  0,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  0,  true);	  return    caverphone(pString,    null,    0);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1246	[BUG]  [BUGGY]  return  caverphone(pString,  null,  0,  String.valueOf(pString.length()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  0,  String.valueOf(pString.length()));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  0,  String.valueOf(pString.length()));	  return    caverphone(pString,    null,    0);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1247	[BUG]  [BUGGY]  return  caverphone(pString,  null,  String.valueOf(pString.toLowerCase()));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  String.valueOf(pString.toLowerCase()));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  String.valueOf(pString.toLowerCase()));	  return    caverphone(pString,    null,    0);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1248	[BUG]  [BUGGY]  return  caverphone(pString,  null,  0,  false);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  0,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  0,  false);	  return    caverphone(pString,    null,    0);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1249	[BUG]  [BUGGY]  return  caverphone(pString,  null,  String.valueOf(pString.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  String.valueOf(pString.length()  -  1));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  String.valueOf(pString.length()  -  1));	  return    caverphone(pString,    null,    0);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1250	[BUG]  [BUGGY]  return  super.encode(pString,  0,  null);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  0,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  0,  null);	  return    super.encode(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1251	[BUG]  [BUGGY]  return  super.encode(pString,  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  1);	  return    super.encode(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1252	[BUG]  [BUGGY]  return  super.encode(pString,  0,  true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  0,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  0,  true);	  return    super.encode(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1253	[BUG]  [BUGGY]  return  super.encode(pString,  0,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  0,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  0,  false);	  return    super.encode(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1254	[BUG]  [BUGGY]  return  super.encode(pString,  0L);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  0L);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  0L);	  return    super.encode(pString,    0);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1255	[BUG]  [BUGGY]  return  this.caverphone(pString,  0,  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  0,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  0,  pString.toLowerCase());	  return    caverphone(pString,    0,    pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1256	[BUG]  [BUGGY]  return  super.encode(pString,  0,  pString.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  0,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  0,  pString.toLowerCase());	  return    caverphone(pString,    0,    pString.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1257	[BUG]  [BUGGY]  return  encode(pString,  0,  pString.toLowerCase());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  0,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  0,  pString.toLowerCase());	  return    caverphone(pString,    0,    pString.toLowerCase());    	non-compiled	[CE]  	179	None	replace
1258	[BUG]  [BUGGY]  return  getCaverphone(pString,  0,  pString.toLowerCase());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCaverphone(pString,  0,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCaverphone(pString,  0,  pString.toLowerCase());	  return    caverphone(pString,    0,    pString.toLowerCase());    	non-compiled	[CE]  	179	None	replace
1259	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.toUpperCase());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.toUpperCase());	  return    caverphone(pString,    0,    pString.toLowerCase());    	non-compiled	[CE]  	179	None	replace
1260	[BUG]  [BUGGY]  return  asPath(pString,  0,  pString.toLowerCase());  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  asPath(pString,  0,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  asPath(pString,  0,  pString.toLowerCase());	  return    caverphone(pString,    0,    pString.toLowerCase());    	non-compiled	[CE]  	179	None	replace
1261	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.toLowerCase()  +  1);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.toLowerCase()  +  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.toLowerCase()  +  1);	  return    caverphone(pString,    0,    pString.toLowerCase());    	non-compiled	[CE]  	179	None	replace
1262	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  this,  null);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  this,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  this,  null);	  CharSequence    caverphone(pString,    this);    	non-compiled	[CE]  	493	None	replace
1263	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  this,  false);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  this,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  this,  false);	  CharSequence    caverphone(pString,    this);    	non-compiled	[CE]  	493	None	replace
1264	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  this.encode);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  this.encode);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  this.encode);	  CharSequence    caverphone(pString,    this);    	non-compiled	[CE]  	493	None	replace
1265	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  this,  true);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  this,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  this,  true);	  CharSequence    caverphone(pString,    this);    	non-compiled	[CE]  	493	None	replace
1266	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  this,  0);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  this,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  this,  0);	  CharSequence    caverphone(pString,    this);    	non-compiled	[CE]  	493	None	replace
1267	[BUG]  [BUGGY]  CharSequence  caverphone(this,  pString);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(this,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(this,  pString);	  CharSequence    caverphone(pString,    this);    	non-compiled	[CE]  	493	None	replace
1268	[BUG]  [BUGGY]  return  caverphone(pString.toUpperCase()  + ",   ".toUpperCase());  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString.toUpperCase()  + ",   ".toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString.toUpperCase()  + ",   ".toUpperCase());	  return    caverphone(pString.toLowerCase()    +   ",   ".toUpperCase());    	non-compiled	[CE]  	447	None	replace
1269	[BUG]  [BUGGY]  return  caverphone(pString,  pString.toLowerCase()  + ",   ".toUpperCase());  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  pString.toLowerCase()  + ",   ".toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  pString.toLowerCase()  + ",   ".toUpperCase());	  return    caverphone(pString.toLowerCase()    +   ",   ".toUpperCase());    	non-compiled	[CE]  	447	None	replace
1270	[BUG]  [BUGGY]  return  caverphone(pString.toLowerCase()  + ",, ".toUpperCase());  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString.toLowerCase()  + ",, ".toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString.toLowerCase()  + ",, ".toUpperCase());	  return    caverphone(pString.toLowerCase()    +   ",   ".toUpperCase());    	non-compiled	[CE]  	447	None	replace
1271	[BUG]  [BUGGY]  return  caverphone(pString.toLowerCase()  + ",. ".toUpperCase());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString.toLowerCase()  + ",. ".toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString.toLowerCase()  + ",. ".toUpperCase());	  return    caverphone(pString.toLowerCase()    +   ",   ".toUpperCase());    	non-compiled	[CE]  	447	None	replace
1272	[BUG]  [BUGGY]  return  caverphone(pString.toLowerCase()  + ",   ".toUpperCase(),  false);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString.toLowerCase()  + ",   ".toUpperCase(),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString.toLowerCase()  + ",   ".toUpperCase(),  false);	  return    caverphone(pString.toLowerCase()    +   ",   ".toUpperCase());    	non-compiled	[CE]  	447	None	replace
1273	[BUG]  [BUGGY]  Encoder.getCamera().encode(pString,  this);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCamera().encode(pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCamera().encode(pString,  this);	  Encoder.getCamera().encode(pString);    	non-compiled	[CE]  	266	None	replace
1274	[BUG]  [BUGGY]  Encoder.getCamera().encode(pString,  null);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCamera().encode(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCamera().encode(pString,  null);	  Encoder.getCamera().encode(pString);    	non-compiled	[CE]  	266	None	replace
1275	[BUG]  [BUGGY]  Encoder.getCamera().encode(pString,  true);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCamera().encode(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCamera().encode(pString,  true);	  Encoder.getCamera().encode(pString);    	non-compiled	[CE]  	266	None	replace
1276	[BUG]  [BUGGY]  Encoder.getCamera().encode(pString,  0);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCamera().encode(pString,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCamera().encode(pString,  0);	  Encoder.getCamera().encode(pString);    	non-compiled	[CE]  	266	None	replace
1277	[BUG]  [BUGGY]  Encoder.getDefaultCamera().encode(pString);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefaultCamera().encode(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefaultCamera().encode(pString);	  Encoder.getCamera().encode(pString);    	non-compiled	[CE]  	266	None	replace
1278	[BUG]  [BUGGY]  Encoder.getCamera().encode(pString,  caverphone);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCamera().encode(pString,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCamera().encode(pString,  caverphone);	  Encoder.getCamera().encode(pString);    	non-compiled	[CE]  	266	None	replace
1279	[BUG]  [BUGGY]  Encoder.getCamera().encode(pString,  this.caverphone);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCamera().encode(pString,  this.caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCamera().encode(pString,  this.caverphone);	  Encoder.getCamera().encode(pString);    	non-compiled	[CE]  	266	None	replace
1280	[BUG]  [BUGGY]  Encoder.getCamera().encode(pString,  false);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCamera().encode(pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCamera().encode(pString,  false);	  Encoder.getCamera().encode(pString);    	non-compiled	[CE]  	266	None	replace
1281	[BUG]  [BUGGY]  return  getCamerphone(pString,  false,  null);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  false,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  false,  null);	  return    getCamerphone(pString,    false);    	non-compiled	[CE]  	98	None	replace
1282	[BUG]  [BUGGY]  return  getCamerphone(pString,  false,  0);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  false,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  false,  0);	  return    getCamerphone(pString,    false);    	non-compiled	[CE]  	98	None	replace
1283	[BUG]  [BUGGY]  return  getCamerphone(pString,  false,  true);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  false,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  false,  true);	  return    getCamerphone(pString,    false);    	non-compiled	[CE]  	98	None	replace
1284	[BUG]  [BUGGY]  String  pString  =  getCamerphone(pString,  false);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  getCamerphone(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  getCamerphone(pString,  false);	  return    getCamerphone(pString,    false);    	non-compiled	[CE]  	98	None	replace
1285	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + "= "  +  pString;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + "= "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + "= "  +  pString;  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   "=   "    +    pString;    }    	non-compiled	[CE]  	512	None	replace
1286	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + "= "  +  pString;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + "= "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + "= "  +  pString;  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   "=   "    +    pString;    }    	non-compiled	[CE]  	512	None	replace
1287	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ".= "  +  pString;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ".= "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString  + ".= "  +  pString;  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   "=   "    +    pString;    }    	non-compiled	[CE]  	512	None	replace
1288	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + "= "  +  pString;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + "= "  +  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString  + "= "  +  pString;  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString    +   "=   "    +    pString;    }    	non-compiled	[CE]  	512	None	replace
1289	[BUG]  [BUGGY]  return  this.encode(pString,  false,  null);  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  false,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  false,  null);	  return    this.encode(pString,    false);    	non-compiled	[CE]  	336	None	replace
1290	[BUG]  [BUGGY]  return  this.encode(pString,  null,  false);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  null,  false);	  return    this.encode(pString,    false);    	non-compiled	[CE]  	336	None	replace
1291	[BUG]  [BUGGY]  return  this.encode(pString,  false,  0);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  false,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  false,  0);	  return    this.encode(pString,    false);    	non-compiled	[CE]  	336	None	replace
1292	[BUG]  [BUGGY]  return  this.encode(pString,  false,  true);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  false,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  false,  true);	  return    this.encode(pString,    false);    	non-compiled	[CE]  	336	None	replace
1293	[BUG]  [BUGGY]  String  pString  =  this.encode(pString,  false);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  this.encode(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  this.encode(pString,  false);	  return    this.encode(pString,    false);    	non-compiled	[CE]  illegal  start  of  expression	336	None	replace
1294	[BUG]  [BUGGY]  Character.isDigit(pString.length())&&!Character.isDigit(pString.charAt(0))  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.length())&&!Character.isDigit(pString.charAt(0))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.length())&&!Character.isDigit(pString.charAt(0))  {  return  pString;  }	  Character.isDigit(pString.charAt(0))&&!Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
1295	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(1))  {  return  pString;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(1))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(1))  {  return  pString;  }	  Character.isDigit(pString.charAt(0))&&!Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
1296	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(0))  {  return  caverphone(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(0))  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(0))  {  return  caverphone(pString);  }	  Character.isDigit(pString.charAt(0))&&!Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	232	None	replace
1297	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(1))  {  return  caverphone(pString);  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(1))  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  &&!Character.isDigit(pString.charAt(1))  {  return  caverphone(pString);  }	  Character.isDigit(pString.charAt(0))&&!Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	232	None	replace
1298	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString  ==  null)  {  return  String.valueOf(pString).toLowerCase();  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString  ==  null)  {  return  String.valueOf(pString).toLowerCase();  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString  ==  null)  {  return  String.valueOf(pString).toLowerCase();  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    String.valueOf(pString).toLowerCase();    }    	non-compiled	[CE]  	465	None	replace
1299	[BUG]  [BUGGY]  pendingCaverphones()  {  return  String.valueOf(pString).toLowerCase();  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  return  String.valueOf(pString).toLowerCase();  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  return  String.valueOf(pString).toLowerCase();  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    String.valueOf(pString).toLowerCase();    }    	non-compiled	[CE]  	465	None	replace
1300	[BUG]  [BUGGY]  pendingCaverphones()  {  if(caverphone!=  null)  {  return  String.valueOf(pString).toLowerCase();  }  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(caverphone!=  null)  {  return  String.valueOf(pString).toLowerCase();  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(caverphone!=  null)  {  return  String.valueOf(pString).toLowerCase();  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    String.valueOf(pString).toLowerCase();    }    	non-compiled	[CE]  	465	None	replace
1301	[BUG]  [BUGGY]  pendingCaverphones()  {  if(caverphone  ==  null)  {  return  String.valueOf(pString).toLowerCase();  }  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(caverphone  ==  null)  {  return  String.valueOf(pString).toLowerCase();  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(caverphone  ==  null)  {  return  String.valueOf(pString).toLowerCase();  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    String.valueOf(pString).toLowerCase();    }    	non-compiled	[CE]  	465	None	replace
1302	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString!=  null)  {  return  string.valueOf(pString).toLowerCase();  }  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString!=  null)  {  return  string.valueOf(pString).toLowerCase();  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString!=  null)  {  return  string.valueOf(pString).toLowerCase();  }	  pendingCaverphones()    {    if(pString!=    null)    {    return    String.valueOf(pString).toLowerCase();    }    	non-compiled	[CE]  	465	None	replace
1303	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  unclosed  string  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  unclosed  string  literal	317	None	replace
1304	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  unclosed  string  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  unclosed  string  literal	317	None	replace
1305	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  unclosed  string  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  unclosed  string  literal	317	None	replace
1306	[BUG]  [BUGGY]  return  caverphone(pString,  null,  false,  booleanValue);  [CE]  unclosed  string  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  false,  booleanValue);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  false,  booleanValue);	  return    caverphone(pString,    null,    booleanValue);    	non-compiled	[CE]  unclosed  string  literal	257	None	replace
1307	[BUG]  [BUGGY]  return  caverphone(pString,  null,  true,  booleanValue);  [CE]  unclosed  string  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  true,  booleanValue);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  true,  booleanValue);	  return    caverphone(pString,    null,    booleanValue);    	non-compiled	[CE]  unclosed  string  literal	257	None	replace
1308	[BUG]  [BUGGY]  return  caverphone(pString,  null,  booleanValue,  0);  [CE]  unclosed  string  literal  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  booleanValue,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  booleanValue,  0);	  return    caverphone(pString,    null,    booleanValue);    	non-compiled	[CE]  unclosed  string  literal	257	None	replace
1309	[BUG]  [BUGGY]  return  caverphone(pString,  null,  0,  booleanValue);  [CE]  unclosed  string  literal  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  0,  booleanValue);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  0,  booleanValue);	  return    caverphone(pString,    null,    booleanValue);    	non-compiled	[CE]  unclosed  string  literal	257	None	replace
1310	[BUG]  [BUGGY]  return  caverphone(pString,  null,  this.booleanValue);  [CE]  unclosed  string  literal  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  this.booleanValue);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  this.booleanValue);	  return    caverphone(pString,    null,    booleanValue);    	non-compiled	[CE]  unclosed  string  literal	257	None	replace
1311	[BUG]  [BUGGY]  return  caverphone(pString,  null,  booleanValue,  true);  [CE]  unclosed  string  literal  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  booleanValue,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  booleanValue,  true);	  return    caverphone(pString,    null,    booleanValue);    	non-compiled	[CE]  unclosed  string  literal	257	None	replace
1312	[BUG]  [BUGGY]  String  pString  =  pString.trim().toLowerCase(Locale.ENGLISH);  [CE]  unclosed  string  literal  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.trim().toLowerCase(Locale.ENGLISH);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.trim().toLowerCase(Locale.ENGLISH);	  String    pString    =    pString.trim().toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	510	None	replace
1313	[BUG]  [BUGGY]  String  pString  =  p.trim().toLowerCase();  [CE]  unclosed  string  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  p.trim().toLowerCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  p.trim().toLowerCase();	  String    pString    =    pString.trim().toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	510	None	replace
1314	[BUG]  [BUGGY]  String  pString  =  pString.trim().toLowerCase(Locale.US);  [CE]  unclosed  string  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.trim().toLowerCase(Locale.US);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.trim().toLowerCase(Locale.US);	  String    pString    =    pString.trim().toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	510	None	replace
1315	[BUG]  [BUGGY]  String  pString  =  pString.trim().toLowerCase(Locale.getDefault());  [CE]  unclosed  string  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.trim().toLowerCase(Locale.getDefault());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.trim().toLowerCase(Locale.getDefault());	  String    pString    =    pString.trim().toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	510	None	replace
1316	[BUG]  [BUGGY]  String  pString  =  pString.trim().toUpperCase();  [CE]  unclosed  string  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.trim().toUpperCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.trim().toUpperCase();	  String    pString    =    pString.trim().toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	510	None	replace
1317	[BUG]  [BUGGY]  String  pString  =  pString.trim().toLowerCase()  +  1;  [CE]  unclosed  string  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.trim().toLowerCase()  +  1;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.trim().toLowerCase()  +  1;	  String    pString    =    pString.trim().toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	510	None	replace
1318	[BUG]  [BUGGY]  String  pString  =  pString.trim().toLowerCase()  + ", ";  [CE]  unclosed  string  literal  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.trim().toLowerCase()  + ", ";  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.trim().toLowerCase()  + ", ";	  String    pString    =    pString.trim().toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	510	None	replace
1319	[BUG]  [BUGGY]  String  pString  =  pString.trim().toLowerCase()  + "n ";  [CE]  unclosed  string  literal  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.trim().toLowerCase()  + "n ";  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.trim().toLowerCase()  + "n ";	  String    pString    =    pString.trim().toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	510	None	replace
1320	[BUG]  [BUGGY]  String  caverphone(pString.length(),  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  unclosed  string  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length(),  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length(),  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  unclosed  string  literal	209	None	replace
1321	[BUG]  [BUGGY]  String  caverphone(pString,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  unclosed  string  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  unclosed  string  literal	209	None	replace
1322	[BUG]  [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(2));  }  [CE]  unclosed  string  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(2));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(2));  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  unclosed  string  literal	209	None	replace
1323	[BUG]  [BUGGY]  String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length()  -  1)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	209	None	replace
1324	[BUG]  [BUGGY]  String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caver(pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	209	None	replace
1325	[BUG]  [BUGGY]  String  caverphone(pString,  0,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  0,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  0,  pString.length())  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	209	None	replace
1326	[BUG]  [BUGGY]  String  caverphone(pString.length(),  false)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length(),  false)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length(),  false)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	209	None	replace
1327	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    >=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	359	None	replace
1328	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    >=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	359	None	replace
1329	[BUG]  [BUGGY]  return  this.encode(pString,  null,  0);  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  null,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  null,  0);	  return    this.encode(pString,    null);    	non-compiled	[CE]  	32	None	replace
1330	[BUG]  [BUGGY]  return  this.encode(pString,  null,  true);  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  null,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  null,  true);	  return    this.encode(pString,    null);    	non-compiled	[CE]  	32	None	replace
1331	[BUG]  [BUGGY]  return  this.encode(pString,  this);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  this);	  return    this.encode(pString,    null);    	non-compiled	[CE]  	32	None	replace
1332	[BUG]  [BUGGY]  return  this.encode(pString,  null,  null);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  null,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  null,  null);	  return    this.encode(pString,    null);    	non-compiled	[CE]  	32	None	replace
1333	[BUG]  [BUGGY]  return  this.encode(pString,  null,  0.0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encode(pString,  null,  0.0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encode(pString,  null,  0.0);	  return    this.encode(pString,    null);    	non-compiled	[CE]  	32	None	replace
1334	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  ';',  false);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  ';',  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  ';',  false);	  CharSequence    caverphone(pString,    ';');    	non-compiled	[CE]  	226	None	replace
1335	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  ';',  pString.length());  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  ';',  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  ';',  pString.length());	  CharSequence    caverphone(pString,    ';');    	non-compiled	[CE]  	226	None	replace
1336	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  ';',  true);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  ';',  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  ';',  true);	  CharSequence    caverphone(pString,    ';');    	non-compiled	[CE]  	226	None	replace
1337	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  ';',  pString);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  ';',  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  ';',  pString);	  CharSequence    caverphone(pString,    ';');    	non-compiled	[CE]  	226	None	replace
1338	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  ';',  pString.charAt(pString.length()  -  1));  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  ';',  pString.charAt(pString.length()  -  1));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  ';',  pString.charAt(pString.length()  -  1));	  CharSequence    caverphone(pString,    ';');    	non-compiled	[CE]  	226	None	replace
1339	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  ';',  pString.toLowerCase());  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  ';',  pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  ';',  pString.toLowerCase());	  CharSequence    caverphone(pString,    ';');    	non-compiled	[CE]  	226	None	replace
1340	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  ';',  null);  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  ';',  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  ';',  null);	  CharSequence    caverphone(pString,    ';');    	non-compiled	[CE]  	226	None	replace
1341	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  ';',  pString.toCharArray());  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  ';',  pString.toCharArray());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  ';',  pString.toCharArray());	  CharSequence    caverphone(pString,    ';');    	non-compiled	[CE]  	226	None	replace
1342	[BUG]  [BUGGY]  Character.isDigit(pString.toCharArray())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.toCharArray())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.toCharArray())  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	236	None	replace
1343	[BUG]  [BUGGY]  CharTypes.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	236	None	replace
1344	[BUG]  [BUGGY]  Character.isDigit(pString.length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.length())  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	236	None	replace
1345	[BUG]  [BUGGY]  Character.isISOControl(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isISOControl(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isISOControl(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	236	None	replace
1346	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ",  pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ",  pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ",  pString);  }	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	236	None	replace
1347	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( ", ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  {  throw  new  IllegalArgumentException( ", ");  }	  Character.isDigit(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	236	None	replace
1348	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.caverphone);	  AnnotationTraversal.traverse(compiler,    pString);    	non-compiled	[CE]  	403	None	replace
1349	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  pString);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.caverphone,  pString);	  AnnotationTraversal.traverse(compiler,    pString);    	non-compiled	[CE]  	403	None	replace
1350	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphones,  pString);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphones,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.caverphones,  pString);	  AnnotationTraversal.traverse(compiler,    pString);    	non-compiled	[CE]  	403	None	replace
1351	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  caverphone(pString));  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  caverphone(pString));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  caverphone(pString));	  AnnotationTraversal.traverse(compiler,    pString);    	non-compiled	[CE]  	403	None	replace
1352	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.comparator,  pString);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.comparator,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.comparator,  pString);	  AnnotationTraversal.traverse(compiler,    pString);    	non-compiled	[CE]  	403	None	replace
1353	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this.caverphone);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  this.caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  pString,  this.caverphone);	  AnnotationTraversal.traverse(compiler,    pString);    	non-compiled	[CE]  	403	None	replace
1354	[BUG]  [BUGGY]  annotationTraversal.traverse(compiler,  pString,  this);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  annotationTraversal.traverse(compiler,  pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	annotationTraversal.traverse(compiler,  pString,  this);	  AnnotationTraversal.traverse(compiler,    pString);    	non-compiled	[CE]  	403	None	replace
1355	[BUG]  [BUGGY]  if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	369	None	replace
1356	[BUG]  [BUGGY]  if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	369	None	replace
1357	[BUG]  [BUGGY]  if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  caverphone(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  caverphone(pString);  }	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	369	None	replace
1358	[BUG]  [BUGGY]  if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }	  if(pString!=    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	369	None	replace
1359	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.encode(this);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.encode(this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.encode(this);	  return(pString    ==    null)?    null    :    this.encode(pString);    	non-compiled	[CE]  	36	None	replace
1360	[BUG]  [BUGGY]  return(this.encode(pString)  ==  null)?  null  :  this.encode(pString);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.encode(pString)  ==  null)?  null  :  this.encode(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.encode(pString)  ==  null)?  null  :  this.encode(pString);	  return(pString    ==    null)?    null    :    this.encode(pString);    	non-compiled	[CE]  	36	None	replace
1361	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.getValue();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.getValue();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.getValue();	  return(pString    ==    null)?    null    :    this.encode(pString);    	non-compiled	[CE]  	36	None	replace
1362	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.encode();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.encode();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.encode();	  return(pString    ==    null)?    null    :    this.encode(pString);    	non-compiled	[CE]  	36	None	replace
1363	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  this);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcher(pString,  this);	  aughtExceptionHandler.handleMatcher(pString,    null);    	non-compiled	[CE]  	153	None	replace
1364	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  null,  caverphone);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  null,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcher(pString,  null,  caverphone);	  aughtExceptionHandler.handleMatcher(pString,    null);    	non-compiled	[CE]  	153	None	replace
1365	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  caverphone(pString));  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  caverphone(pString));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcher(pString,  caverphone(pString));	  aughtExceptionHandler.handleMatcher(pString,    null);    	non-compiled	[CE]  	153	None	replace
1366	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  null,  this);  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  null,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcher(pString,  null,  this);	  aughtExceptionHandler.handleMatcher(pString,    null);    	non-compiled	[CE]  	153	None	replace
1367	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  null,  pString);  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  null,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcher(pString,  null,  pString);	  aughtExceptionHandler.handleMatcher(pString,    null);    	non-compiled	[CE]  	153	None	replace
1368	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(null,  pString);  [CE]  [FE]                                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(null,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcher(null,  pString);	  aughtExceptionHandler.handleMatcher(pString,    null);    	non-compiled	[CE]  	153	None	replace
1369	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  null,  false);  [CE]  [FE]                                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(pString,  null,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcher(pString,  null,  false);	  aughtExceptionHandler.handleMatcher(pString,    null);    	non-compiled	[CE]  	153	None	replace
1370	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "* "))  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "* "))  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "* "))  throw  new  IllegalArgumentException( " ");	  Parchet.checkState(!pString.equals(   "   "))    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	6	None	replace
1371	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "_ "))  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "_ "))  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "_ "))  throw  new  IllegalArgumentException( " ");	  Parchet.checkState(!pString.equals(   "   "))    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	6	None	replace
1372	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "- "))  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "- "))  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "- "))  throw  new  IllegalArgumentException( " ");	  Parchet.checkState(!pString.equals(   "   "))    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	6	None	replace
1373	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( ". "))  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( ". "))  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( ". "))  throw  new  IllegalArgumentException( " ");	  Parchet.checkState(!pString.equals(   "   "))    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	6	None	replace
1374	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "n "))  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "n "))  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "n "))  throw  new  IllegalArgumentException( " ");	  Parchet.checkState(!pString.equals(   "   "))    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	6	None	replace
1375	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "/ "))  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "/ "))  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "/ "))  throw  new  IllegalArgumentException( " ");	  Parchet.checkState(!pString.equals(   "   "))    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	6	None	replace
1376	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "$ "))  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "$ "))  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "$ "))  throw  new  IllegalArgumentException( " ");	  Parchet.checkState(!pString.equals(   "   "))    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	6	None	replace
1377	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	424	None	replace
1378	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	424	None	replace
1379	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	424	None	replace
1380	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	424	None	replace
1381	[BUG]  [BUGGY]  if(pString.length()!=  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()!=  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()!=  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString!=  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	424	None	replace
1382	[BUG]  [BUGGY]  if(pString.length()!=  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()!=  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()!=  0)  {  return  this.encode(pString);  }  else  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null)  {  return  pString;  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	424	None	replace
1383	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	499	None	replace
1384	[BUG]  [BUGGY]  CharTypes.encode(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.encode(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.encode(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	499	None	replace
1385	[BUG]  [BUGGY]  CharacterImpl  caver(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharacterImpl  caver(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharacterImpl  caver(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	499	None	replace
1386	[BUG]  [BUGGY]  Character  <?>  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character  <?>  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character  <?>  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	499	None	replace
1387	[BUG]  [BUGGY]  CharSequence  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	499	None	replace
1388	[BUG]  [BUGGY]  MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	499	None	replace
1389	[BUG]  [BUGGY]  CharacterImpl  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharacterImpl  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharacterImpl  caverphone(pString.toLowerCase())  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	499	None	replace
1390	[BUG]  [BUGGY]  return  caverphone(pString,  null,  null,  0);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  null,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  null,  0);	  return    caverphone(pString,    null,    null);    	non-compiled	[CE]  	119	None	replace
1391	[BUG]  [BUGGY]  return  caverphone(pString,  null,  null,  true);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  null,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  null,  true);	  return    caverphone(pString,    null,    null);    	non-compiled	[CE]  	119	None	replace
1392	[BUG]  [BUGGY]  String  pString  =  caverphone(pString,  null,  null);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  caverphone(pString,  null,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  caverphone(pString,  null,  null);	  return    caverphone(pString,    null,    null);    	non-compiled	[CE]  	119	None	replace
1393	[BUG]  [BUGGY]  return  this.caverphone(pString,  null,  null);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  null,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  null,  null);	  return    caverphone(pString,    null,    null);    	non-compiled	[CE]  	119	None	replace
1394	[BUG]  [BUGGY]  return  caverphone(pString,  null,  null,  -1);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  null,  -1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  null,  -1);	  return    caverphone(pString,    null,    null);    	non-compiled	[CE]  	119	None	replace
1395	[BUG]  [BUGGY]  return  cacheverphone(pString,  null,  null,  null);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  null,  null,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  null,  null,  null);	  return    caverphone(pString,    null,    null);    	non-compiled	[CE]  	119	None	replace
1396	[BUG]  [BUGGY]  String  caverphone(pString.toUpperCase()  +  ';');  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toUpperCase()  +  ';');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toUpperCase()  +  ';');	  String    caverphone(pString.toLowerCase()    +    ';');    	non-compiled	[CE]  	85	None	replace
1397	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase(),  ';');  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase(),  ';');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase(),  ';');	  String    caverphone(pString.toLowerCase()    +    ';');    	non-compiled	[CE]  	85	None	replace
1398	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase())+  ';');  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase())+  ';');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase())+  ';');	  String    caverphone(pString.toLowerCase()    +    ';');    	non-compiled	[CE]  	85	None	replace
1399	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase()  /  ';');  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase()  /  ';');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase()  /  ';');	  String    caverphone(pString.toLowerCase()    +    ';');    	non-compiled	[CE]  	85	None	replace
1400	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase()  +  ';',  true);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase()  +  ';',  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase()  +  ';',  true);	  String    caverphone(pString.toLowerCase()    +    ';');    	non-compiled	[CE]  	85	None	replace
1401	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase()  +  ':');  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase()  +  ':');  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase()  +  ':');	  String    caverphone(pString.toLowerCase()    +    ';');    	non-compiled	[CE]  	85	None	replace
1402	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase()  +  ';',  false);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase()  +  ';',  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase()  +  ';',  false);	  String    caverphone(pString.toLowerCase()    +    ';');    	non-compiled	[CE]  	85	None	replace
1403	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  this.caverphone(pString);  }  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  this.caverphone(pString);  }	  return    this.caverphone(pString);    this.caverphone(pString);    	non-compiled	[CE]  	48	None	replace
1404	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  this.caverphone(pString);  }  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  this.caverphone(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.caverphone(pString);  }  else  {  this.caverphone(pString);  }	  return    this.caverphone(pString);    this.caverphone(pString);    	non-compiled	[CE]  	48	None	replace
1405	[BUG]  [BUGGY]  final  Annotation  <  String>  caver  =  getCaverphone();  if(caver  ==  null)  {  return  caver.encode(pString);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  <  String>  caver  =  getCaverphone();  if(caver  ==  null)  {  return  caver.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  <  String>  caver  =  getCaverphone();  if(caver  ==  null)  {  return  caver.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver    ==    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	452	None	replace
1406	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caver.encode(pString);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caver.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString);  if(caver  ==  null)  {  return  caver.encode(pString);  }	  Annotation    <    String>    caver    =    getCaverphone();    if(caver    ==    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	452	None	replace
1407	[BUG]  [BUGGY]  return  caverphone(class,  pString,  false);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(class,  pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(class,  pString,  false);	  return    caverphone(class,    pString,    true);    	non-compiled	[CE]  	319	None	replace
1408	[BUG]  [BUGGY]  return  caverphone(class,  pString,  null,  true);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(class,  pString,  null,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(class,  pString,  null,  true);	  return    caverphone(class,    pString,    true);    	non-compiled	[CE]  	319	None	replace
1409	[BUG]  [BUGGY]  return  caverphone(class,  String.class,  pString,  true);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(class,  String.class,  pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(class,  String.class,  pString,  true);	  return    caverphone(class,    pString,    true);    	non-compiled	[CE]  	319	None	replace
1410	[BUG]  [BUGGY]  return  caverphone(class,  null,  pString,  true);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(class,  null,  pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(class,  null,  pString,  true);	  return    caverphone(class,    pString,    true);    	non-compiled	[CE]  	319	None	replace
1411	[BUG]  [BUGGY]  return  this.caverphone(class,  pString,  true);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(class,  pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(class,  pString,  true);	  return    caverphone(class,    pString,    true);    	non-compiled	[CE]  	319	None	replace
1412	[BUG]  [BUGGY]  return  caverphone(class,  pString,  null,  false);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(class,  pString,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(class,  pString,  null,  false);	  return    caverphone(class,    pString,    true);    	non-compiled	[CE]  	319	None	replace
1413	[BUG]  [BUGGY]  return  cache(class,  pString,  false);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cache(class,  pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cache(class,  pString,  false);	  return    caverphone(class,    pString,    true);    	non-compiled	[CE]  	319	None	replace
1414	[BUG]  [BUGGY]  return  caverphone(class,  this.pString,  true);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(class,  this.pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(class,  this.pString,  true);	  return    caverphone(class,    pString,    true);    	non-compiled	[CE]  	319	None	replace
1415	[BUG]  [BUGGY]  return  asverphone(class,  pString,  false);  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  asverphone(class,  pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  asverphone(class,  pString,  false);	  return    caverphone(class,    pString,    true);    	non-compiled	[CE]  	319	None	replace
1416	[BUG]  [BUGGY]  return  caver(pString,  false,  null);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  false,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  false,  null);	  return    caver(pString,    false);    	non-compiled	[CE]  	205	None	replace
1417	[BUG]  [BUGGY]  return  cachever(pString,  true);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cachever(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cachever(pString,  true);	  return    caver(pString,    false);    	non-compiled	[CE]  	205	None	replace
1418	[BUG]  [BUGGY]  return  caver(pString,  false,  true);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  false,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  false,  true);	  return    caver(pString,    false);    	non-compiled	[CE]  	205	None	replace
1419	[BUG]  [BUGGY]  return  caver(pString,  false,  0);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  false,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  false,  0);	  return    caver(pString,    false);    	non-compiled	[CE]  	205	None	replace
1420	[BUG]  [BUGGY]  return  this.caver(pString,  false);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caver(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caver(pString,  false);	  return    caver(pString,    false);    	non-compiled	[CE]  	205	None	replace
1421	[BUG]  [BUGGY]  return  encode(pString,  false);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  false);	  return    caver(pString,    false);    	non-compiled	[CE]  	205	None	replace
1422	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver(pString);	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	108	None	replace
1423	[BUG]  [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver!=  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	108	None	replace
1424	[BUG]  [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	108	None	replace
1425	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	108	None	replace
1426	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());  if(caver!=  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());  if(caver!=  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());  if(caver!=  null)  {  return  caverphone(pString.toLowerCase());  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	108	None	replace
1427	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());  if(caver  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());  if(caver  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());  if(caver  ==  null)  {  return  caverphone(pString.toLowerCase());  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	108	None	replace
1428	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverType(pString);  if(caver!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverType(pString);  if(caver!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverType(pString);  if(caver!=  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver    >=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	108	None	replace
1429	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( ".* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( ".* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( ".* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ".   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	496	None	replace
1430	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( ".java "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( ".java "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( ".java "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ".   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	496	None	replace
1431	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.startsWith( ".* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.startsWith( ".* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "* ")||  pString.startsWith( ".* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ".   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	496	None	replace
1432	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.startsWith( "*.* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.startsWith( "*.* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "* ")||  pString.startsWith( "*.* "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ".   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	496	None	replace
1433	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( "._ "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( "._ "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( "._ "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ".   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	496	None	replace
1434	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "   ")||  pString.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.startsWith(   ".   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	496	None	replace
1435	[BUG]  [BUGGY]  return  encode(pString,  0,  pString.length);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  0,  pString.length);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  0,  pString.length);	  return    caverphone(pString,    0,    pString.length);    	non-compiled	[CE]  	174	None	replace
1436	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.length  -  1);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.length  -  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.length  -  1);	  return    caverphone(pString,    0,    pString.length);    	non-compiled	[CE]  	174	None	replace
1437	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.length  +  1);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.length  +  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.length  +  1);	  return    caverphone(pString,    0,    pString.length);    	non-compiled	[CE]  	174	None	replace
1438	[BUG]  [BUGGY]  return  super.encode(pString,  0,  pString.length);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  0,  pString.length);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  0,  pString.length);	  return    caverphone(pString,    0,    pString.length);    	non-compiled	[CE]  	174	None	replace
1439	[BUG]  [BUGGY]  return  caverphone(pString,  0,  pString.length,  pString.length);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  pString.length,  pString.length);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  pString.length,  pString.length);	  return    caverphone(pString,    0,    pString.length);    	non-compiled	[CE]  	174	None	replace
1440	[BUG]  [BUGGY]  return  getCaverphone(pString,  0,  pString.length);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCaverphone(pString,  0,  pString.length);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCaverphone(pString,  0,  pString.length);	  return    caverphone(pString,    0,    pString.length);    	non-compiled	[CE]  	174	None	replace
1441	[BUG]  [BUGGY]  CharSequence  caverphone(pString.charAt(0),  0);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.charAt(0),  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.charAt(0),  0);	  CharSequence    caverphone(pString.charAt(0));    	non-compiled	[CE]  	222	None	replace
1442	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  pString.charAt(0));  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  pString.charAt(0));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  pString.charAt(0));	  CharSequence    caverphone(pString.charAt(0));    	non-compiled	[CE]  	222	None	replace
1443	[BUG]  [BUGGY]  CharSequence  caverphone(pString.charAt(0),  pString.length());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.charAt(0),  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.charAt(0),  pString.length());	  CharSequence    caverphone(pString.charAt(0));    	non-compiled	[CE]  	222	None	replace
1444	[BUG]  [BUGGY]  CharSequence  caverphone(pString.charAt(0),  true);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.charAt(0),  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.charAt(0),  true);	  CharSequence    caverphone(pString.charAt(0));    	non-compiled	[CE]  	222	None	replace
1445	[BUG]  [BUGGY]  CharSequence  caverphone(pString.substring(0,  pString.length()  -  1));  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.substring(0,  pString.length()  -  1));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.substring(0,  pString.length()  -  1));	  CharSequence    caverphone(pString.charAt(0));    	non-compiled	[CE]  	222	None	replace
1446	[BUG]  [BUGGY]  CharSequence  caverphone(pString.charAt(0),  false);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.charAt(0),  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.charAt(0),  false);	  CharSequence    caverphone(pString.charAt(0));    	non-compiled	[CE]  	222	None	replace
1447	[BUG]  [BUGGY]  CharSequence  caverphone(pString.charAt(0),  null);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString.charAt(0),  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString.charAt(0),  null);	  CharSequence    caverphone(pString.charAt(0));    	non-compiled	[CE]  	222	None	replace
1448	[BUG]  [BUGGY]  return  this.encodePath(pString,  null);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodePath(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodePath(pString,  null);	  return    this.encodePath(pString);    	non-compiled	[CE]  	337	None	replace
1449	[BUG]  [BUGGY]  return  this.encodePath(pString,  0);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodePath(pString,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodePath(pString,  0);	  return    this.encodePath(pString);    	non-compiled	[CE]  	337	None	replace
1450	[BUG]  [BUGGY]  return  this.encodePath(pString,  true);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodePath(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodePath(pString,  true);	  return    this.encodePath(pString);    	non-compiled	[CE]  	337	None	replace
1451	[BUG]  [BUGGY]  return  this.encodeString(pString);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeString(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeString(pString);	  return    this.encodePath(pString);    	non-compiled	[CE]  	337	None	replace
1452	[BUG]  [BUGGY]  return  this.encodePath(pString,  false);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodePath(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodePath(pString,  false);	  return    this.encodePath(pString);    	non-compiled	[CE]  	337	None	replace
1453	[BUG]  [BUGGY]  String  pString  =  this.encodePath(pString);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  this.encodePath(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  this.encodePath(pString);	  return    this.encodePath(pString);    	non-compiled	[CE]  	337	None	replace
1454	[BUG]  [BUGGY]  return  pString.encodePath(this);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.encodePath(this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.encodePath(this);	  return    this.encodePath(pString);    	non-compiled	[CE]  	337	None	replace
1455	[BUG]  [BUGGY]  return  this.encodePath(pString,  1.0);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodePath(pString,  1.0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodePath(pString,  1.0);	  return    this.encodePath(pString);    	non-compiled	[CE]  	337	None	replace
1456	[BUG]  [BUGGY]  return  super.encodePath(pString);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encodePath(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encodePath(pString);	  return    this.encodePath(pString);    	non-compiled	[CE]  	337	None	replace
1457	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	242	None	replace
1458	[BUG]  [BUGGY]  CharSequence  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	242	None	replace
1459	[BUG]  [BUGGY]  CharSequence  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  <  String>  caverphone(pString)  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	242	None	replace
1460	[BUG]  [BUGGY]  return(pString  ==  null)?  null  :  pString.toLowerCase()  + ", "+pString.toLowerCase();  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(pString  ==  null)?  null  :  pString.toLowerCase()  + ", "+pString.toLowerCase();  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(pString  ==  null)?  null  :  pString.toLowerCase()  + ", "+pString.toLowerCase();	  return(pString    ==    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	11	None	replace
1461	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  null,  false);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  null,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  null,  false);	  CharSequence    caverphone(pString,    null);    	non-compiled	[CE]  	224	None	replace
1462	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  null,  0);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  null,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  null,  0);	  CharSequence    caverphone(pString,    null);    	non-compiled	[CE]  	224	None	replace
1463	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  null,  true);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  null,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  null,  true);	  CharSequence    caverphone(pString,    null);    	non-compiled	[CE]  	224	None	replace
1464	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  null,  null);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  null,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  null,  null);	  CharSequence    caverphone(pString,    null);    	non-compiled	[CE]  	224	None	replace
1465	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  this.null);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  this.null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  this.null);	  CharSequence    caverphone(pString,    null);    	non-compiled	[CE]  	224	None	replace
1466	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  null,  this);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  null,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  null,  this);	  CharSequence    caverphone(pString,    null);    	non-compiled	[CE]  	224	None	replace
1467	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  null,  -1);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  null,  -1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  null,  -1);	  CharSequence    caverphone(pString,    null);    	non-compiled	[CE]  	224	None	replace
1468	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  null,  0.0);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  null,  0.0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  null,  0.0);	  CharSequence    caverphone(pString,    null);    	non-compiled	[CE]  	224	None	replace
1469	[BUG]  [BUGGY]  return  caverphone(pString,  0,  null,  false);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  null,  false);	  return    caverphone(pString,    0,    false);    	non-compiled	[CE]  	363	None	replace
1470	[BUG]  [BUGGY]  return  caverphone(pString,  0,  false,  pString.length());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  false,  pString.length());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  false,  pString.length());	  return    caverphone(pString,    0,    false);    	non-compiled	[CE]  	363	None	replace
1471	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	371	None	replace
1472	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	371	None	replace
1473	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	371	None	replace
1474	[BUG]  [BUGGY]  if(aughtExceptionHandler.handleMatcherFailure(pString))  {  aughtExceptionHandler.handleMatcherFailure(pString);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(aughtExceptionHandler.handleMatcherFailure(pString))  {  aughtExceptionHandler.handleMatcherFailure(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(aughtExceptionHandler.handleMatcherFailure(pString))  {  aughtExceptionHandler.handleMatcherFailure(pString);  }	  aughtExceptionHandler.handleMatcherFailure(pString);    	non-compiled	[CE]  	151	None	replace
1475	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMatcherFailure(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMatcherFailure(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMatcherFailure(pString);  }	  aughtExceptionHandler.handleMatcherFailure(pString);    	non-compiled	[CE]  	151	None	replace
1476	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcherFailure(caverphone(pString));  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcherFailure(caverphone(pString));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcherFailure(caverphone(pString));	  aughtExceptionHandler.handleMatcherFailure(pString);    	non-compiled	[CE]  	151	None	replace
1477	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcherFailure(pString,  null);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcherFailure(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcherFailure(pString,  null);	  aughtExceptionHandler.handleMatcherFailure(pString);    	non-compiled	[CE]  	151	None	replace
1478	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcherFailure(pString,  caverphone);  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcherFailure(pString,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcherFailure(pString,  caverphone);	  aughtExceptionHandler.handleMatcherFailure(pString);    	non-compiled	[CE]  	151	None	replace
1479	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcherFailure(pString,  caver);  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcherFailure(pString,  caver);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcherFailure(pString,  caver);	  aughtExceptionHandler.handleMatcherFailure(pString);    	non-compiled	[CE]  	151	None	replace
1480	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcherFailure(pString,  this.caverphone);  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  aughtExceptionHandler.handleMatcherFailure(pString,  this.caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	aughtExceptionHandler.handleMatcherFailure(pString,  this.caverphone);	  aughtExceptionHandler.handleMatcherFailure(pString);    	non-compiled	[CE]  	151	None	replace
1481	[BUG]  [BUGGY]  if(!pString.equals( "   "))  {  return  String.valueOf(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(!pString.equals( "   "))  {  return  String.valueOf(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(!pString.equals( "   "))  {  return  String.valueOf(pString);  }	  return    encode(pString);    if(pString!=    null)    {    if(!pString.equals(   "   "))    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	200	None	replace
1482	[BUG]  [BUGGY]  if(pString!=  null)  {  return  Encoder.getDefaultEncoder().encode(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  Encoder.getDefaultEncoder().encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  Encoder.getDefaultEncoder().encode(pString);  }	  return    encode(pString);    if(pString!=    null)    {    if(!pString.equals(   "   "))    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	200	None	replace
1483	[BUG]  [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(String  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	297	None	replace
1484	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	297	None	replace
1485	[BUG]  [BUGGY]  final  Annotation  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	297	None	replace
1486	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	297	None	replace
1487	[BUG]  [BUGGY]  Annotation  caverphone(int  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(int  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(int  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	297	None	replace
1488	[BUG]  [BUGGY]  Annotation  caverphone(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(pString,  false)  {  if(pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	297	None	replace
1489	[BUG]  [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(String  pString)  {  if(pString.length()!=  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	297	None	replace
1490	[BUG]  [BUGGY]  Encoder.getDefaultEncoding().encode(pString,  this);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefaultEncoding().encode(pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefaultEncoding().encode(pString,  this);	  Encoder.getDefaultEncoding().encode(pString);    	non-compiled	[CE]  	275	None	replace
1491	[BUG]  [BUGGY]  Encoder.getDefaultEncoding().encode(pString,  caverphone);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefaultEncoding().encode(pString,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefaultEncoding().encode(pString,  caverphone);	  Encoder.getDefaultEncoding().encode(pString);    	non-compiled	[CE]  	275	None	replace
1492	[BUG]  [BUGGY]  Encoder.getDefaultEncoding().encode(pString,  null);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefaultEncoding().encode(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefaultEncoding().encode(pString,  null);	  Encoder.getDefaultEncoding().encode(pString);    	non-compiled	[CE]  	275	None	replace
1493	[BUG]  [BUGGY]  Encoder.getDefaultEncoding().encode(pString,  0);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefaultEncoding().encode(pString,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefaultEncoding().encode(pString,  0);	  Encoder.getDefaultEncoding().encode(pString);    	non-compiled	[CE]  	275	None	replace
1494	[BUG]  [BUGGY]  Encoder.getDefaultEncoding().encode(pString,  true);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getDefaultEncoding().encode(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getDefaultEncoding().encode(pString,  true);	  Encoder.getDefaultEncoding().encode(pString);    	non-compiled	[CE]  	275	None	replace
1495	[BUG]  [BUGGY]  Encoder.getCaverphone().encode(pString);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCaverphone().encode(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCaverphone().encode(pString);	  Encoder.getDefaultEncoding().encode(pString);    	non-compiled	[CE]  	275	None	replace
1496	[BUG]  [BUGGY]  Encoder.getCurrentEncoding().encode(pString);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getCurrentEncoding().encode(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getCurrentEncoding().encode(pString);	  Encoder.getDefaultEncoding().encode(pString);    	non-compiled	[CE]  	275	None	replace
1497	[BUG]  [BUGGY]  if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(cache!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	444	None	replace
1498	[BUG]  [BUGGY]  if(caverphone!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(cache!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	444	None	replace
1499	[BUG]  [BUGGY]  if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(cache!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	444	None	replace
1500	[BUG]  [BUGGY]  if(cache!=  null)  {  String  pString  =  cache.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cache!=  null)  {  String  pString  =  cache.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cache!=  null)  {  String  pString  =  cache.toLowerCase();  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(cache!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	444	None	replace
1501	[BUG]  [BUGGY]  return  cacheverphone(pString,  true,  pString.toLowerCase());  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  true,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  true,  pString.toLowerCase());	  return    caverphone(pString,    false,    pString.toLowerCase());    	non-compiled	[CE]  	28	None	replace
1502	[BUG]  [BUGGY]  return  this.caverphone(pString,  false,  pString.toLowerCase());  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  false,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  false,  pString.toLowerCase());	  return    caverphone(pString,    false,    pString.toLowerCase());    	non-compiled	[CE]  	28	None	replace
1503	[BUG]  [BUGGY]  return  caverphone(pString,  false,  true,  pString.toLowerCase());  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  true,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  true,  pString.toLowerCase());	  return    caverphone(pString,    false,    pString.toLowerCase());    	non-compiled	[CE]  	28	None	replace
1504	[BUG]  [BUGGY]  String  pString  =  this.caverphone(pString.toLowerCase());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  this.caverphone(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  this.caverphone(pString.toLowerCase());	  String    pString    =    pString.toLowerCase();    	non-compiled	[CE]  	61	None	replace
1505	[BUG]  [BUGGY]  String  pString  =  this.caverphone.toLowerCase();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  this.caverphone.toLowerCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  this.caverphone.toLowerCase();	  String    pString    =    pString.toLowerCase();    	non-compiled	[CE]  	61	None	replace
1506	[BUG]  [BUGGY]  String  pString  =  caverphone.toLowerCase();  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  caverphone.toLowerCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  caverphone.toLowerCase();	  String    pString    =    pString.toLowerCase();    	non-compiled	[CE]  	61	None	replace
1507	[BUG]  [BUGGY]  String  pString  =  this.charphone.toLowerCase();  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  this.charphone.toLowerCase();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  this.charphone.toLowerCase();	  String    pString    =    pString.toLowerCase();    	non-compiled	[CE]  	61	None	replace
1508	[BUG]  [BUGGY]  return  cache(pString,  null);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cache(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cache(pString,  null);	  return    cache(pString);    	non-compiled	[CE]  	394	None	replace
1509	[BUG]  [BUGGY]  return  cache(pString,  true);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cache(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cache(pString,  true);	  return    cache(pString);    	non-compiled	[CE]  	394	None	replace
1510	[BUG]  [BUGGY]  return  cache(pString,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cache(pString,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cache(pString,  0);	  return    cache(pString);    	non-compiled	[CE]  	394	None	replace
1511	[BUG]  [BUGGY]  return  cache(pString,  false);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cache(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cache(pString,  false);	  return    cache(pString);    	non-compiled	[CE]  	394	None	replace
1512	[BUG]  [BUGGY]  return  cache(pString,  this.cache);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cache(pString,  this.cache);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cache(pString,  this.cache);	  return    cache(pString);    	non-compiled	[CE]  	394	None	replace
1513	[BUG]  [BUGGY]  return  cache(pString,  this.encoder);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cache(pString,  this.encoder);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cache(pString,  this.encoder);	  return    cache(pString);    	non-compiled	[CE]  	394	None	replace
1514	[BUG]  [BUGGY]  return  encode(pString,  true);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  true);	  return    cache(pString);    	non-compiled	[CE]  	394	None	replace
1515	[BUG]  [BUGGY]  if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }	  if(cache!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	506	None	replace
1516	[BUG]  [BUGGY]  if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cache  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  pString;  }	  if(cache!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	506	None	replace
1517	[BUG]  [BUGGY]  return  caverphone(pString,  null,  ctxt,  0);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  ctxt,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  ctxt,  0);	  return    caverphone(pString,    null,    ctxt);    	non-compiled	[CE]  	126	None	replace
1518	[BUG]  [BUGGY]  return  caverphone(pString,  null,  this.ctxt);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  this.ctxt);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  this.ctxt);	  return    caverphone(pString,    null,    ctxt);    	non-compiled	[CE]  	126	None	replace
1519	[BUG]  [BUGGY]  return  caverphone(ctxt,  null,  pString);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(ctxt,  null,  pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(ctxt,  null,  pString);	  return    caverphone(pString,    null,    ctxt);    	non-compiled	[CE]  	126	None	replace
1520	[BUG]  [BUGGY]  return  caverphone(pString,  null,  0,  ctxt);  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  0,  ctxt);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  0,  ctxt);	  return    caverphone(pString,    null,    ctxt);    	non-compiled	[CE]  	126	None	replace
1521	[BUG]  [BUGGY]  return  caverphone(pString,  null,  ctxt,  false);  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  ctxt,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  ctxt,  false);	  return    caverphone(pString,    null,    ctxt);    	non-compiled	[CE]  	126	None	replace
1522	[BUG]  [BUGGY]  return  caverphone(pString,  null,  false,  ctxt);  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  false,  ctxt);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  false,  ctxt);	  return    caverphone(pString,    null,    ctxt);    	non-compiled	[CE]  	126	None	replace
1523	[BUG]  [BUGGY]  return  caverphone(pString,  null,  -1,  ctxt);  [CE]  [FE]                                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  -1,  ctxt);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  -1,  ctxt);	  return    caverphone(pString,    null,    ctxt);    	non-compiled	[CE]  	126	None	replace
1524	[BUG]  [BUGGY]  return  caverphone(pString,  null,  ctxt,  true);  [CE]  [FE]                                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  ctxt,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  ctxt,  true);	  return    caverphone(pString,    null,    ctxt);    	non-compiled	[CE]  	126	None	replace
1525	[BUG]  [BUGGY]  String  pString  =  pString.substring(0,  pString.length());  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.substring(0,  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.substring(0,  pString.length());	  String    pString    =    pString.substring(0,    pString.length()    -    1);    	non-compiled	[CE]  	22	None	replace
1526	[BUG]  [BUGGY]  String  pString  =  pString!=  null?  null  :  pString.substring(0,  pString.length());  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString!=  null?  null  :  pString.substring(0,  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString!=  null?  null  :  pString.substring(0,  pString.length());	  String    pString    =    pString.substring(0,    pString.length()    -    1);    	non-compiled	[CE]  	22	None	replace
1527	[BUG]  [BUGGY]  String  pString  =  pString  ==  null?  null  :  pString.substring(0,  pString.length());  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString  ==  null?  null  :  pString.substring(0,  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString  ==  null?  null  :  pString.substring(0,  pString.length());	  String    pString    =    pString.substring(0,    pString.length()    -    1);    	non-compiled	[CE]  	22	None	replace
1528	[BUG]  [BUGGY]  char  pString  =  pString.substring(0,  pString.length());  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  pString  =  pString.substring(0,  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  pString  =  pString.substring(0,  pString.length());	  String    pString    =    pString.substring(0,    pString.length()    -    1);    	non-compiled	[CE]  	22	None	replace
1529	[BUG]  [BUGGY]  String  pString  =  new  String(pString.substring(0,  pString.length()));  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  new  String(pString.substring(0,  pString.length()));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  new  String(pString.substring(0,  pString.length()));	  String    pString    =    pString.substring(0,    pString.length()    -    1);    	non-compiled	[CE]  	22	None	replace
1530	[BUG]  [BUGGY]  String  pString  =  string.substring(0,  pString.length());  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  string.substring(0,  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  string.substring(0,  pString.length());	  String    pString    =    pString.substring(0,    pString.length()    -    1);    	non-compiled	[CE]  	22	None	replace
1531	[BUG]  [BUGGY]  String  pString  =  Util.substring(0,  pString.length());  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  Util.substring(0,  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  Util.substring(0,  pString.length());	  String    pString    =    pString.substring(0,    pString.length()    -    1);    	non-compiled	[CE]  	22	None	replace
1532	[BUG]  [BUGGY]  String  pString  =  pString.substring(0,  pString.length();  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.substring(0,  pString.length();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.substring(0,  pString.length();	  String    pString    =    pString.substring(0,    pString.length()    -    1);    	non-compiled	[CE]  	22	None	replace
1533	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(1)))    {    return    null;    }    	non-compiled	[CE]  	296	None	replace
1534	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(1)))    {    return    null;    }    	non-compiled	[CE]  	296	None	replace
1535	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  null;  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  null;  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(1)))    {    return    null;    }    	non-compiled	[CE]  	296	None	replace
1536	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(2)))  {  return  null;  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(2)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(2)))  {  return  null;  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(1)))    {    return    null;    }    	non-compiled	[CE]  	296	None	replace
1537	[BUG]  [BUGGY]  String  pString  =  pString.toLowerCase();  caverphone(pString,  pString.toLowerCase());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toLowerCase();  caverphone(pString,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toLowerCase();  caverphone(pString,  pString.toLowerCase());	  return    caverphone(pString.toLowerCase());    caverphone(pString.toLowerCase());    	non-compiled	[CE]  	45	None	replace
1538	[BUG]  [BUGGY]  if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  caverphone(pString.toLowerCase());  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  caverphone(pString.toLowerCase());  }  else  {  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    caverphone(pString.toLowerCase());    	non-compiled	[CE]  	45	None	replace
1539	[BUG]  [BUGGY]  caverphone(pString.toLowerCase());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  caverphone(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	caverphone(pString.toLowerCase());	  return    caverphone(pString.toLowerCase());    caverphone(pString.toLowerCase());    	non-compiled	[CE]  	45	None	replace
1540	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString.length()!=  0  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString.length()!=  0  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString.length()!=  0  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	461	None	replace
1541	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.length()!=  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.length()!=  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.length()!=  0)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	461	None	replace
1542	[BUG]  [BUGGY]  String  pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pendingCaverphones()  {  if(pString.length()  ==  0  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	461	None	replace
1543	[BUG]  [BUGGY]  pendingCaverphones()  {  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  pendingCaverphones()  {  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	pendingCaverphones()  {  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  String.valueOf(pString);  }	  pendingCaverphones()    {    if(pString.length()    ==    0    ||    pString.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	461	None	replace
1544	[BUG]  [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  Annotation  <  String>  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	105	None	replace
1545	[BUG]  [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  Annotation  <  String>  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  Annotation  <  String>  caverphone  =  getCaverphone(pString);  if(caverphone  ==  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caverphone    =    getCaverphone(pString);    if(caverphone!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	105	None	replace
1546	[BUG]  [BUGGY]  Annotation  caverphone(String  pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(String  pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(String  pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(caverphone.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	303	None	replace
1547	[BUG]  [BUGGY]  String  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(caverphone.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	303	None	replace
1548	[BUG]  [BUGGY]  final  Annotation  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(caverphone.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	303	None	replace
1549	[BUG]  [BUGGY]  Annotation  caverphone(int  pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(int  pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(int  pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(caverphone.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	303	None	replace
1550	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(caverphone.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	303	None	replace
1551	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString)  {  if(caverphone.length()  ==  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(caverphone.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	303	None	replace
1552	[BUG]  [BUGGY]  Annotation  caverphone(String  pString)  {  if(caverphone.length()!=  0)  {  return  String.valueOf(pString);  }  [CE]  [FE]                                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(String  pString)  {  if(caverphone.length()!=  0)  {  return  String.valueOf(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(String  pString)  {  if(caverphone.length()!=  0)  {  return  String.valueOf(pString);  }	  Annotation    caverphone(pString)    {    if(caverphone.length()    ==    0)    {    return    String.valueOf(pString);    }    	non-compiled	[CE]  	303	None	replace
1553	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( ": ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( ": ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( ": ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.equals(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	474	None	replace
1554	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "* ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.equals(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	474	None	replace
1555	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "/ ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "/ ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "/ ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.equals(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	474	None	replace
1556	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "n ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "n ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "n ")||  pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.equals(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	474	None	replace
1557	[BUG]  [BUGGY]  Parchet.checkArgument(!pString.equals( "n ")||  pString.equals( ":n "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkArgument(!pString.equals( "n ")||  pString.equals( ":n "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkArgument(!pString.equals( "n ")||  pString.equals( ":n "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkArgument(!pString.equals(   "   ")||    pString.equals(   ":   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	474	None	replace
1558	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.trim();    	non-compiled	[CE]  	252	None	replace
1559	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.trim();    	non-compiled	[CE]  	252	None	replace
1560	[BUG]  [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.trim();    	non-compiled	[CE]  	252	None	replace
1561	[BUG]  [BUGGY]  if(this.encode(pString)  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.trim();  }	  return    this.encode(pString);    String    pString    =(pString    ==    null)?    null    :    pString.trim();    	non-compiled	[CE]  	252	None	replace
1562	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  getCamera();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  getCamera();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  getCamera();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	188	None	replace
1563	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  this.getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  this.getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  this.getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	188	None	replace
1564	[BUG]  [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone  =  getCaverphone(pString);  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Annotation    <    String>    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	188	None	replace
1565	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	66	None	replace
1566	[BUG]  [BUGGY]  CharTypes.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	66	None	replace
1567	[BUG]  [BUGGY]  CharSequence.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	66	None	replace
1568	[BUG]  [BUGGY]  CharType.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharType.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharType.isUpperCase(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	66	None	replace
1569	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	66	None	replace
1570	[BUG]  [BUGGY]  Character.isUpperCase(pString.length()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.length()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.length()))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isUpperCase(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	66	None	replace
1571	[BUG]  [BUGGY]  Encoder.getInstance().encodeCamera(pString,  this);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeCamera(pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeCamera(pString,  this);	  Encoder.getInstance().encodeCamera(pString);    	non-compiled	[CE]  	263	None	replace
1572	[BUG]  [BUGGY]  Encoder.getInstance().encodeCaver(pString);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeCaver(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeCaver(pString);	  Encoder.getInstance().encodeCamera(pString);    	non-compiled	[CE]  	263	None	replace
1573	[BUG]  [BUGGY]  Encoder.getInstance().encodeCamera(pString,  null);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeCamera(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeCamera(pString,  null);	  Encoder.getInstance().encodeCamera(pString);    	non-compiled	[CE]  	263	None	replace
1574	[BUG]  [BUGGY]  Encoder.getInstance().encodeCamera(this.caverphone);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeCamera(this.caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeCamera(this.caverphone);	  Encoder.getInstance().encodeCamera(pString);    	non-compiled	[CE]  	263	None	replace
1575	[BUG]  [BUGGY]  Encoder.getInstance().encodeCamera(pString,  true);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeCamera(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeCamera(pString,  true);	  Encoder.getInstance().encodeCamera(pString);    	non-compiled	[CE]  	263	None	replace
1576	[BUG]  [BUGGY]  Encoder.getInstance().encodeCamera(pString,  caverphone);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.getInstance().encodeCamera(pString,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.getInstance().encodeCamera(pString,  caverphone);	  Encoder.getInstance().encodeCamera(pString);    	non-compiled	[CE]  	263	None	replace
1577	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   ".   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
1578	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( ": "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   ".   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
1579	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "_ "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   ".   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
1580	[BUG]  [BUGGY]  Parchet.checkState(!pString.equals( "[ "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(!pString.equals( "[ "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(!pString.equals( "[ "))  {  throw  new  IllegalArgumentException( " ");  }	  Parchet.checkState(!pString.equals(   ".   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
1581	[BUG]  [BUGGY]  Context.checkState(pString  ==  null);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Context.checkState(pString  ==  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Context.checkState(pString  ==  null);	  Context.checkState(pString!=    null);    	non-compiled	[CE]  	7	None	replace
1582	[BUG]  [BUGGY]  Context.checkState(pString!=  null  &&  pString.length()  >  0);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Context.checkState(pString!=  null  &&  pString.length()  >  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Context.checkState(pString!=  null  &&  pString.length()  >  0);	  Context.checkState(pString!=    null);    	non-compiled	[CE]  	7	None	replace
1583	[BUG]  [BUGGY]  Context.checkState(pString!=  null  &&  pString.length()  ==  0);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Context.checkState(pString!=  null  &&  pString.length()  ==  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Context.checkState(pString!=  null  &&  pString.length()  ==  0);	  Context.checkState(pString!=    null);    	non-compiled	[CE]  	7	None	replace
1584	[BUG]  [BUGGY]  Context.checkState(pString  >=  null);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Context.checkState(pString  >=  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Context.checkState(pString  >=  null);	  Context.checkState(pString!=    null);    	non-compiled	[CE]  	7	None	replace
1585	[BUG]  [BUGGY]  Context.checkState(cString!=  null);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Context.checkState(cString!=  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Context.checkState(cString!=  null);	  Context.checkState(pString!=    null);    	non-compiled	[CE]  	7	None	replace
1586	[BUG]  [BUGGY]  Context.checkState(pString  ==  null,  caverphone);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Context.checkState(pString  ==  null,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Context.checkState(pString  ==  null,  caverphone);	  Context.checkState(pString!=    null);    	non-compiled	[CE]  	7	None	replace
1587	[BUG]  [BUGGY]  Context.checkState(pString!=  null  &&  pString.equals( " "));  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Context.checkState(pString!=  null  &&  pString.equals( " "));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Context.checkState(pString!=  null  &&  pString.equals( " "));	  Context.checkState(pString!=    null);    	non-compiled	[CE]  	7	None	replace
1588	[BUG]  [BUGGY]  Context.checkState(pString!=  null,  caverphone);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Context.checkState(pString!=  null,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Context.checkState(pString!=  null,  caverphone);	  Context.checkState(pString!=    null);    	non-compiled	[CE]  	7	None	replace
1589	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }	  if(pString.length()    ==    2)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	518	None	replace
1590	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1));  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1));	  if(pString.length()    ==    2)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	518	None	replace
1591	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(1))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(1))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(1))  {  return  String.valueOf(pString.charAt(1));  }	  if(pString.length()    ==    2)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	518	None	replace
1592	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(2));  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(2));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(2));  }	  if(pString.length()    ==    2)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	518	None	replace
1593	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(0));  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(0));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(0));  }	  if(pString.length()    ==    1)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	515	None	replace
1594	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0))||  Character.isUpperCase(pString.charAt(0));  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0))||  Character.isUpperCase(pString.charAt(0));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0))||  Character.isUpperCase(pString.charAt(0));	  if(pString.length()    ==    1)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(0));    }    	non-compiled	[CE]  	515	None	replace
1595	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	329	None	replace
1596	[BUG]  [BUGGY]  Character.isLetter(pString.length())&&!Character.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.length())&&!Character.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.length())&&!Character.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	329	None	replace
1597	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(0))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	329	None	replace
1598	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  &&!Character.isUpperCase(pString.charAt(1))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	329	None	replace
1599	[BUG]  [BUGGY]  String  pString  =  pString.toCharArray();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toCharArray();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toCharArray();	  char    pString    =    pString.toCharArray();    	non-compiled	[CE]  	88	None	replace
1600	[BUG]  [BUGGY]  String  pString  =  new  String(pString.toCharArray());  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  new  String(pString.toCharArray());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  new  String(pString.toCharArray());	  char    pString    =    pString.toCharArray();    	non-compiled	[CE]  	88	None	replace
1601	[BUG]  [BUGGY]  String  pString  =  pString.tocharArray();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.tocharArray();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.tocharArray();	  char    pString    =    pString.toCharArray();    	non-compiled	[CE]  	88	None	replace
1602	[BUG]  [BUGGY]  String  pString  =  pString.toForArray();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toForArray();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toForArray();	  char    pString    =    pString.toCharArray();    	non-compiled	[CE]  	88	None	replace
1603	[BUG]  [BUGGY]  String  pString  =  this.pString.toCharArray();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  this.pString.toCharArray();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  this.pString.toCharArray();	  char    pString    =    pString.toCharArray();    	non-compiled	[CE]  	88	None	replace
1604	[BUG]  [BUGGY]  String  pString  =  pString.toCHARArray();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toCHARArray();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toCHARArray();	  char    pString    =    pString.toCharArray();    	non-compiled	[CE]  	88	None	replace
1605	[BUG]  [BUGGY]  String  pString  =  pString.toFormat();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toFormat();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toFormat();	  char    pString    =    pString.toCharArray();    	non-compiled	[CE]  	88	None	replace
1606	[BUG]  [BUGGY]  String  pString  =  p.toCharArray();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  p.toCharArray();  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  p.toCharArray();	  char    pString    =    pString.toCharArray();    	non-compiled	[CE]  	88	None	replace
1607	[BUG]  [BUGGY]  return  getCamerphone(pString.toUpperCase());  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString.toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString.toUpperCase());	  return    getCamerphone(pString.toLowerCase());    	non-compiled	[CE]  	95	None	replace
1608	[BUG]  [BUGGY]  return  getCamerphone(pString.toLowerCase()  +  1);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString.toLowerCase()  +  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString.toLowerCase()  +  1);	  return    getCamerphone(pString.toLowerCase());    	non-compiled	[CE]  	95	None	replace
1609	[BUG]  [BUGGY]  return  getCamerphone(pString.toLowerCase(),  null);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString.toLowerCase(),  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString.toLowerCase(),  null);	  return    getCamerphone(pString.toLowerCase());    	non-compiled	[CE]  	95	None	replace
1610	[BUG]  [BUGGY]  String  pString  =  getCamerphone(pString.toLowerCase());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  getCamerphone(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  getCamerphone(pString.toLowerCase());	  return    getCamerphone(pString.toLowerCase());    	non-compiled	[CE]  	95	None	replace
1611	[BUG]  [BUGGY]  return  getCamerphone(pString.toLowerCase()).encode(pString);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString.toLowerCase()).encode(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString.toLowerCase()).encode(pString);	  return    getCamerphone(pString.toLowerCase());    	non-compiled	[CE]  	95	None	replace
1612	[BUG]  [BUGGY]  return  getCamerphone(pString.substring(0,  pString.length()  -  1));  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString.substring(0,  pString.length()  -  1));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString.substring(0,  pString.length()  -  1));	  return    getCamerphone(pString.toLowerCase());    	non-compiled	[CE]  	95	None	replace
1613	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.toUpperCase());  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.toUpperCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.toUpperCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	138	None	replace
1614	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toLowerCase());  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	138	None	replace
1615	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toLowerCase());  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toLowerCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toLowerCase());  }	  if(pString!=    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	138	None	replace
1616	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	431	None	replace
1617	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	431	None	replace
1618	[BUG]  [BUGGY]  MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isUpperCase(pString.toUpperCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isUpperCase(pString.toUpperCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isUpperCase(pString.toUpperCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	431	None	replace
1619	[BUG]  [BUGGY]  final  MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  MutableString  caverphone(pString.toLowerCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	431	None	replace
1620	[BUG]  [BUGGY]  MutableString  caverphone(pString,  true)  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString,  true)  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString,  true)  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	431	None	replace
1621	[BUG]  [BUGGY]  MutableString  caverphone(pString,  false)  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString,  false)  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString,  false)  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	431	None	replace
1622	[BUG]  [BUGGY]  MutableString  caverphone(pString.toLowerCase(),  false)  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString.toLowerCase(),  false)  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString.toLowerCase(),  false)  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	431	None	replace
1623	[BUG]  [BUGGY]  MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	MutableString  caverphone(pString.toUpperCase())  {  if(!Character.isUpperCase(pString.toLowerCase()))  {  throw  new  IllegalArgumentException( " ");  }	  MutableString    caverphone(pString.toLowerCase())    {    if(!Character.isUpperCase(pString.toLowerCase()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	431	None	replace
1624	[BUG]  [BUGGY]  Character.isDigit(pString.toCharArray()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.toCharArray()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.toCharArray()))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	235	None	replace
1625	[BUG]  [BUGGY]  Character.isISOControl(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isISOControl(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isISOControl(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	235	None	replace
1626	[BUG]  [BUGGY]  Character.isDigit(pString.length()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.length()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.length()))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	235	None	replace
1627	[BUG]  [BUGGY]  CharTypes.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	235	None	replace
1628	[BUG]  [BUGGY]  Character.isWhitespace(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isWhitespace(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isWhitespace(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ");  }	  Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	235	None	replace
1629	[BUG]  [BUGGY]  String  caverphone(pString,  0,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  0,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  0,  0);	  String    caverphone(pString,    0);    	non-compiled	[CE]  	90	None	replace
1630	[BUG]  [BUGGY]  String  caverphone(pString,  1);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  1);	  String    caverphone(pString,    0);    	non-compiled	[CE]  	90	None	replace
1631	[BUG]  [BUGGY]  String  caverphone(pString,  0L);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  0L);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  0L);	  String    caverphone(pString,    0);    	non-compiled	[CE]  	90	None	replace
1632	[BUG]  [BUGGY]  String  caverphone(pString,  0,  null);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  0,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  0,  null);	  String    caverphone(pString,    0);    	non-compiled	[CE]  	90	None	replace
1633	[BUG]  [BUGGY]  String  caverphone(pString,  2);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  2);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  2);	  String    caverphone(pString,    0);    	non-compiled	[CE]  	90	None	replace
1634	[BUG]  [BUGGY]  String  caverphone(pString,  0,  true);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString,  0,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString,  0,  true);	  String    caverphone(pString,    0);    	non-compiled	[CE]  	90	None	replace
1635	[BUG]  [BUGGY]  if(pString!=  null)  {  return  String.valueOf(pString.trim());  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  String.valueOf(pString.trim());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  String.valueOf(pString.trim());  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.trim();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	419	None	replace
1636	[BUG]  [BUGGY]  if(pString.length()!=  0)  {  return  encode(pString);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()!=  0)  {  return  encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()!=  0)  {  return  encode(pString);  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.trim();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	419	None	replace
1637	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  String.valueOf(pString.trim());  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  String.valueOf(pString.trim());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  String.valueOf(pString.trim());  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.trim();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	419	None	replace
1638	[BUG]  [BUGGY]  safeCamera.encode(pString,  null);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  safeCamera.encode(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	safeCamera.encode(pString,  null);	  safeCamera.encode(pString);    	non-compiled	[CE]  	276	None	replace
1639	[BUG]  [BUGGY]  safeCamera.encode(pString,  this.caverphone);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  safeCamera.encode(pString,  this.caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	safeCamera.encode(pString,  this.caverphone);	  safeCamera.encode(pString);    	non-compiled	[CE]  	276	None	replace
1640	[BUG]  [BUGGY]  safeCamera.encode(pString,  0);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  safeCamera.encode(pString,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	safeCamera.encode(pString,  0);	  safeCamera.encode(pString);    	non-compiled	[CE]  	276	None	replace
1641	[BUG]  [BUGGY]  safeCamera.encode(pString,  caverphone);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  safeCamera.encode(pString,  caverphone);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	safeCamera.encode(pString,  caverphone);	  safeCamera.encode(pString);    	non-compiled	[CE]  	276	None	replace
1642	[BUG]  [BUGGY]  safeCamera.encode(pString,  this);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  safeCamera.encode(pString,  this);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	safeCamera.encode(pString,  this);	  safeCamera.encode(pString);    	non-compiled	[CE]  	276	None	replace
1643	[BUG]  [BUGGY]  safeCamera.encode(pString,  true);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  safeCamera.encode(pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	safeCamera.encode(pString,  true);	  safeCamera.encode(pString);    	non-compiled	[CE]  	276	None	replace
1644	[BUG]  [BUGGY]  safeCamera.decode(pString);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  safeCamera.decode(pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	safeCamera.decode(pString);	  safeCamera.encode(pString);    	non-compiled	[CE]  	276	None	replace
1645	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	314	None	replace
1646	[BUG]  [BUGGY]  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	314	None	replace
1647	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	314	None	replace
1648	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	314	None	replace
1649	[BUG]  [BUGGY]  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	314	None	replace
1650	[BUG]  [BUGGY]  this.encode(pString);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  this.encode(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	this.encode(pString);	  return    this.encode(pString);    this.encode(pString);    	non-compiled	[CE]  	255	None	replace
1651	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  this.encode(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  this.encode(pString);  }	  return    this.encode(pString);    this.encode(pString);    	non-compiled	[CE]  	255	None	replace
1652	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    this.encode(pString);    this.encode(pString);    	non-compiled	[CE]  	255	None	replace
1653	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }	  return    encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  	198	None	replace
1654	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.substring(0,  pString.length());  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.substring(0,  pString.length());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.substring(0,  pString.length());  }	  return    encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  	198	None	replace
1655	[BUG]  [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.substring(0,  pString.length());  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.substring(0,  pString.length());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.substring(0,  pString.length());  }	  return    encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  	198	None	replace
1656	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  encode(pString);  }  else  {  String  pString  =(pString  ==  null)?  null  :  pString.substring(0,  pString.length());  }	  return    encode(pString);    String    pString    =(pString!=    null)?    null    :    pString.substring(0,    pString.length());    	non-compiled	[CE]  	198	None	replace
1657	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  false,  0);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  false,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  false,  0);	  CharSequence    caverphone(pString,    false);    	non-compiled	[CE]  	221	None	replace
1658	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  false,  true);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  false,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  false,  true);	  CharSequence    caverphone(pString,    false);    	non-compiled	[CE]  	221	None	replace
1659	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  false,  null);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  false,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  false,  null);	  CharSequence    caverphone(pString,    false);    	non-compiled	[CE]  	221	None	replace
1660	[BUG]  [BUGGY]  CharSequence  caverphone(scope,  pString,  false);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(scope,  pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(scope,  pString,  false);	  CharSequence    caverphone(pString,    false);    	non-compiled	[CE]  	221	None	replace
1661	[BUG]  [BUGGY]  CharSequence  caverphone(cString,  false);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(cString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(cString,  false);	  CharSequence    caverphone(pString,    false);    	non-compiled	[CE]  	221	None	replace
1662	[BUG]  [BUGGY]  CharSequence  caverphone(false,  pString);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(false,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(false,  pString);	  CharSequence    caverphone(pString,    false);    	non-compiled	[CE]  	221	None	replace
1663	[BUG]  [BUGGY]  if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	185	None	replace
1664	[BUG]  [BUGGY]  if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(getCaverphone()!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone.encode(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	185	None	replace
1665	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  string.encode(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  string.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  string.encode(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	185	None	replace
1666	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone().toLowerCase();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone().toLowerCase();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone().toLowerCase();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	185	None	replace
1667	[BUG]  [BUGGY]  if(caverphone  ==  null)  {  String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone  ==  null)  {  String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone  ==  null)  {  String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    getCaverphone();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	437	None	replace
1668	[BUG]  [BUGGY]  if(caverphone!=  null)  {  String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone!=  null)  {  String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone!=  null)  {  String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    getCaverphone();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	437	None	replace
1669	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  getCaverphone();  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  getCaverphone();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  getCaverphone();  if(pString  ==  null)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    getCaverphone();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	437	None	replace
1670	[BUG]  [BUGGY]  String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    getCaverphone();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	437	None	replace
1671	[BUG]  [BUGGY]  Characterphone  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Characterphone  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Characterphone  pString  =  getCaverphone();  if(pString!=  null)  {  return  pString;  }	  if(pString    ==    null)    {    String    pString    =    getCaverphone();    if(pString!=    null)    {    return    pString;    }    	non-compiled	[CE]  	437	None	replace
1672	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  p.toLowerCase();  if(pString  ==  null)  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	161	None	replace
1673	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	358	None	replace
1674	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	334	None	replace
1675	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	334	None	replace
1676	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	334	None	replace
1677	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	334	None	replace
1678	[BUG]  [BUGGY]  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	334	None	replace
1679	[BUG]  [BUGGY]  if(cmv!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cmv!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cmv!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null)    {    return    pString;    }    	non-compiled	[CE]  	334	None	replace
1680	[BUG]  [BUGGY]  if(pString  ==  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver!=  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	106	None	replace
1681	[BUG]  [BUGGY]  if(pString  ==  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  Annotation  <  String>  caver  =  getCaver(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	106	None	replace
1682	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverType(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverType(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverType(pString);  if(caver  ==  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver    ==    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	106	None	replace
1683	[BUG]  [BUGGY]  return  cacheFactory(pString,  true);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheFactory(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheFactory(pString,  true);	  return    cacheFactory(pString);    	non-compiled	[CE]  	379	None	replace
1684	[BUG]  [BUGGY]  return  cacheFactory(pString,  null);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheFactory(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheFactory(pString,  null);	  return    cacheFactory(pString);    	non-compiled	[CE]  	379	None	replace
1685	[BUG]  [BUGGY]  return  cacheFactory(pString,  false);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheFactory(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheFactory(pString,  false);	  return    cacheFactory(pString);    	non-compiled	[CE]  	379	None	replace
1686	[BUG]  [BUGGY]  return  cacheFactory(encode(pString));  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheFactory(encode(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheFactory(encode(pString));	  return    cacheFactory(pString);    	non-compiled	[CE]  	379	None	replace
1687	[BUG]  [BUGGY]  return  cacheFactory(pString,  0);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheFactory(pString,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheFactory(pString,  0);	  return    cacheFactory(pString);    	non-compiled	[CE]  	379	None	replace
1688	[BUG]  [BUGGY]  return  cacheFactory(ctxt,  pString);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheFactory(ctxt,  pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheFactory(ctxt,  pString);	  return    cacheFactory(pString);    	non-compiled	[CE]  	379	None	replace
1689	[BUG]  [BUGGY]  return  cacheFactory(pString,  StringEncoder.UTF8);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheFactory(pString,  StringEncoder.UTF8);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheFactory(pString,  StringEncoder.UTF8);	  return    cacheFactory(pString);    	non-compiled	[CE]  	379	None	replace
1690	[BUG]  [BUGGY]  return  cacheFactory(pString,  this.encoder);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheFactory(pString,  this.encoder);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheFactory(pString,  this.encoder);	  return    cacheFactory(pString);    	non-compiled	[CE]  	379	None	replace
1691	[BUG]  [BUGGY]  return  cacheFactory(new  String(pString));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheFactory(new  String(pString));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheFactory(new  String(pString));	  return    cacheFactory(pString);    	non-compiled	[CE]  	379	None	replace
1692	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaverphone(pString.toLowerCase());  if(caver!=  null)  {  return  caverphone(pString);  }	  Annotation    <    String>    caver    =    getCaverphone(pString);    if(caver!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	104	None	replace
1693	[BUG]  [BUGGY]  return  caverphone(pString,  false,  false,  false);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  false,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  false,  false);	  return    caverphone(pString,    false,    true);    	non-compiled	[CE]  	27	None	replace
1694	[BUG]  [BUGGY]  return  encode(pString,  false,  false);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  false,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  false,  false);	  return    caverphone(pString,    false,    true);    	non-compiled	[CE]  	27	None	replace
1695	[BUG]  [BUGGY]  return  super.encode(pString,  false,  true);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  super.encode(pString,  false,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  super.encode(pString,  false,  true);	  return    caverphone(pString,    false,    true);    	non-compiled	[CE]  	27	None	replace
1696	[BUG]  [BUGGY]  if(pString!=  null)  {  safeCaverphone(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  safeCaverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  safeCaverphone(pString);  }	  safeCaverphone(pString);    	non-compiled	[CE]  	272	None	replace
1697	[BUG]  [BUGGY]  safeCaverphone(pString.toLowerCase());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  safeCaverphone(pString.toLowerCase());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	safeCaverphone(pString.toLowerCase());	  safeCaverphone(pString);    	non-compiled	[CE]  	272	None	replace
1698	[BUG]  [BUGGY]  if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  safeCaverphone(pString);    	non-compiled	[CE]  	272	None	replace
1699	[BUG]  [BUGGY]  if(pString  ==  null)  {  safeCaverphone(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  safeCaverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  safeCaverphone(pString);  }	  safeCaverphone(pString);    	non-compiled	[CE]  	272	None	replace
1700	[BUG]  [BUGGY]  if(pString  ==  null)  {  safeCaverphone(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  safeCaverphone(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  safeCaverphone(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  safeCaverphone(pString);    	non-compiled	[CE]  	272	None	replace
1701	[BUG]  [BUGGY]  if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  return  super.encode(pString);  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  return  super.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  return  super.encode(pString);  }	  safeCaverphone(pString);    	non-compiled	[CE]  	272	None	replace
1702	[BUG]  [BUGGY]  if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  return  caverphone(pString);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  return  caverphone(pString);  }	  safeCaverphone(pString);    	non-compiled	[CE]  	272	None	replace
1703	[BUG]  [BUGGY]  if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  caverphone(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  safeCaverphone(pString);  }  else  {  caverphone(pString);  }	  safeCaverphone(pString);    	non-compiled	[CE]  	272	None	replace
1704	[BUG]  [BUGGY]  CharTypes.encode(pString,  this)  ==  null)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.encode(pString,  this)  ==  null)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.encode(pString,  this)  ==  null)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	409	None	replace
1705	[BUG]  [BUGGY]  CharTypes.encode(pString,  this)  ==  null)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.encode(pString,  this)  ==  null)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.encode(pString,  this)  ==  null)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	409	None	replace
1706	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(1))  {  return  pString;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(1))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(1))  {  return  pString;  }	  if(caverphone(pString)    ==    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	409	None	replace
1707	[BUG]  [BUGGY]  CharTypes.encode(pString,  this)  ==  null)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  p;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.encode(pString,  this)  ==  null)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  p;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.encode(pString,  this)  ==  null)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  p;  }	  if(caverphone(pString)    ==    null)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	409	None	replace
1708	[BUG]  [BUGGY]  return(this.encode(pString)!=  null)?  null  :  this.encode(pString);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.encode(pString)!=  null)?  null  :  this.encode(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.encode(pString)!=  null)?  null  :  this.encode(pString);	  return(pString!=    null)?    null    :    this.encode(pString);    	non-compiled	[CE]  	35	None	replace
1709	[BUG]  [BUGGY]  return  this.caverphone(pString,  null,  true);  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  null,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  null,  true);	  return    this.caverphone(pString,    true);    	non-compiled	[CE]  	140	None	replace
1710	[BUG]  [BUGGY]  return  pString.caverphone(this.caverphone(pString,  false);  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  pString.caverphone(this.caverphone(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  pString.caverphone(this.caverphone(pString,  false);	  return    this.caverphone(pString,    true);    	non-compiled	[CE]  	140	None	replace
1711	[BUG]  [BUGGY]  return  this.caverphone(null,  pString,  true);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(null,  pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(null,  pString,  true);	  return    this.caverphone(pString,    true);    	non-compiled	[CE]  	140	None	replace
1712	[BUG]  [BUGGY]  return  this.caverphone(this.pString,  false);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(this.pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(this.pString,  false);	  return    this.caverphone(pString,    true);    	non-compiled	[CE]  	140	None	replace
1713	[BUG]  [BUGGY]  return  getCamerphone(pString,  null,  0);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  null,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  null,  0);	  return    getCamerphone(pString,    null);    	non-compiled	[CE]  	94	None	replace
1714	[BUG]  [BUGGY]  return  getCamerphone(pString,  null,  null);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  null,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  null,  null);	  return    getCamerphone(pString,    null);    	non-compiled	[CE]  	94	None	replace
1715	[BUG]  [BUGGY]  return  getCamerphone(pString,  null,  false);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  null,  false);	  return    getCamerphone(pString,    null);    	non-compiled	[CE]  	94	None	replace
1716	[BUG]  [BUGGY]  return  getCamerphone(pString,  null,  true);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  null,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  null,  true);	  return    getCamerphone(pString,    null);    	non-compiled	[CE]  	94	None	replace
1717	[BUG]  [BUGGY]  return  getCamerphone(pString,  null,  this);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  null,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  null,  this);	  return    getCamerphone(pString,    null);    	non-compiled	[CE]  	94	None	replace
1718	[BUG]  [BUGGY]  return  getCamerphone(pString,  null,  -1);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  null,  -1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  null,  -1);	  return    getCamerphone(pString,    null);    	non-compiled	[CE]  	94	None	replace
1719	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	63	None	replace
1720	[BUG]  [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)  ==  null)  {  String  pString  =  pString.toUpperCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	63	None	replace
1721	[BUG]  [BUGGY]  Parchet.checkState(pString  ==  null);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(pString  ==  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(pString  ==  null);	  Parchet.checkState(pString!=    null);    	non-compiled	[CE]  	311	None	replace
1722	[BUG]  [BUGGY]  Parchet.checkState(cacheverphone(pString)!=  null);  [CE]  unclosed  string  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(cacheverphone(pString)!=  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(cacheverphone(pString)!=  null);	  Parchet.checkState(pString!=    null);    	non-compiled	[CE]  unclosed  string  literal	311	None	replace
1723	[BUG]  [BUGGY]  Parchet.checkState(pString!=  null,  pString.length());  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(pString!=  null,  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(pString!=  null,  pString.length());	  Parchet.checkState(pString!=    null);    	non-compiled	[CE]  	311	None	replace
1724	[BUG]  [BUGGY]  Parchet.checkState(pString!=  null,  pString);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(pString!=  null,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(pString!=  null,  pString);	  Parchet.checkState(pString!=    null);    	non-compiled	[CE]  	311	None	replace
1725	[BUG]  [BUGGY]  Parchet.checkState(pString  ==  null,  pString);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(pString  ==  null,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(pString  ==  null,  pString);	  Parchet.checkState(pString!=    null);    	non-compiled	[CE]  	311	None	replace
1726	[BUG]  [BUGGY]  Parchet.checkState(pString  ==  null,  pString.length());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(pString  ==  null,  pString.length());  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(pString  ==  null,  pString.length());	  Parchet.checkState(pString!=    null);    	non-compiled	[CE]  	311	None	replace
1727	[BUG]  [BUGGY]  Parchet.checkState(null,  pString!=  null);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(null,  pString!=  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(null,  pString!=  null);	  Parchet.checkState(pString!=    null);    	non-compiled	[CE]  	311	None	replace
1728	[BUG]  [BUGGY]  Parchet.checkState(caverphone!=  null);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Parchet.checkState(caverphone!=  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Parchet.checkState(caverphone!=  null);	  Parchet.checkState(pString!=    null);    	non-compiled	[CE]  	311	None	replace
1729	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString.toLowerCase();  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString.toLowerCase();  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString.toLowerCase();  }	  [Delete]    	non-compiled	[CE]  	458	None	replace
1730	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  String  pString  =  pString.substring(0,  pString.length()  -  1);  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  String  pString  =  pString.substring(0,  pString.length()  -  1);  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  String  pString  =  pString.substring(0,  pString.length()  -  1);  if(pString.length()  ==  0)  {  return  pString;  }	  [Delete]    	non-compiled	[CE]  	458	None	replace
1731	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  String  pString  =  pString.substring(0,  pString.length()  -  1);  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  String  pString  =  pString.substring(0,  pString.length()  -  1);  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  String  pString  =  pString.substring(0,  pString.length()  -  1);  if(pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  [Delete]    	non-compiled	[CE]  	458	None	replace
1732	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.substring(0,  pString.length()  -  1);  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.substring(0,  pString.length()  -  1);  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.substring(0,  pString.length()  -  1);  if(pString.length()  ==  0)  {  return  pString;  }	  [Delete]    	non-compiled	[CE]  	458	None	replace
1733	[BUG]  [BUGGY]  return  caverphone(pString,  false,  null,  null);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  null,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  null,  null);	  return    caverphone(pString,    false,    null);    	non-compiled	[CE]  	26	None	replace
1734	[BUG]  [BUGGY]  return  caverphone(pString,  false,  null,  0);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  null,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  null,  0);	  return    caverphone(pString,    false,    null);    	non-compiled	[CE]  	26	None	replace
1735	[BUG]  [BUGGY]  return  caverphone(pString,  false,  null,  true);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  null,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  null,  true);	  return    caverphone(pString,    false,    null);    	non-compiled	[CE]  	26	None	replace
1736	[BUG]  [BUGGY]  String  pString  =  caverphone(pString,  false,  null);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  caverphone(pString,  false,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  caverphone(pString,  false,  null);	  return    caverphone(pString,    false,    null);    	non-compiled	[CE]  	26	None	replace
1737	[BUG]  [BUGGY]  return  cacheverphone(pString,  true,  null);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  true,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  true,  null);	  return    caverphone(pString,    false,    null);    	non-compiled	[CE]  	26	None	replace
1738	[BUG]  [BUGGY]  Annotation  <  String>  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	299	None	replace
1739	[BUG]  [BUGGY]  final  Annotation  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	299	None	replace
1740	[BUG]  [BUGGY]  Annotation  caverphone(int  pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(int  pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(int  pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	299	None	replace
1741	[BUG]  [BUGGY]  Annotation  <?>  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <?>  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <?>  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	299	None	replace
1742	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  {  if(pString!=  null)  {  return  caverphone(pString);  }	  Annotation    caverphone(pString)    {    if(pString!=    null)    {    return    caverphone(pString);    }    	non-compiled	[CE]  	299	None	replace
1743	[BUG]  [BUGGY]  String  caverphone(pString.length(),  true)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.length(),  true)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.length(),  true)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }	  String    caverphone(pString.length())    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	210	None	replace
1744	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(1));  }	  if(pString.length()    ==    1)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	517	None	replace
1745	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1));  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(1));	  if(pString.length()    ==    1)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	517	None	replace
1746	[BUG]  [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isLetter(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }	  if(pString.length()    ==    1)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	517	None	replace
1747	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))&&!Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }	  if(pString.length()    ==    1)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	517	None	replace
1748	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString!=    null    ||    pString.length()    ==    0)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	313	None	replace
1749	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pStr  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pStr  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pStr	  if(pString!=    null    ||    pString.length()    ==    0)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	313	None	replace
1750	[BUG]  [BUGGY]  return  caver(pString.toLowerCase()  +  1);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString.toLowerCase()  +  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString.toLowerCase()  +  1);	  return    caver(pString.toLowerCase());    	non-compiled	[CE]  	202	None	replace
1751	[BUG]  [BUGGY]  return  caver(pString.toUpperCase());  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString.toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString.toUpperCase());	  return    caver(pString.toLowerCase());    	non-compiled	[CE]  	202	None	replace
1752	[BUG]  [BUGGY]  return  caver(pString.toLowerCase(),  false);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString.toLowerCase(),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString.toLowerCase(),  false);	  return    caver(pString.toLowerCase());    	non-compiled	[CE]  	202	None	replace
1753	[BUG]  [BUGGY]  return  caver(pString.toLowerCase(),  true);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString.toLowerCase(),  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString.toLowerCase(),  true);	  return    caver(pString.toLowerCase());    	non-compiled	[CE]  	202	None	replace
1754	[BUG]  [BUGGY]  return  this.caver(pString.toLowerCase());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caver(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caver(pString.toLowerCase());	  return    caver(pString.toLowerCase());    	non-compiled	[CE]  	202	None	replace
1755	[BUG]  [BUGGY]  return  caver(pString.toLowerCase(),  null);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString.toLowerCase(),  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString.toLowerCase(),  null);	  return    caver(pString.toLowerCase());    	non-compiled	[CE]  	202	None	replace
1756	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	478	None	replace
1757	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( "  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( "  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( "	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	478	None	replace
1758	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	478	None	replace
1759	[BUG]  [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString)!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(caverphone(pString)!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	478	None	replace
1760	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(1));  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	281	None	replace
1761	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(1)))  {  return  String.valueOf(pString.charAt(1));  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	281	None	replace
1762	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(2));  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(2));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  String.valueOf(pString.charAt(2));  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isUpperCase(pString.charAt(0)))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	281	None	replace
1763	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.toUpperCase());  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.toUpperCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(pString.toUpperCase());  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.toUpperCase());    }    	non-compiled	[CE]  	321	None	replace
1764	[BUG]  [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone  =  getCaverphone();  if(caverphone  ==  null)  {  return  caverphone(pString.toUpperCase());  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.toUpperCase());    }    	non-compiled	[CE]  	321	None	replace
1765	[BUG]  [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toUpperCase());  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toUpperCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toUpperCase());  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.toUpperCase());    }    	non-compiled	[CE]  	321	None	replace
1766	[BUG]  [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toUpperCase());  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toUpperCase());  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone(cString.toUpperCase());  }	  if(pString    ==    null)    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone(pString.toUpperCase());    }    	non-compiled	[CE]  	321	None	replace
1767	[BUG]  [BUGGY]  return  caverphone(pString,  0,  1);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  1);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  1);	  return    caverphone(pString,    0,    0);    	non-compiled	[CE]  	175	None	replace
1768	[BUG]  [BUGGY]  return  encode(pString,  0,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  0,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  0,  0);	  return    caverphone(pString,    0,    0);    	non-compiled	[CE]  	175	None	replace
1769	[BUG]  [BUGGY]  return  caverphone(pString,  0,  4);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  4);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  4);	  return    caverphone(pString,    0,    0);    	non-compiled	[CE]  	175	None	replace
1770	[BUG]  [BUGGY]  return  caverphone(pString,  0,  2);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  2);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  2);	  return    caverphone(pString,    0,    0);    	non-compiled	[CE]  	175	None	replace
1771	[BUG]  [BUGGY]  return  caverphone(pString,  0,  0,  0);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  0,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  0,  0);	  return    caverphone(pString,    0,    0);    	non-compiled	[CE]  	175	None	replace
1772	[BUG]  [BUGGY]  if(pString!=  null)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	417	None	replace
1773	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	417	None	replace
1774	[BUG]  [BUGGY]  if(pString!=  null)  {  return  pString.toLowerCase();  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  pString.toLowerCase();  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  pString.toLowerCase();  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	417	None	replace
1775	[BUG]  [BUGGY]  if(pString!=  null)  {  return  pString.toLowerCase();  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  pString.toLowerCase();  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  pString.toLowerCase();  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	417	None	replace
1776	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	417	None	replace
1777	[BUG]  [BUGGY]  if(pString!=  null)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	417	None	replace
1778	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  pString;  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()!=  0)  {  return  pString;  }	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	417	None	replace
1779	[BUG]  [BUGGY]  if(pString!=  null)  {  return  pString.toLowerCase();  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pStr  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  pString.toLowerCase();  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pStr  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  pString.toLowerCase();  }  else  {  String  pString  =  pString.toLowerCase();  if(pString.length()  ==  0)  {  return  pStr	  return    encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	417	None	replace
1780	[BUG]  [BUGGY]  if(this.encode(pString)!=  null)  {  return  super.encode(pString);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)!=  null)  {  return  super.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)!=  null)  {  return  super.encode(pString);  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    super.encode(pString);    }    	non-compiled	[CE]  	425	None	replace
1781	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  this.encode(pString);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  this.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  this.encode(pString);  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    super.encode(pString);    }    	non-compiled	[CE]  	425	None	replace
1782	[BUG]  [BUGGY]  if(pString!=  null)  {  return  super.encode(pString);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  super.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  super.encode(pString);  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    super.encode(pString);    }    	non-compiled	[CE]  	425	None	replace
1783	[BUG]  [BUGGY]  if(this.encode(pString)  ==  null)  {  return  super.encode(pString);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.encode(pString)  ==  null)  {  return  super.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.encode(pString)  ==  null)  {  return  super.encode(pString);  }	  return    this.encode(pString);    if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString    ==    null)    {    return    super.encode(pString);    }    	non-compiled	[CE]  	425	None	replace
1784	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(2)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(2)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(2)))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isDigit(pString.charAt(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	344	None	replace
1785	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(1)))  {  throw  new  IllegalArgumentException( " ");  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isDigit(pString.charAt(1)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	344	None	replace
1786	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  pString.charAt(1));  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  pString.charAt(1));  }	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	208	None	replace
1787	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  0);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  0);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  0);  }	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	208	None	replace
1788	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	208	None	replace
1789	[BUG]  [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  pString.charAt(2));  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  pString.charAt(2));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(0),  pString.charAt(2));  }	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	208	None	replace
1790	[BUG]  [BUGGY]  CharTypes.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharTypes.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharTypes.isUpperCase(pString.charAt(0))  {  return  String.valueOf(pString.charAt(1));  }	  Character.isUpperCase(pString.charAt(0))    {    return    String.valueOf(pString.charAt(1));    }    	non-compiled	[CE]  	208	None	replace
1791	[BUG]  [BUGGY]  CharSequence  caverphone(pString,  true,  false);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(pString,  true,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(pString,  true,  false);	  CharSequence    caverphone(pString,    true);    	non-compiled	[CE]  	220	None	replace
1792	[BUG]  [BUGGY]  CharSequence  caverphone(ctxt,  pString,  true);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(ctxt,  pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(ctxt,  pString,  true);	  CharSequence    caverphone(pString,    true);    	non-compiled	[CE]  	220	None	replace
1793	[BUG]  [BUGGY]  CharSequence  caverphone(cString,  true);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(cString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(cString,  true);	  CharSequence    caverphone(pString,    true);    	non-compiled	[CE]  	220	None	replace
1794	[BUG]  [BUGGY]  CharSequence  caverphone(scope,  pString,  true);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(scope,  pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(scope,  pString,  true);	  CharSequence    caverphone(pString,    true);    	non-compiled	[CE]  	220	None	replace
1795	[BUG]  [BUGGY]  CharSequence  caverphone(true,  pString);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(true,  pString);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(true,  pString);	  CharSequence    caverphone(pString,    true);    	non-compiled	[CE]  	220	None	replace
1796	[BUG]  [BUGGY]  CharSequence  caverphone(ch,  pString,  true);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  CharSequence  caverphone(ch,  pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	CharSequence  caverphone(ch,  pString,  true);	  CharSequence    caverphone(pString,    true);    	non-compiled	[CE]  	220	None	replace
1797	[BUG]  [BUGGY]  return  this.encodeValue(pString,  0);  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeValue(pString,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeValue(pString,  0);	  return    this.encodeValue(pString);    	non-compiled	[CE]  	335	None	replace
1798	[BUG]  [BUGGY]  return  this.encodeValue(pString,  null);  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeValue(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeValue(pString,  null);	  return    this.encodeValue(pString);    	non-compiled	[CE]  	335	None	replace
1799	[BUG]  [BUGGY]  return  this.encodeValue(pString,  true);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeValue(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeValue(pString,  true);	  return    this.encodeValue(pString);    	non-compiled	[CE]  	335	None	replace
1800	[BUG]  [BUGGY]  return  this.encodeValue(pString,  false);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeValue(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeValue(pString,  false);	  return    this.encodeValue(pString);    	non-compiled	[CE]  	335	None	replace
1801	[BUG]  [BUGGY]  String  pString  =  this.encodeValue(pString);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  this.encodeValue(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  this.encodeValue(pString);	  return    this.encodeValue(pString);    	non-compiled	[CE]  	335	None	replace
1802	[BUG]  [BUGGY]  return  this.encodeValue(pString,  StringEncoder.UTF8);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeValue(pString,  StringEncoder.UTF8);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeValue(pString,  StringEncoder.UTF8);	  return    this.encodeValue(pString);    	non-compiled	[CE]  	335	None	replace
1803	[BUG]  [BUGGY]  return  this.encodeValue(pString,  1.0);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeValue(pString,  1.0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeValue(pString,  1.0);	  return    this.encodeValue(pString);    	non-compiled	[CE]  	335	None	replace
1804	[BUG]  [BUGGY]  return  this.encodeValue(pString,  0,  0);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeValue(pString,  0,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeValue(pString,  0,  0);	  return    this.encodeValue(pString);    	non-compiled	[CE]  	335	None	replace
1805	[BUG]  [BUGGY]  return  this.encodeValue(pString,  0.0);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.encodeValue(pString,  0.0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.encodeValue(pString,  0.0);	  return    this.encodeValue(pString);    	non-compiled	[CE]  	335	None	replace
1806	[BUG]  [BUGGY]  return  caverphone(pString.toUpperCase(),  true);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString.toUpperCase(),  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString.toUpperCase(),  true);	  return    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	130	None	replace
1807	[BUG]  [BUGGY]  return  this.caverphone(pString.toLowerCase(),  false);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString.toLowerCase(),  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString.toLowerCase(),  false);	  return    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	130	None	replace
1808	[BUG]  [BUGGY]  return  cache(pString.toLowerCase(),  true);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cache(pString.toLowerCase(),  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cache(pString.toLowerCase(),  true);	  return    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	130	None	replace
1809	[BUG]  [BUGGY]  return  cacheverphone(pString.toLowerCase(),  true);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString.toLowerCase(),  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString.toLowerCase(),  true);	  return    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	130	None	replace
1810	[BUG]  [BUGGY]  return  cmverphone(pString.toLowerCase(),  true);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cmverphone(pString.toLowerCase(),  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cmverphone(pString.toLowerCase(),  true);	  return    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	130	None	replace
1811	[BUG]  [BUGGY]  return  caverphone(pString.toLowerCase(),  false,  null);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString.toLowerCase(),  false,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString.toLowerCase(),  false,  null);	  return    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	130	None	replace
1812	[BUG]  [BUGGY]  return  caverphone(pString.toLowerCase(),  false,  true);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString.toLowerCase(),  false,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString.toLowerCase(),  false,  true);	  return    caverphone(pString.toLowerCase(),    false);    	non-compiled	[CE]  	130	None	replace
1813	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  caverphone(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  {  return  caverphone(pString);  }	  Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	231	None	replace
1814	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  null;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  {  return  null;  }	  Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	231	None	replace
1815	[BUG]  [BUGGY]  Character.isDigit(pString.length())  {  return  pString;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.length())  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.length())  {  return  pString;  }	  Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	231	None	replace
1816	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  this.caverphone;  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  this.caverphone;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  {  return  this.caverphone;  }	  Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	231	None	replace
1817	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  pString.toCharArray();  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  pString.toCharArray();  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  {  return  pString.toCharArray();  }	  Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	231	None	replace
1818	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  this.caverphone(pString);  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  this.caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  {  return  this.caverphone(pString);  }	  Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	231	None	replace
1819	[BUG]  [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  super.encode(pString);  }  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.charAt(0))  {  return  super.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.charAt(0))  {  return  super.encode(pString);  }	  Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	231	None	replace
1820	[BUG]  [BUGGY]  Character.isDigit(pString.toCharArray())  {  return  pString;  }  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Character.isDigit(pString.toCharArray())  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Character.isDigit(pString.toCharArray())  {  return  pString;  }	  Character.isDigit(pString.charAt(0))    {    return    pString;    }    	non-compiled	[CE]  	231	None	replace
1821	[BUG]  [BUGGY]  return  getCamerphone(pString,  String.class,  null);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  String.class,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  String.class,  null);	  return    getCamerphone(pString,    String.class);    	non-compiled	[CE]  	381	None	replace
1822	[BUG]  [BUGGY]  return  getCamerphone(pString,  String.class,  true);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  String.class,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  String.class,  true);	  return    getCamerphone(pString,    String.class);    	non-compiled	[CE]  	381	None	replace
1823	[BUG]  [BUGGY]  return  getCamerphone(pString,  null,  String.class);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  null,  String.class);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  null,  String.class);	  return    getCamerphone(pString,    String.class);    	non-compiled	[CE]  	381	None	replace
1824	[BUG]  [BUGGY]  return  getCamerphone(pString,  String.class,  0);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  String.class,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  String.class,  0);	  return    getCamerphone(pString,    String.class);    	non-compiled	[CE]  	381	None	replace
1825	[BUG]  [BUGGY]  return  getCamerphone(pString,  String.class,  false);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  String.class,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  String.class,  false);	  return    getCamerphone(pString,    String.class);    	non-compiled	[CE]  	381	None	replace
1826	[BUG]  [BUGGY]  return  getCamerphone(pString,  String.class,  charEncoder);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  String.class,  charEncoder);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  String.class,  charEncoder);	  return    getCamerphone(pString,    String.class);    	non-compiled	[CE]  	381	None	replace
1827	[BUG]  [BUGGY]  return  getCamerphone(pString,  String.class,  this.encoder);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  String.class,  this.encoder);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  String.class,  this.encoder);	  return    getCamerphone(pString,    String.class);    	non-compiled	[CE]  	381	None	replace
1828	[BUG]  [BUGGY]  return  getCamerphone(pString,  boolean.class);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  boolean.class);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  boolean.class);	  return    getCamerphone(pString,    String.class);    	non-compiled	[CE]  	381	None	replace
1829	[BUG]  [BUGGY]  return  caverphone(pString,  true,  null,  null);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  null,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  null,  null);	  return    caverphone(pString,    true,    null);    	non-compiled	[CE]  	31	None	replace
1830	[BUG]  [BUGGY]  return  caverphone(pString,  true,  null,  false);  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  null,  false);	  return    caverphone(pString,    true,    null);    	non-compiled	[CE]  	31	None	replace
1831	[BUG]  [BUGGY]  return  cacheverphone(pString,  false,  null);  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  false,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  false,  null);	  return    caverphone(pString,    true,    null);    	non-compiled	[CE]  	31	None	replace
1832	[BUG]  [BUGGY]  return  caverphone(pString,  true,  null,  0);  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  null,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  null,  0);	  return    caverphone(pString,    true,    null);    	non-compiled	[CE]  	31	None	replace
1833	[BUG]  [BUGGY]  return  this.caverphone(pString,  true,  null);  [CE]  [FE]                                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caverphone(pString,  true,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caverphone(pString,  true,  null);	  return    caverphone(pString,    true,    null);    	non-compiled	[CE]  	31	None	replace
1834	[BUG]  [BUGGY]  return  encode(pString,  true,  null);  [CE]  [FE]                                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  true,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  true,  null);	  return    caverphone(pString,    true,    null);    	non-compiled	[CE]  	31	None	replace
1835	[BUG]  [BUGGY]  return  cachever(pString,  false);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cachever(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cachever(pString,  false);	  return    caver(pString,    true);    	non-compiled	[CE]  	204	None	replace
1836	[BUG]  [BUGGY]  return  caver(this.pString,  pString,  true);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(this.pString,  pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(this.pString,  pString,  true);	  return    caver(pString,    true);    	non-compiled	[CE]  	204	None	replace
1837	[BUG]  [BUGGY]  return  this.caver(pString,  true);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  this.caver(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  this.caver(pString,  true);	  return    caver(pString,    true);    	non-compiled	[CE]  	204	None	replace
1838	[BUG]  [BUGGY]  return  asver(pString,  false);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  asver(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  asver(pString,  false);	  return    caver(pString,    true);    	non-compiled	[CE]  	204	None	replace
1839	[BUG]  [BUGGY]  return  caver(pString,  true,  false);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caver(pString,  true,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caver(pString,  true,  false);	  return    caver(pString,    true);    	non-compiled	[CE]  	204	None	replace
1840	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  null);  if(caver!=  null)  {  return  caver.encode(pString);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  null);  if(caver!=  null)  {  return  caver.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver(pString,  null);  if(caver!=  null)  {  return  caver.encode(pString);  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver!=    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	406	None	replace
1841	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  0);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver(pString,  0);	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver!=    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	406	None	replace
1842	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());  if(caver!=  null)  {  return  caver.encode(pString);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());  if(caver!=  null)  {  return  caver.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver(pString.toLowerCase());  if(caver!=  null)  {  return  caver.encode(pString);  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver!=    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	406	None	replace
1843	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  false);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver(pString,  false);	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver!=    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	406	None	replace
1844	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  false);  if(caver!=  null)  {  return  caver.encode(pString);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  false);  if(caver!=  null)  {  return  caver.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver(pString,  false);  if(caver!=  null)  {  return  caver.encode(pString);  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver!=    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	406	None	replace
1845	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  null);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  null);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver(pString,  null);	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver!=    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	406	None	replace
1846	[BUG]  [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  true);  if(caver!=  null)  {  return  caver.encode(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  caver  =  getCaver(pString,  true);  if(caver!=  null)  {  return  caver.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  caver  =  getCaver(pString,  true);  if(caver!=  null)  {  return  caver.encode(pString);  }	  Annotation    <    String>    caver    =    getCaver(pString);    if(caver!=    null)    {    return    caver.encode(pString);    }    	non-compiled	[CE]  	406	None	replace
1847	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }	  return    this.caverphone(pString);    String    pString    =(pString!=    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	51	None	replace
1848	[BUG]  [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(this.caverphone(pString)!=  null)  {  return  this.caverphone(pString);  }  else  {  String  pString  =(pString!=  null)?  null  :  pString.toLowerCase();  }	  return    this.caverphone(pString);    String    pString    =(pString!=    null)?    null    :    pString.toLowerCase();    	non-compiled	[CE]  	51	None	replace
1849	[BUG]  [BUGGY]  char  pString  =  pString.substring(0,  pString.length()  -  1);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  pString  =  pString.substring(0,  pString.length()  -  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  pString  =  pString.substring(0,  pString.length()  -  1);	  String    caverphone(pString,    true);    	non-compiled	[CE]  	285	None	replace
1850	[BUG]  [BUGGY]  char  pString  =  pString.substring(0,  pString.length()  -  2);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  pString  =  pString.substring(0,  pString.length()  -  2);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  pString  =  pString.substring(0,  pString.length()  -  2);	  String    caverphone(pString,    true);    	non-compiled	[CE]  	285	None	replace
1851	[BUG]  [BUGGY]  Encoder.isTrue(pString.length()!=  2);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.length()!=  2);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.length()!=  2);	  Encoder.isTrue(pString.length()!=    0);    	non-compiled	[CE]  	265	None	replace
1852	[BUG]  [BUGGY]  Encoder.isTrue(pString.length()  >=  1);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.length()  >=  1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.length()  >=  1);	  Encoder.isTrue(pString.length()!=    0);    	non-compiled	[CE]  	265	None	replace
1853	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ".);  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	347	None	replace
1854	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()  ==  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( ". ");  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	347	None	replace
1855	[BUG]  [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null  ||  pString.length()!=  0)  {  if(!Character.isDigit(pString.charAt(0)))  {  throw  new  IllegalArgumentException( " ".);  }	  if(pString    ==    null    ||    pString.length()    ==    0)    {    if(!Character.isDigit(pString.charAt(0)))    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	347	None	replace
1856	[BUG]  [BUGGY]  return(this.caverphone(pString,  0)!=  null);  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString,  0)!=  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString,  0)!=  null);	  return(this.caverphone(pString)!=    null);    	non-compiled	[CE]  	376	None	replace
1857	[BUG]  [BUGGY]  return(this.caverphone(pString,  false)!=  null);  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString,  false)!=  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString,  false)!=  null);	  return(this.caverphone(pString)!=    null);    	non-compiled	[CE]  	376	None	replace
1858	[BUG]  [BUGGY]  return(this.caverphone(pString),  pString  }  null);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString),  pString  }  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString),  pString  }  null);	  return(this.caverphone(pString)!=    null);    	non-compiled	[CE]  	376	None	replace
1859	[BUG]  [BUGGY]  return(this.caverphone(pString,  null)!=  null);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString,  null)!=  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString,  null)!=  null);	  return(this.caverphone(pString)!=    null);    	non-compiled	[CE]  	376	None	replace
1860	[BUG]  [BUGGY]  return(this.caverphone(pString,  true)!=  null);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString,  true)!=  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString,  true)!=  null);	  return(this.caverphone(pString)!=    null);    	non-compiled	[CE]  	376	None	replace
1861	[BUG]  [BUGGY]  return(this.caverphone(pString),  pString!=  null);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return(this.caverphone(pString),  pString!=  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return(this.caverphone(pString),  pString!=  null);	  return(this.caverphone(pString)!=    null);    	non-compiled	[CE]  	376	None	replace
1862	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase());  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase());  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase());  if(caverphone  ==  null)  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(pString    ==    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	290	None	replace
1863	[BUG]  [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  return  caver  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  return  caver  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString.length()  ==  0)  {  return  caverphone(pString.toLowerCase());  }  else  {  String  caverphone(pString.toLowerCase());  return  caver	  return    caverphone(pString.toLowerCase());    if(pString    ==    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	290	None	replace
1864	[BUG]  [BUGGY]  if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(cache  ==  null)  {  String  pString  =  cache.toLowerCase();  if(pString.length()  ==  0)  {  return  pString;  }	  if(cache    ==    null)    {    String    pString    =    pString.toLowerCase();    if(pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	507	None	replace
1865	[BUG]  [BUGGY]  Encoder.isTrue(pString.startsWith( ".java "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.startsWith( ".java "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.startsWith( ".java "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.startsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	388	None	replace
1866	[BUG]  [BUGGY]  Encoder.isTrue(pString.startsWith( "caverphone   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.startsWith( "caverphone   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.startsWith( "caverphone   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.startsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	388	None	replace
1867	[BUG]  [BUGGY]  Encoder.isTrue(pString.startsWith( "clazz "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.startsWith( "clazz "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.startsWith( "clazz "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.startsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	388	None	replace
1868	[BUG]  [BUGGY]  Encoder.isTrue(pString.startsWith( "java.util "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.startsWith( "java.util "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.startsWith( "java.util "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.startsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	388	None	replace
1869	[BUG]  [BUGGY]  Encoder.isTrue(pString.startsWith( "cache "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.startsWith( "cache "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.startsWith( "cache "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.startsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	388	None	replace
1870	[BUG]  [BUGGY]  Encoder.isTrue(pString.startsWith( "Comparable   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.startsWith( "Comparable   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.startsWith( "Comparable   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.startsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	388	None	replace
1871	[BUG]  [BUGGY]  Encoder.isTrue(pString.startsWith( "category   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Encoder.isTrue(pString.startsWith( "category   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Encoder.isTrue(pString.startsWith( "category   "))  {  String  caverphone  =  getCaverphone();  if(caverphone!=  null)  {  return  caverphone.encode(pString);  }	  Encoder.isTrue(pString.startsWith(   "n   "))    {    String    caverphone    =    getCaverphone();    if(caverphone!=    null)    {    return    caverphone.encode(pString);    }    	non-compiled	[CE]  	388	None	replace
1872	[BUG]  [BUGGY]  if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(0))  {  return  pString;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(0))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(0))  {  return  pString;  }	  if(pString    ==    null)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	349	None	replace
1873	[BUG]  [BUGGY]  if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(0)))  {  return  caverphone(pString);  }	  if(pString    ==    null)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	349	None	replace
1874	[BUG]  [BUGGY]  if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(1))  {  return  pString;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(1))  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  if(!Character.isDigit(pString.charAt(0))||!Character.isDigit(pString.charAt(1))  {  return  pString;  }	  if(pString    ==    null)    {    if(!Character.isDigit(pString.charAt(0)))    {    return    pString;    }    	non-compiled	[CE]  	349	None	replace
1875	[BUG]  [BUGGY]  return  caverphone(pString,  0,  this);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  this);	  return    caverphone(pString,    0,    null);    	non-compiled	[CE]  	177	None	replace
1876	[BUG]  [BUGGY]  return  caverphone(pString,  0,  null,  0);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  null,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  null,  0);	  return    caverphone(pString,    0,    null);    	non-compiled	[CE]  	177	None	replace
1877	[BUG]  [BUGGY]  return  encode(pString,  0,  null);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  0,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  0,  null);	  return    caverphone(pString,    0,    null);    	non-compiled	[CE]  	177	None	replace
1878	[BUG]  [BUGGY]  return  caverphone(pString,  0,  null,  true);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  0,  null,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  0,  null,  true);	  return    caverphone(pString,    0,    null);    	non-compiled	[CE]  	177	None	replace
1879	[BUG]  [BUGGY]  return  caverphone(pString,  null,  this.type);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  this.type);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  this.type);	  return    caverphone(pString,    null,    type);    	non-compiled	[CE]  	125	None	replace
1880	[BUG]  [BUGGY]  return  caverphone(pString,  null,  type,  false);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  type,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  type,  false);	  return    caverphone(pString,    null,    type);    	non-compiled	[CE]  	125	None	replace
1881	[BUG]  [BUGGY]  return  caverphone(pString,  null,  DEFAULT_TYPE);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  DEFAULT_TYPE);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  DEFAULT_TYPE);	  return    caverphone(pString,    null,    type);    	non-compiled	[CE]  	125	None	replace
1882	[BUG]  [BUGGY]  return  caverphone(pString,  null,  type,  0);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  type,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  type,  0);	  return    caverphone(pString,    null,    type);    	non-compiled	[CE]  	125	None	replace
1883	[BUG]  [BUGGY]  return  caverphone(pString,  null,  pString.length);  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  pString.length);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  pString.length);	  return    caverphone(pString,    null,    type);    	non-compiled	[CE]  	125	None	replace
1884	[BUG]  [BUGGY]  return  caverphone(pString,  null,  encode);  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  encode);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  encode);	  return    caverphone(pString,    null,    type);    	non-compiled	[CE]  	125	None	replace
1885	[BUG]  [BUGGY]  return  caverphone(pString,  null,  false,  type);  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  false,  type);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  false,  type);	  return    caverphone(pString,    null,    type);    	non-compiled	[CE]  	125	None	replace
1886	[BUG]  [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  String  pString  =  pString.toLowerCase();  if(pString!=  null  ||  pString.length()  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pString!=    null)    {    String    pString    =    pString.toLowerCase();    if(pString!=    null    ||    pString.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
1887	[BUG]  [BUGGY]  if(Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	294	None	replace
1888	[BUG]  [BUGGY]  String  caverphone(pString.charAt(0))  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.charAt(0))  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.charAt(0))  {  if(!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	294	None	replace
1889	[BUG]  [BUGGY]  if(pString!=  null  ||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||!Character.isUpperCase(pString.charAt(0)))  {  return  null;  }	  if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	294	None	replace
1890	[BUG]  [BUGGY]  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0))  {  return  null;  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0))  {  return  null;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(!Character.isUpperCase(pString.charAt(0))||!Character.isUpperCase(pString.charAt(0))  {  return  null;  }	  if(!Character.isUpperCase(pString.charAt(0)))    {    return    null;    }    	non-compiled	[CE]  	294	None	replace
1891	[BUG]  [BUGGY]  String  pString  =  pString.charAt(1);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.charAt(1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.charAt(1);	  char    pString    =    pString.charAt(0);    	non-compiled	[CE]  	91	None	replace
1892	[BUG]  [BUGGY]  char  pString  =  p.charAt(0);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  pString  =  p.charAt(0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  pString  =  p.charAt(0);	  char    pString    =    pString.charAt(0);    	non-compiled	[CE]  	91	None	replace
1893	[BUG]  [BUGGY]  char  pString  =  pString.charAt(1);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  pString  =  pString.charAt(1);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  pString  =  pString.charAt(1);	  char    pString    =    pString.charAt(0);    	non-compiled	[CE]  	91	None	replace
1894	[BUG]  [BUGGY]  char  pString  =  ps.charAt(0);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  char  pString  =  ps.charAt(0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	char  pString  =  ps.charAt(0);	  char    pString    =    pString.charAt(0);    	non-compiled	[CE]  	91	None	replace
1895	[BUG]  [BUGGY]  String  pString  =  pString.tcharAt(0);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  pString.tcharAt(0);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  pString.tcharAt(0);	  char    pString    =    pString.charAt(0);    	non-compiled	[CE]  	91	None	replace
1896	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  true);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  pString,  true);	  AnnotationTraversal.traverse(compiler,    pString,    false);    	non-compiled	[CE]  	404	None	replace
1897	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  false);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.caverphone,  false);	  AnnotationTraversal.traverse(compiler,    pString,    false);    	non-compiled	[CE]  	404	None	replace
1898	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.pString,  false);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.pString,  false);	  AnnotationTraversal.traverse(compiler,    pString,    false);    	non-compiled	[CE]  	404	None	replace
1899	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  pString,  false);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphone,  pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.caverphone,  pString,  false);	  AnnotationTraversal.traverse(compiler,    pString,    false);    	non-compiled	[CE]  	404	None	replace
1900	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  null,  false);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  null,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  null,  false);	  AnnotationTraversal.traverse(compiler,    pString,    false);    	non-compiled	[CE]  	404	None	replace
1901	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.comparator,  pString,  false);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.comparator,  pString,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.comparator,  pString,  false);	  AnnotationTraversal.traverse(compiler,    pString,    false);    	non-compiled	[CE]  	404	None	replace
1902	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphones,  false);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  this.caverphones,  false);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	AnnotationTraversal.traverse(compiler,  this.caverphones,  false);	  AnnotationTraversal.traverse(compiler,    pString,    false);    	non-compiled	[CE]  	404	None	replace
1903	[BUG]  [BUGGY]  annotationTraversal.traverse(compiler,  pString,  true);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  annotationTraversal.traverse(compiler,  pString,  true);  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	annotationTraversal.traverse(compiler,  pString,  true);	  AnnotationTraversal.traverse(compiler,    pString,    false);    	non-compiled	[CE]  	404	None	replace
1904	[BUG]  [BUGGY]  return  cacheverphone(pString,  null,  false);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  null,  false);	  return    caverphone(pString,    null,    true);    	non-compiled	[CE]  	121	None	replace
1905	[BUG]  [BUGGY]  return  encode(pString,  null,  true);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  null,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  null,  true);	  return    caverphone(pString,    null,    true);    	non-compiled	[CE]  	121	None	replace
1906	[BUG]  [BUGGY]  return  asverphone(pString,  null,  false);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  asverphone(pString,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  asverphone(pString,  null,  false);	  return    caverphone(pString,    null,    true);    	non-compiled	[CE]  	121	None	replace
1907	[BUG]  [BUGGY]  return  cmverphone(pString,  null,  false);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cmverphone(pString,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cmverphone(pString,  null,  false);	  return    caverphone(pString,    null,    true);    	non-compiled	[CE]  	121	None	replace
1908	[BUG]  [BUGGY]  return  encode(pString,  null,  false);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  encode(pString,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  encode(pString,  null,  false);	  return    caverphone(pString,    null,    true);    	non-compiled	[CE]  	121	None	replace
1909	[BUG]  [BUGGY]  return  caverphone(null,  null,  false);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(null,  null,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(null,  null,  false);	  return    caverphone(pString,    null,    true);    	non-compiled	[CE]  	121	None	replace
1910	[BUG]  [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(String  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(caverphone);    }    	non-compiled	[CE]  	302	None	replace
1911	[BUG]  [BUGGY]  final  Annotation  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  final  Annotation  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	final  Annotation  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(caverphone);    }    	non-compiled	[CE]  	302	None	replace
1912	[BUG]  [BUGGY]  Annotation  caverphone(int  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(int  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(int  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(caverphone);    }    	non-compiled	[CE]  	302	None	replace
1913	[BUG]  [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Constructor  <  String>  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Constructor  <  String>  caverphone(pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(caverphone);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(caverphone);    }    	non-compiled	[CE]  	302	None	replace
1914	[BUG]  [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString.length()!=  0)  {  return  String.valueOf(caverphone);  }  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString.length()!=  0)  {  return  String.valueOf(caverphone);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(String  pString)  {  if(pString.length()!=  0)  {  return  String.valueOf(caverphone);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(caverphone);    }    	non-compiled	[CE]  	302	None	replace
1915	[BUG]  [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(ascii);  }  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  caverphone(String  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(ascii);  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  caverphone(String  pString)  {  if(pString.length()  ==  0)  {  return  String.valueOf(ascii);  }	  Annotation    caverphone(pString)    {    if(pString.length()    ==    0)    {    return    String.valueOf(caverphone);    }    	non-compiled	[CE]  	302	None	replace
1916	[BUG]  [BUGGY]  return  getCamerphone(pString,  this,  null);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  this,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  this,  null);	  return    getCamerphone(pString,    this);    	non-compiled	[CE]  	99	None	replace
1917	[BUG]  [BUGGY]  return  getCamerphone(pString,  this,  0);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  this,  0);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  this,  0);	  return    getCamerphone(pString,    this);    	non-compiled	[CE]  	99	None	replace
1918	[BUG]  [BUGGY]  return  getCamerphone(pString,  this,  false);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  this,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  this,  false);	  return    getCamerphone(pString,    this);    	non-compiled	[CE]  	99	None	replace
1919	[BUG]  [BUGGY]  return  getCamerphone(pString,  this,  true);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  this,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  this,  true);	  return    getCamerphone(pString,    this);    	non-compiled	[CE]  	99	None	replace
1920	[BUG]  [BUGGY]  return  getCamerphone(pString,  this.encode);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(pString,  this.encode);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(pString,  this.encode);	  return    getCamerphone(pString,    this);    	non-compiled	[CE]  	99	None	replace
1921	[BUG]  [BUGGY]  return  getCamerphone(this,  pString);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  getCamerphone(this,  pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  getCamerphone(this,  pString);	  return    getCamerphone(pString,    this);    	non-compiled	[CE]  	99	None	replace
1922	[BUG]  [BUGGY]  String  pString  =  getCamerphone(pString,  this);  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  getCamerphone(pString,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  getCamerphone(pString,  this);	  return    getCamerphone(pString,    this);    	non-compiled	[CE]  	99	None	replace
1923	[BUG]  [BUGGY]  return  caverphone(pString,  true,  null,  pString.toUpperCase());  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  null,  pString.toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  null,  pString.toUpperCase());	  return    caverphone(pString,    true,    pString.toUpperCase());    	non-compiled	[CE]  	451	None	replace
1924	[BUG]  [BUGGY]  return  caverphone(pString,  true,  false,  pString.toUpperCase());  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  false,  pString.toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  false,  pString.toUpperCase());	  return    caverphone(pString,    true,    pString.toUpperCase());    	non-compiled	[CE]  	451	None	replace
1925	[BUG]  [BUGGY]  return  caverphone(pString,  false,  null,  pString.toUpperCase());  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  false,  null,  pString.toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  false,  null,  pString.toUpperCase());	  return    caverphone(pString,    true,    pString.toUpperCase());    	non-compiled	[CE]  	451	None	replace
1926	[BUG]  [BUGGY]  return  caverphone(pString,  true,  String.valueOf(pString.toUpperCase()));  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  true,  String.valueOf(pString.toUpperCase()));  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  true,  String.valueOf(pString.toUpperCase()));	  return    caverphone(pString,    true,    pString.toUpperCase());    	non-compiled	[CE]  	451	None	replace
1927	[BUG]  [BUGGY]  return  cacheverphone(pString,  false,  pString.toUpperCase());  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  cacheverphone(pString,  false,  pString.toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  cacheverphone(pString,  false,  pString.toUpperCase());	  return    caverphone(pString,    true,    pString.toUpperCase());    	non-compiled	[CE]  	451	None	replace
1928	[BUG]  [BUGGY]  ensureCapacity(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  ensureCapacity(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	ensureCapacity(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }	  allowsCaverphone(pString)    {    if(!pString.equals(   "       "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	227	None	replace
1929	[BUG]  [BUGGY]  Context.encode(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Context.encode(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Context.encode(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }	  allowsCaverphone(pString)    {    if(!pString.equals(   "       "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	227	None	replace
1930	[BUG]  [BUGGY]  validateValues(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  validateValues(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	validateValues(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }	  allowsCaverphone(pString)    {    if(!pString.equals(   "       "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	227	None	replace
1931	[BUG]  [BUGGY]  parse(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  parse(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	parse(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }	  allowsCaverphone(pString)    {    if(!pString.equals(   "       "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	227	None	replace
1932	[BUG]  [BUGGY]  validateValue(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  validateValue(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	validateValue(pString)  {  if(!pString.equals( "   "))  {  throw  new  IllegalArgumentException( " ");  }	  allowsCaverphone(pString)    {    if(!pString.equals(   "       "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	227	None	replace
1933	[BUG]  [BUGGY]  allowCaverphone(pString)  {  if(!pString.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  allowCaverphone(pString)  {  if(!pString.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	allowCaverphone(pString)  {  if(!pString.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }	  allowsCaverphone(pString)    {    if(!pString.equals(   "       "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	227	None	replace
1934	[BUG]  [BUGGY]  allowCaverphone(pString)  {  if(!pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  allowCaverphone(pString)  {  if(!pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	allowCaverphone(pString)  {  if(!pString.equals( "* "))  {  throw  new  IllegalArgumentException( " ");  }	  allowsCaverphone(pString)    {    if(!pString.equals(   "       "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	227	None	replace
1935	[BUG]  [BUGGY]  return  _encode(pString,  null);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _encode(pString,  null);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _encode(pString,  null);	  return    _encode(pString);    	non-compiled	[CE]  	15	None	replace
1936	[BUG]  [BUGGY]  return  _encode(pString,  this);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _encode(pString,  this);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _encode(pString,  this);	  return    _encode(pString);    	non-compiled	[CE]  	15	None	replace
1937	[BUG]  [BUGGY]  return  _encode(pString.toLowerCase());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _encode(pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _encode(pString.toLowerCase());	  return    _encode(pString);    	non-compiled	[CE]  	15	None	replace
1938	[BUG]  [BUGGY]  if(pString!=  null)  {  return  _encode(pString);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  _encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  _encode(pString);  }	  return    _encode(pString);    	non-compiled	[CE]  	15	None	replace
1939	[BUG]  [BUGGY]  return  _encode(pString,  true);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _encode(pString,  true);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _encode(pString,  true);	  return    _encode(pString);    	non-compiled	[CE]  	15	None	replace
1940	[BUG]  [BUGGY]  return  _encode(pString,  false);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  _encode(pString,  false);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  _encode(pString,  false);	  return    _encode(pString);    	non-compiled	[CE]  	15	None	replace
1941	[BUG]  [BUGGY]  if(pString!=  null)  {  return  _encode(pString);  }  else  {  return  super.encode(pString);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  _encode(pString);  }  else  {  return  super.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  _encode(pString);  }  else  {  return  super.encode(pString);  }	  return    _encode(pString);    	non-compiled	[CE]  	15	None	replace
1942	[BUG]  [BUGGY]  if(pString!=  null)  {  return  _encode(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  _encode(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  _encode(pString);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    _encode(pString);    	non-compiled	[CE]  	15	None	replace
1943	[BUG]  [BUGGY]  String  pString  =  _encode(pString);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  pString  =  _encode(pString);  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  pString  =  _encode(pString);	  return    _encode(pString);    	non-compiled	[CE]  	15	None	replace
1944	[BUG]  [BUGGY]  if(caverphone(pString.toLowerCase())!=  null)  {  String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString.toLowerCase())!=  null)  {  String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString.toLowerCase())!=  null)  {  String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(caverphone(pString.toLowerCase())!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	489	None	replace
1945	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase());  if(caverphone(pString.toLowerCase())!=  null)  {  String  caverphone(pString.toLowerCase());  return  caver  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase());  if(caverphone(pString.toLowerCase())!=  null)  {  String  caverphone(pString.toLowerCase());  return  caver  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase());  if(caverphone(pString.toLowerCase())!=  null)  {  String  caverphone(pString.toLowerCase());  return  caver	  return    caverphone(pString.toLowerCase());    if(caverphone(pString.toLowerCase())!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	489	None	replace
1946	[BUG]  [BUGGY]  if(caverphone(pString.toLowerCase())!=  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString.toLowerCase())!=  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString.toLowerCase())!=  null)  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(caverphone(pString.toLowerCase())!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	489	None	replace
1947	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase());  if(caverphone(pString.toLowerCase())!=  null)  {  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase());  if(caverphone(pString.toLowerCase())!=  null)  {  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase());  if(caverphone(pString.toLowerCase())!=  null)  {  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(caverphone(pString.toLowerCase())!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	489	None	replace
1948	[BUG]  [BUGGY]  if(caverphone(pString.toLowerCase())  ==  null)  {  String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(caverphone(pString.toLowerCase())  ==  null)  {  String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(caverphone(pString.toLowerCase())  ==  null)  {  String  caverphone(pString.toLowerCase());  return  caverphone(pString.toLowerCase());  }	  return    caverphone(pString.toLowerCase());    if(caverphone(pString.toLowerCase())!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	489	None	replace
1949	[BUG]  [BUGGY]  String  caverphone(pString.toLowerCase());  if(caverphone(pString.toLowerCase())!=  null)  {  String  caverphone(pString.toLowerCase());  return  ca  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  String  caverphone(pString.toLowerCase());  if(caverphone(pString.toLowerCase())!=  null)  {  String  caverphone(pString.toLowerCase());  return  ca  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	String  caverphone(pString.toLowerCase());  if(caverphone(pString.toLowerCase())!=  null)  {  String  caverphone(pString.toLowerCase());  return  ca	  return    caverphone(pString.toLowerCase());    if(caverphone(pString.toLowerCase())!=    null)    {    String    caverphone(pString.toLowerCase());    return    caverphone(pString.toLowerCase());    }    	non-compiled	[CE]  	489	None	replace
1950	[BUG]  [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }	  return    this.encode(pString);    String    pString    =    getCamerphone().encode(pString);    	non-compiled	[CE]  	250	None	replace
1951	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  }	  return    this.encode(pString);    String    pString    =    getCamerphone().encode(pString);    	non-compiled	[CE]  	250	None	replace
1952	[BUG]  [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  super.encode(pString);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  super.encode(pString);  }  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString  ==  null)  {  return  this.encode(pString);  }  else  {  String  pString  =  getCamerphone().encode(pString);  if(pString!=  null)  {  return  super.encode(pString);  }	  return    this.encode(pString);    String    pString    =    getCamerphone().encode(pString);    	non-compiled	[CE]  	250	None	replace
1953	[BUG]  [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  if(pString!=  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	if(pString!=  null  ||  pString.length()  ==  0)  {  String  pString  =  pString.toUpperCase();  if(pString  ==  null  ||  pString.length()  ==  0)  {  return  pString;  }	  if(pString!=    null)    {    String    pString    =    pString.toUpperCase();    if(pString    ==    null    ||    pString.length()    ==    0)    {    return    pString;    }    	non-compiled	[CE]  	312	None	replace
1954	[BUG]  [BUGGY]  return  caverphone(pString,  null,  false,  pString.toLowerCase());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  false,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  false,  pString.toLowerCase());	  return    caverphone(pString,    null,    pString.toLowerCase());    	non-compiled	[CE]  	258	None	replace
1955	[BUG]  [BUGGY]  return  caverphone(pString,  null,  true,  pString.toLowerCase());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  true,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  true,  pString.toLowerCase());	  return    caverphone(pString,    null,    pString.toLowerCase());    	non-compiled	[CE]  	258	None	replace
1956	[BUG]  [BUGGY]  return  caverphone(pString,  null,  null,  pString.toUpperCase());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  null,  pString.toUpperCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  null,  pString.toUpperCase());	  return    caverphone(pString,    null,    pString.toLowerCase());    	non-compiled	[CE]  	258	None	replace
1957	[BUG]  [BUGGY]  return  caverphone(pString,  null,  0,  pString.toLowerCase());  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(pString,  null,  0,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(pString,  null,  0,  pString.toLowerCase());	  return    caverphone(pString,    null,    pString.toLowerCase());    	non-compiled	[CE]  	258	None	replace
1958	[BUG]  [BUGGY]  return  caverphone(null,  null,  pString.toLowerCase());  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  return  caverphone(null,  null,  pString.toLowerCase());  [BUGGY]      }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	return  caverphone(null,  null,  pString.toLowerCase());	  return    caverphone(pString,    null,    pString.toLowerCase());    	non-compiled	[CE]  	258	None	replace
1959	[BUG]  [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode( "Caverphone   ")?  getCaverphone()  :  null;  [timeout]  [FE]                        ComparisonFailure      [CONTEXT]      public  String  encode(String  pString)  {      [BUGGY]  Annotation  <  String>  pString  =  getChronology().encode( "Caverphone   ")?  getCaverphone()  :  null;  [BUGGY]      return  caverphone(pString);  }  [CLASS]  Caverphone  [METHOD]  encode  [RETURN_TYPE]  String  String  pString  [VARIABLES]  boolean  String  pString  	projects/Codec1/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	168	168	5	replace	Annotation  <  String>  pString  =  getChronology().encode( "Caverphone   ")?  getCaverphone()  :  null;	  Annotation    <    String>    pString    =    getChronology().endsWith(   "Caverphone   ")?    getCaverphone()    :    null;    	non-compiled	[timeout]	455	None	replace
