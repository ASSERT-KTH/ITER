projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378Stringmetaphone(pString);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378intmaxCodeLen=pString.length();
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378Stringsubstring=pString.substring(0,pString.length());
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString.equals("")){intmaxCodeLen=Math.max(maxCodeLen,pString.length());if(maxCodeLen>maxCodeLen){thrownewIllegalArgumentException("");}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString.equals("")){intmaxCodeLen=getMaxCodeLen();if(maxCodeLen>maxCodeLen){returnsuper.encode(pString);}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString.equals("")){intmaxCodeLen=Math.max(maxCodeLen,pString.length());for(inti=0,maxCodeLen=maxCodeLen;i<maxCodeLen;++i){}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString.equals("")){intmaxCodeLen=Math.min(maxCodeLen,pString.length());if(maxCodeLen>maxCodeLen){thrownewIllegalArgumentException("");}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString.equals("")){intmaxCodeLen=Math.max(maxCodeLen,pString.length());if(maxCodeLen>maxCodeLen){returnsuper.encode(pString.substring(1));}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString.equals("")){intmaxCodeLen=Math.max(maxCodeLen,pString.length());for(inti=0,maxCodeLen=maxCodeLen;i<maxCodeLen;--i){}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString.equals("")){intmaxCodeLen=Math.max(maxCodeLen,pString.length());if(maxCodeLen>maxCodeLen){returnmaxCodeLen;}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnmetaphone(pString);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnencode(pString);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnsuper.encode(pString);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnencodePath(pString);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378return_encode(pString);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnthis.encode(pString);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnencode(pString,txt);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnmetaphone(pString,txt);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returndecode(pString);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378intmaxCodeLen=Math.min(maxCodeLen,pString.length());
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString!=null){if(!pString.equals("")){thrownewIllegalArgumentException("");}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString==null){if(!pString.equals("")){thrownewIllegalArgumentException("");}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378Stringmetaphone(pString.toLowerCase());
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString!=null){if(!pString.equals("")){returnsuper.encode(pString);}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString!=null){if(!pString.equals("")){thrownewIllegalStateException("");}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString!=null){if(!pString.equals("")){returnpString;}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString==null){if(!pString.equals("")){thrownewIllegalStateException("");}
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnmetaphone(pString.toLowerCase());
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnmetaphone(pString,fRONTV);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnmetaphone(pString,null);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnmetaphone(pString.trim());
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnmetaphone(pString,false);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnmetaphone(pString,true);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378returnmetaphone(pString,VOWELS);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378intmaxCodeLen=Math.max(maxCodeLen,pString.length());
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378Stringsubstring=pString.substring(0,pString.length()-1);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378Stringsubstring=pString.substring(0,pString.length()-2);
projects/Codec1/src/java/org/apache/commons/codec/language/Metaphone.java378if(pString!=null){if(!pString.endsWith(".")){thrownewIllegalArgumentException("");}
