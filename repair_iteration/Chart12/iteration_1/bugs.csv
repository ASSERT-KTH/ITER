bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  [BUGGY]  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	seriesTitle.setPosition(RectangleEdge.LEFT);		compilable	  [FE]  AssertionFailedError	26	1
153	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.LEFT);  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  [BUGGY]  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	seriesTitle.setPosition(RectangleEdge.LEFT);		compilable	  [FE]  AssertionFailedError	26	1
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	seriesTitle.setPosition(RectangleEdge.TOP);		compilable	  [FE]  AssertionFailedError	26	1
154	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	seriesTitle.setPosition(RectangleEdge.TOP);		compilable	  [FE]  AssertionFailedError	26	1
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  [BUGGY]  this.aggregatedItemsPaint  =  Color.white;  [BUGGY]  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	this.aggregatedItemsPaint  =  Color.white;	this.aggregatedItemsPaint  =  Color.lightGray;  	compilable	  [FE]  AssertionFailedError	31	1
182	[BUG]  [BUGGY]  this.aggregatedItemsPaint  =  Color.white;  [FE]  AssertionFailedError  [CONTEXT]  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  [BUGGY]  this.aggregatedItemsPaint  =  Color.white;  [BUGGY]  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	this.aggregatedItemsPaint  =  Color.white;	this.aggregatedItemsPaint  =  Color.lightGray;  	compilable	  [FE]  AssertionFailedError	31	1
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  [BUGGY]    [BUGGY]  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	  	this.aggregatedItemsPaint  =  Color.lightGray;  	compilable	  [FE]  AssertionFailedError	31	1
184	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  [BUGGY]    [BUGGY]  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	  	this.aggregatedItemsPaint  =  Color.lightGray;  	compilable	  [FE]  AssertionFailedError	31	1
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	28	1
165	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  [FE]  AssertionFailedError  [CONTEXT]  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	28	1
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	28	1
166	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [FE]  AssertionFailedError  [CONTEXT]  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	28	1
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  [BUGGY]    [BUGGY]  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	148	148	1	add	  	this.pieChart.removeLegend();  	compilable	  [FE]  AssertionFailedError	17	1
100	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  [BUGGY]    [BUGGY]  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	148	148	1	replace	  	this.pieChart.removeLegend();  	compilable	  [FE]  AssertionFailedError	17	1
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  [BUGGY]    [BUGGY]  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	157	157	1	add	  	this.sectionPaints  =  new  HashMap();  	compilable	  [FE]  AssertionFailedError	33	1
196	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  [BUGGY]    [BUGGY]  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	157	157	1	replace	  	this.sectionPaints  =  new  HashMap();  	compilable	  [FE]  AssertionFailedError	33	1
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  [BUGGY]    [BUGGY]  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	144	144	1	add	  	super();  	compilable	  [FE]  AssertionFailedError	7	1
40	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  [BUGGY]    [BUGGY]  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	144	144	1	replace	  	super();  	compilable	  [FE]  AssertionFailedError	7	1
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  [BUGGY]  this.aggregatedItemsPaint  =  Color.green;  [BUGGY]  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	157	157	1	add	this.aggregatedItemsPaint  =  Color.green;		compilable	  [FE]  AssertionFailedError	34	1
200	[BUG]  [BUGGY]  this.aggregatedItemsPaint  =  Color.green;  [FE]  AssertionFailedError  [CONTEXT]  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  [BUGGY]  this.aggregatedItemsPaint  =  Color.green;  [BUGGY]  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	157	157	1	replace	this.aggregatedItemsPaint  =  Color.green;		compilable	  [FE]  AssertionFailedError	34	1
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  10));  [BUGGY]  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	151	152	1	add	TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  10));	TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  	compilable	  [FE]  AssertionFailedError	23	1
135	[BUG]  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  10));  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  10));  [BUGGY]  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	151	152	1	replace	TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  10));	TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  	compilable	  [FE]  AssertionFailedError	23	1
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  [BUGGY]  this.sectionPaints.put(seriesTitle,  new  PiePlot());  [BUGGY]  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	158	158	1	add	this.sectionPaints.put(seriesTitle,  new  PiePlot());		compilable	  [FE]  AssertionFailedError	36	1
212	[BUG]  [BUGGY]  this.sectionPaints.put(seriesTitle,  new  PiePlot());  [FE]  AssertionFailedError  [CONTEXT]  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  [BUGGY]  this.sectionPaints.put(seriesTitle,  new  PiePlot());  [BUGGY]  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	158	158	1	replace	this.sectionPaints.put(seriesTitle,  new  PiePlot());		compilable	  [FE]  AssertionFailedError	36	1
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  CategoryDataset  getDataset()  {  [BUGGY]  return(CategoryDataset)this.dataset;  [BUGGY]  }  [CLASS]  MultiplePiePlot  [METHOD]  getDataset  [RETURN_TYPE]  CategoryDataset  [VARIABLES]  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	1.0	166	166	1	add	return(CategoryDataset)this.dataset;	return  this.dataset;  	compilable	  [FE]  AssertionFailedError	1	1
3	[BUG]  [BUGGY]  return(CategoryDataset)this.dataset;  [FE]  AssertionFailedError  [CONTEXT]  public  CategoryDataset  getDataset()  {  [BUGGY]  return(CategoryDataset)this.dataset;  [BUGGY]  }  [CLASS]  MultiplePiePlot  [METHOD]  getDataset  [RETURN_TYPE]  CategoryDataset  [VARIABLES]  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	1.0	166	166	1	replace	return(CategoryDataset)this.dataset;	return  this.dataset;  	compilable	  [FE]  AssertionFailedError	1	1
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	150	150	1	add	this.pieChart.setBackgroundPaint(Color.white);	this.pieChart.setBackgroundPaint(null);  	compilable	  [FE]  AssertionFailedError	21	1
123	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	150	150	1	replace	this.pieChart.setBackgroundPaint(Color.white);	this.pieChart.setBackgroundPaint(null);  	compilable	  [FE]  AssertionFailedError	21	1
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	155	155	1	add	this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	30	1
176	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [FE]  AssertionFailedError  [CONTEXT]  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	155	155	1	replace	this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	30	1
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    [BUGGY]  private  double  limit  =  2.0;  [BUGGY]    [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	add	private  double  limit  =  2.0;	private  double  limit  =  0.0;  	compilable	  [FE]  AssertionFailedError	9	1
51	[BUG]  [BUGGY]  private  double  limit  =  2.0;  [FE]  AssertionFailedError  [CONTEXT]    [BUGGY]  private  double  limit  =  2.0;  [BUGGY]    [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	private  double  limit  =  2.0;	private  double  limit  =  0.0;  	compilable	  [FE]  AssertionFailedError	9	1
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  [BUGGY]    [BUGGY]  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	145	145	1	add	  	this.dataset  =  dataset;  	compilable	  [FE]  AssertionFailedError	11	1
64	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  [BUGGY]    [BUGGY]  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	145	145	1	replace	  	this.dataset  =  dataset;  	compilable	  [FE]  AssertionFailedError	11	1
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  [BUGGY]  this.aggregatedItemsPaint  =  Color.black;  [BUGGY]  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	this.aggregatedItemsPaint  =  Color.black;		compilable	  [FE]  AssertionFailedError	32	1
189	[BUG]  [BUGGY]  this.aggregatedItemsPaint  =  Color.black;  [FE]  AssertionFailedError  [CONTEXT]  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  [BUGGY]  this.aggregatedItemsPaint  =  Color.black;  [BUGGY]  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	this.aggregatedItemsPaint  =  Color.black;		compilable	  [FE]  AssertionFailedError	32	1
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  [BUGGY]  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	157	157	1	add	this.aggregatedItemsPaint  =  Color.gray;		compilable	  [FE]  AssertionFailedError	34	1
202	[BUG]  [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  [FE]  AssertionFailedError  [CONTEXT]  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  [BUGGY]  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	157	157	1	replace	this.aggregatedItemsPaint  =  Color.gray;		compilable	  [FE]  AssertionFailedError	34	1
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	149	149	1	add	this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	20	1
116	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	149	149	1	replace	this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	20	1
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	148	148	1	add	this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	18	1
104	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	148	148	1	replace	this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	18	1
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  [BUGGY]  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	this.aggregatedItemsPaint  =  Color.gray;		compilable	  [FE]  AssertionFailedError	32	1
189	[BUG]  [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  [FE]  AssertionFailedError  [CONTEXT]  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  [BUGGY]  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	this.aggregatedItemsPaint  =  Color.gray;		compilable	  [FE]  AssertionFailedError	32	1
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  [BUGGY]  this.pieChart.removeLegend();  [BUGGY]  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	155	155	1	add	this.pieChart.removeLegend();		compilable	  [FE]  AssertionFailedError	30	1
177	[BUG]  [BUGGY]  this.pieChart.removeLegend();  [FE]  AssertionFailedError  [CONTEXT]  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  [BUGGY]  this.pieChart.removeLegend();  [BUGGY]  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	155	155	1	replace	this.pieChart.removeLegend();		compilable	  [FE]  AssertionFailedError	30	1
2	[BUG]  [BUGGY]  [FE]  StackOverflowError  [CONTEXT]  public  CategoryDataset  getDataset()  {  [BUGGY]  return(CategoryDataset)getDataset();  [BUGGY]  }  [CLASS]  MultiplePiePlot  [METHOD]  getDataset  [RETURN_TYPE]  CategoryDataset  [VARIABLES]  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	1.0	166	166	1	add	return(CategoryDataset)getDataset();	return  this.dataset;  	compilable	  [FE]  StackOverflowError	1	1
3	[BUG]  [BUGGY]  return(CategoryDataset)getDataset();  [FE]  StackOverflowError  [CONTEXT]  public  CategoryDataset  getDataset()  {  [BUGGY]  return(CategoryDataset)getDataset();  [BUGGY]  }  [CLASS]  MultiplePiePlot  [METHOD]  getDataset  [RETURN_TYPE]  CategoryDataset  [VARIABLES]  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	1.0	166	166	1	replace	return(CategoryDataset)getDataset();	return  this.dataset;  	compilable	  [FE]  StackOverflowError	1	1
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    [BUGGY]  private  double  limit  =  1.0;  [BUGGY]    [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	add	private  double  limit  =  1.0;	private  double  limit  =  0.0;  	compilable	  [FE]  AssertionFailedError	9	1
51	[BUG]  [BUGGY]  private  double  limit  =  1.0;  [FE]  AssertionFailedError  [CONTEXT]    [BUGGY]  private  double  limit  =  1.0;  [BUGGY]    [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	private  double  limit  =  1.0;	private  double  limit  =  0.0;  	compilable	  [FE]  AssertionFailedError	9	1
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  [BUGGY]  this.aggregatedItemsKey  = "No  other ";  [BUGGY]  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	155	155	1	add	this.aggregatedItemsKey  = "No  other ";	this.aggregatedItemsKey  =   "Other ";  	compilable	  [FE]  AssertionFailedError	29	1
171	[BUG]  [BUGGY]  this.aggregatedItemsKey  = "No  other ";  [FE]  AssertionFailedError  [CONTEXT]  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  [BUGGY]  this.aggregatedItemsKey  = "No  other ";  [BUGGY]  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	155	155	1	replace	this.aggregatedItemsKey  = "No  other ";	this.aggregatedItemsKey  =   "Other ";  	compilable	  [FE]  AssertionFailedError	29	1
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  [BUGGY]  seriesTitle.setBackgroundPaint(Color.white);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	seriesTitle.setBackgroundPaint(Color.white);		compilable	  [FE]  AssertionFailedError	26	1
152	[BUG]  [BUGGY]  seriesTitle.setBackgroundPaint(Color.white);  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  [BUGGY]  seriesTitle.setBackgroundPaint(Color.white);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	seriesTitle.setBackgroundPaint(Color.white);		compilable	  [FE]  AssertionFailedError	26	1
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	this.pieChart.setBackgroundPaint(Color.white);		compilable	  [FE]  AssertionFailedError	26	1
153	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	this.pieChart.setBackgroundPaint(Color.white);		compilable	  [FE]  AssertionFailedError	26	1
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  [BUGGY]  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	this.pieChart.setBackgroundPaint(Color.white);		compilable	  [FE]  AssertionFailedError	28	1
164	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  [FE]  AssertionFailedError  [CONTEXT]  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  [BUGGY]  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	this.pieChart.setBackgroundPaint(Color.white);		compilable	  [FE]  AssertionFailedError	28	1
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  [BUGGY]  seriesTitle.setBackgroundPaint(Color.white);  [BUGGY]  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	seriesTitle.setBackgroundPaint(Color.white);		compilable	  [FE]  AssertionFailedError	28	1
166	[BUG]  [BUGGY]  seriesTitle.setBackgroundPaint(Color.white);  [FE]  AssertionFailedError  [CONTEXT]  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  [BUGGY]  seriesTitle.setBackgroundPaint(Color.white);  [BUGGY]  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	seriesTitle.setBackgroundPaint(Color.white);		compilable	  [FE]  AssertionFailedError	28	1
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",    new  Font( "SansSerif ",  Font.BOLD,  12));  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	151	152	1	add	this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	24	1
140	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  [BUGGY]  this.pieChart.setBackgroundPaint(null);  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",    new  Font( "SansSerif ",  Font.BOLD,  12));  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	151	152	1	replace	this.pieChart.setBackgroundPaint(null);		compilable	  [FE]  AssertionFailedError	24	1
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  [BUGGY]  this.pieChart.setBackgroundPaint(Color.black);  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	150	150	1	add	this.pieChart.setBackgroundPaint(Color.black);	this.pieChart.setBackgroundPaint(null);  	compilable	  [FE]  AssertionFailedError	21	1
123	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.black);  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  [BUGGY]  this.pieChart.setBackgroundPaint(Color.black);  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	150	150	1	replace	this.pieChart.setBackgroundPaint(Color.black);	this.pieChart.setBackgroundPaint(null);  	compilable	  [FE]  AssertionFailedError	21	1
9	[BUG]  [BUGGY]  [FE]  StackOverflowError  [CONTEXT]  public  CategoryDataset  getDataset()  {  [BUGGY]  this.dataset  =(CategoryDataset)getDataset();  [BUGGY]  return  this.dataset;  }  [CLASS]  MultiplePiePlot  [METHOD]  getDataset  [RETURN_TYPE]  CategoryDataset  [VARIABLES]  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	1.0	166	166	1	add	this.dataset  =(CategoryDataset)getDataset();		compilable	  [FE]  StackOverflowError	2	1
10	[BUG]  [BUGGY]  this.dataset  =(CategoryDataset)getDataset();  [FE]  StackOverflowError  [CONTEXT]  public  CategoryDataset  getDataset()  {  [BUGGY]  this.dataset  =(CategoryDataset)getDataset();  [BUGGY]  return  this.dataset;  }  [CLASS]  MultiplePiePlot  [METHOD]  getDataset  [RETURN_TYPE]  CategoryDataset  [VARIABLES]  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	1.0	166	166	1	replace	this.dataset  =(CategoryDataset)getDataset();		compilable	  [FE]  StackOverflowError	2	1
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	seriesTitle.setPosition(RectangleEdge.TOP);		compilable	  [FE]  AssertionFailedError	28	1
164	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  [FE]  AssertionFailedError  [CONTEXT]  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	seriesTitle.setPosition(RectangleEdge.TOP);		compilable	  [FE]  AssertionFailedError	28	1
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  [BUGGY]  this.aggregatedItemsKey  = "Comparable ";  [BUGGY]  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	155	155	1	add	this.aggregatedItemsKey  = "Comparable ";	this.aggregatedItemsKey  =   "Other ";  	compilable	  [FE]  AssertionFailedError	29	1
171	[BUG]  [BUGGY]  this.aggregatedItemsKey  = "Comparable ";  [FE]  AssertionFailedError  [CONTEXT]  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  [BUGGY]  this.aggregatedItemsKey  = "Comparable ";  [BUGGY]  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	155	155	1	replace	this.aggregatedItemsKey  = "Comparable ";	this.aggregatedItemsKey  =   "Other ";  	compilable	  [FE]  AssertionFailedError	29	1
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  16));  [BUGGY]  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	151	152	1	add	TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  16));	TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  	compilable	  [FE]  AssertionFailedError	23	1
135	[BUG]  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  16));  [FE]  AssertionFailedError  [CONTEXT]  public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  [BUGGY]  TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  16));  [BUGGY]  new  Font( "SansSerif ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =   "Other ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	151	152	1	replace	TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  16));	TextTitle  seriesTitle  =  new  TextTitle( "Series  Title ",  new  Font( "SansSerif ",  Font.BOLD,  12));  	compilable	  [FE]  AssertionFailedError	23	1
