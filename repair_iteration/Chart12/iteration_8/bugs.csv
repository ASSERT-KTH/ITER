bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
45724652	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7620776	1
45724653	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7620776	1
42374102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.RED);  }	  	compilable	  [FE]  AssertionFailedError	7062351	1
42374103	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.RED);  }	  	compilable	  [FE]  AssertionFailedError	7062351	1
42374107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.RED);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.RED);    }    	compilable	  [FE]  AssertionFailedError	7062352	1
42374108	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.RED);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.RED);    }    	compilable	  [FE]  AssertionFailedError	7062352	1
42373413	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	7062236	1
42373414	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	7062236	1
42325208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7054202	1
42325209	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7054202	1
45724869	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7620812	1
45724870	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7620812	1
42373377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	7062230	1
42373378	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	7062230	1
42325245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7054208	1
42325246	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7054208	1
45639122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  	compilable	  [FE]  AssertionFailedError	7606521	1
45639123	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  	compilable	  [FE]  AssertionFailedError	7606521	1
42418376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7069730	1
42418377	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7069730	1
45640016	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7606670	1
45640017	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7606670	1
45724615	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7620770	1
45724616	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7620770	1
52700624	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.white;  }	  if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.white;    }    	compilable	  [FE]  AssertionFailedError	8783438	1
52700625	[BUG]  [BUGGY]  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.white;  }  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.white;  }	  if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.white;    }    	compilable	  [FE]  AssertionFailedError	8783438	1
45724839	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7620807	1
45724840	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7620807	1
42375537	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7062590	1
42375538	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7062590	1
42325244	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7054208	1
42325245	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7054208	1
42427844	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	7071308	1
42427845	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	7071308	1
52690472	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }	  	compilable	  [FE]  AssertionFailedError	8781746	1
52690473	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }	  	compilable	  [FE]  AssertionFailedError	8781746	1
42325250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7054209	1
42325251	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7054209	1
42317540	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	7052924	1
42317541	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	7052924	1
45724838	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.removeLegend();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	7620807	1
45724839	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.removeLegend();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	7620807	1
45639121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	7606521	1
45639122	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	7606521	1
45639116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);	  	compilable	  [FE]  AssertionFailedError	7606520	1
45639117	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);	  	compilable	  [FE]  AssertionFailedError	7606520	1
45639117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);	  	compilable	  [FE]  AssertionFailedError	7606520	1
45639118	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);	  	compilable	  [FE]  AssertionFailedError	7606520	1
42325250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7054209	1
42325251	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7054209	1
45639153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  	compilable	  [FE]  AssertionFailedError	7606526	1
45639154	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  	compilable	  [FE]  AssertionFailedError	7606526	1
45639980	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
45639981	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
42374313	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7062386	1
42374314	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7062386	1
42380541	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.blue);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.blue);  }	  	compilable	  [FE]  AssertionFailedError	7063424	1
42380542	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.blue);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.blue);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.blue);  }	  	compilable	  [FE]  AssertionFailedError	7063424	1
42419667	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7069945	1
42419668	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7069945	1
45639980	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
45639981	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
45640022	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	7606671	1
45640023	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	7606671	1
42380761	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7063461	1
42380762	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7063461	1
45724652	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7620776	1
45724653	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7620776	1
42325286	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	7054215	1
42325287	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	7054215	1
52700636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.green;  }	  if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.green;    }    	compilable	  [FE]  AssertionFailedError	8783440	1
52700637	[BUG]  [BUGGY]  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.green;  }	  if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.green;    }    	compilable	  [FE]  AssertionFailedError	8783440	1
42380767	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setBackgroundPaint(Color.white);    seriesTitle.setBackgroundPaint(Color.red);    }    	compilable	  [FE]  AssertionFailedError	7063462	1
42380768	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setBackgroundPaint(Color.white);    seriesTitle.setBackgroundPaint(Color.red);    }    	compilable	  [FE]  AssertionFailedError	7063462	1
45724627	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7620772	1
45724628	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7620772	1
42374132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	7062356	1
42374133	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	7062356	1
42418346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.green);    }    	compilable	  [FE]  AssertionFailedError	7069725	1
42418347	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.green);    }    	compilable	  [FE]  AssertionFailedError	7069725	1
42374319	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7062387	1
42374320	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7062387	1
45639986	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
45639987	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
42427665	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	7071278	1
42427666	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	7071278	1
42427628	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	7071272	1
42427629	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	7071272	1
42418377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	7069730	1
42418378	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	7069730	1
45724844	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	7620808	1
45724845	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	7620808	1
45640448	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	7606742	1
45640449	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	7606742	1
42325244	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	7054208	1
42325245	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	7054208	1
52700619	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }	  	compilable	  [FE]  AssertionFailedError	8783437	1
52700620	[BUG]  [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }	  	compilable	  [FE]  AssertionFailedError	8783437	1
45639987	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
45639988	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
42325214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	7054203	1
42325215	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	7054203	1
42325215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7054203	1
42325216	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7054203	1
45639987	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
45639988	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
45639985	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
45639986	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
42325256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	7054210	1
42325257	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	7054210	1
42374138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	7062357	1
42374139	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	7062357	1
45639992	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	7606666	1
45639993	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	7606666	1
42325281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7054214	1
42325282	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7054214	1
42325286	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	7054215	1
42325287	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	7054215	1
42325502	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	7054251	1
42325503	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	7054251	1
42325215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7054203	1
42325216	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7054203	1
45639979	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
45639980	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
45639980	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
45639981	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
42325281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  seriesTitle.setBackgroundPaint(null);  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	seriesTitle.setBackgroundPaint(null);	  	compilable	  [FE]  AssertionFailedError	7054214	1
42325282	[BUG]  [BUGGY]  seriesTitle.setBackgroundPaint(null);  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  seriesTitle.setBackgroundPaint(null);  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	seriesTitle.setBackgroundPaint(null);	  	compilable	  [FE]  AssertionFailedError	7054214	1
45639122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);	  	compilable	  [FE]  AssertionFailedError	7606521	1
45639123	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);	  	compilable	  [FE]  AssertionFailedError	7606521	1
42418376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7069730	1
42418377	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7069730	1
42325250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.white);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7054209	1
42325251	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.white);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    }    	compilable	  [FE]  AssertionFailedError	7054209	1
45639117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.RIGHT);  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.RIGHT);	  	compilable	  [FE]  AssertionFailedError	7606520	1
45639118	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.RIGHT);  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.RIGHT);  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.RIGHT);	  	compilable	  [FE]  AssertionFailedError	7606520	1
42325237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7054207	1
42325238	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7054207	1
42325239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7054207	1
42325240	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7054207	1
42325244	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);	  	compilable	  [FE]  AssertionFailedError	7054208	1
42325245	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);	  	compilable	  [FE]  AssertionFailedError	7054208	1
42374319	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);	  	compilable	  [FE]  AssertionFailedError	7062387	1
42374320	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);	  	compilable	  [FE]  AssertionFailedError	7062387	1
42375536	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	7062590	1
42375537	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	7062590	1
42375537	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7062590	1
42375538	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	7062590	1
42418382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    	compilable	  [FE]  AssertionFailedError	7069731	1
42418383	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    	compilable	  [FE]  AssertionFailedError	7069731	1
52690441	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	8781741	1
52690442	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	8781741	1
45639987	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
45639988	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
42317539	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	7052924	1
42317540	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	7052924	1
45639981	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
45639982	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
42375542	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.green);    seriesTitle.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	7062591	1
42375543	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.green);    seriesTitle.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	7062591	1
45640449	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	7606742	1
45640450	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	7606742	1
52700636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  this.aggregatedItemsPaint  =  Color.green;  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	this.aggregatedItemsPaint  =  Color.green;  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.green;  }	  if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.green;    }    	compilable	  [FE]  AssertionFailedError	8783440	1
52700637	[BUG]  [BUGGY]  this.aggregatedItemsPaint  =  Color.green;  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  this.aggregatedItemsPaint  =  Color.green;  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	this.aggregatedItemsPaint  =  Color.green;  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.green;  }	  if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.green;    }    	compilable	  [FE]  AssertionFailedError	8783440	1
42413343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7068891	1
42413344	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7068891	1
45639123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	7606521	1
45639124	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	7606521	1
42325280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	7054214	1
42325281	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	7054214	1
45639987	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
45639988	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	7606665	1
42325237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7054207	1
42325238	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	7054207	1
42374312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7062386	1
42374313	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7062386	1
42375602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.red);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	7062601	1
42375603	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.red);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	7062601	1
45639121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	7606521	1
45639122	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	7606521	1
45724839	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7620807	1
45724840	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	7620807	1
42420074	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7070013	1
42420075	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7070013	1
45639979	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
45639980	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
45639980	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
45639981	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	7606664	1
52683963	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	8780661	1
52683964	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  [FE]  AssertionFailedError  [CONTEXT]                PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";                [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]                this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	8780661	1
42380761	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7063461	1
42380762	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));                [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	7063461	1
45724431	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	7620739	1
45724432	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	7620739	1
45725739	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	7620957	1
45725740	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(               "Series  Title               ",  new  Font(               "SansSerif               ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                 "Other               ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	7620957	1
