bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
1523707712	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	253951286	1
1523707713	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	253951286	1
1523707718	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	253951287	1
1523707719	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	253951287	1
1643008401	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	273834734	1
1643008402	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	273834734	1
1526880326	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.red);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    this.pieChart.setBackgroundPaint(Color.red);    }    	compilable	  [FE]  AssertionFailedError	254480055	1
1526880327	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.red);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    this.pieChart.setBackgroundPaint(Color.red);    }    	compilable	  [FE]  AssertionFailedError	254480055	1
1643039217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839870	1
1643039218	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839870	1
1643039246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839875	1
1643039247	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839875	1
1643039247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	273839875	1
1643039248	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	273839875	1
1646094152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	274349026	1
1646094153	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	274349026	1
1525441549	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	254240259	1
1525441550	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	254240259	1
1646094183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	274349031	1
1646094184	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	274349031	1
1523708978	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	253951497	1
1523708979	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	253951497	1
1527061514	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.red);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    this.pieChart.setBackgroundPaint(Color.red);    }    	compilable	  [FE]  AssertionFailedError	254510253	1
1527061515	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.red);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    this.pieChart.setBackgroundPaint(Color.red);    }    	compilable	  [FE]  AssertionFailedError	254510253	1
1643039263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	273839878	1
1643039264	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	273839878	1
1643039258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);	  	compilable	  [FE]  AssertionFailedError	273839877	1
1643039259	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);	  	compilable	  [FE]  AssertionFailedError	273839877	1
1525467830	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.RED);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.RED);    }    	compilable	  [FE]  AssertionFailedError	254244639	1
1525467831	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.RED);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.RED);    }    	compilable	  [FE]  AssertionFailedError	254244639	1
1643008183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.LEFT);    	compilable	  [FE]  AssertionFailedError	273834698	1
1643008184	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.LEFT);    	compilable	  [FE]  AssertionFailedError	273834698	1
1646094175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError	274349030	1
1646094176	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError	274349030	1
1523707472	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	253951246	1
1523707473	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	253951246	1
1643039474	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	273839913	1
1643039475	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	273839913	1
1643039475	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	273839913	1
1643039476	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	273839913	1
1527394586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }  else  {  this.pieChart.getBackgroundPaint();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.getBackgroundPaint();    }    else    {    this.pieChart.getBackgroundPaint();    }    	compilable	  [FE]  AssertionFailedError	254565765	1
1527394587	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }  else  {  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }  else  {  this.pieChart.getBackgroundPaint();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.getBackgroundPaint();    }    else    {    this.pieChart.getBackgroundPaint();    }    	compilable	  [FE]  AssertionFailedError	254565765	1
1523707718	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	253951287	1
1523707719	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	253951287	1
1643039258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	273839877	1
1643039259	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	273839877	1
1643008400	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	273834734	1
1643008401	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	273834734	1
1643008401	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	273834734	1
1643008402	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	273834734	1
1527394592	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.getBackgroundPaint();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    this.pieChart.getBackgroundPaint();    }    	compilable	  [FE]  AssertionFailedError	254565766	1
1527394593	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.getBackgroundPaint();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    this.pieChart.getBackgroundPaint();    }    	compilable	  [FE]  AssertionFailedError	254565766	1
1523707749	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	253951292	1
1523707750	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	253951292	1
1643039253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);	  	compilable	  [FE]  AssertionFailedError	273839876	1
1643039254	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);	  	compilable	  [FE]  AssertionFailedError	273839876	1
1523708582	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    seriesTitle.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	253951431	1
1523708583	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    seriesTitle.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	253951431	1
1643008335	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	273834723	1
1643008336	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	273834723	1
1646094146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	274349025	1
1646094147	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	274349025	1
1525441556	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.red);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	254240260	1
1525441557	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.red);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	254240260	1
1643008365	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	273834728	1
1643008366	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	273834728	1
1643008442	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    else    {    this.pieChart.getBackgroundPaint();    }    	compilable	  [FE]  AssertionFailedError	273834741	1
1643008443	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  else  {  this.pieChart.getBackgroundPaint();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    else    {    this.pieChart.getBackgroundPaint();    }    	compilable	  [FE]  AssertionFailedError	273834741	1
1523707713	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	253951286	1
1523707714	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	253951286	1
1523708582	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.red);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.red);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    seriesTitle.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	253951431	1
1523708583	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.red);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.red);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    seriesTitle.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	253951431	1
1643008376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	273834730	1
1643008377	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	273834730	1
1525475456	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  this.pieChart.setBackgroundPaint(Color.RED);  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	this.pieChart.setBackgroundPaint(Color.RED);  seriesTitle.setPosition(RectangleEdge.TOP);	  this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.TOP);    	compilable	  [FE]  AssertionFailedError	254245910	1
1525475457	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.RED);  seriesTitle.setPosition(RectangleEdge.TOP);  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  this.pieChart.setBackgroundPaint(Color.RED);  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	this.pieChart.setBackgroundPaint(Color.RED);  seriesTitle.setPosition(RectangleEdge.TOP);	  this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.TOP);    	compilable	  [FE]  AssertionFailedError	254245910	1
1525467651	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.BLACK);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.BLACK);  }	  	compilable	  [FE]  AssertionFailedError	254244609	1
1525467652	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.BLACK);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.BLACK);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.BLACK);  }	  	compilable	  [FE]  AssertionFailedError	254244609	1
1523708613	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	253951436	1
1523708614	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	253951436	1
1643008183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.LEFT);    	compilable	  [FE]  AssertionFailedError	273834698	1
1643008184	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.LEFT);    	compilable	  [FE]  AssertionFailedError	273834698	1
1525441550	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	254240259	1
1525441551	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	254240259	1
1525467655	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.BLACK);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.BLACK);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(Color.RED);    }    	compilable	  [FE]  AssertionFailedError	254244610	1
1525467656	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.BLACK);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.BLACK);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.BLACK);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(Color.RED);    }    	compilable	  [FE]  AssertionFailedError	254244610	1
1643039253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839876	1
1643039254	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839876	1
1643008226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	273834705	1
1643008227	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	273834705	1
1523707467	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	253951245	1
1523707468	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	253951245	1
1643039217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	273839870	1
1643039218	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	273839870	1
1646094183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	274349031	1
1646094184	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	274349031	1
1643039685	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	273839948	1
1643039686	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	273839948	1
1527394586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.getBackgroundPaint();    }    else    {    this.pieChart.getBackgroundPaint();    }    	compilable	  [FE]  AssertionFailedError	254565765	1
1527394587	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.getBackgroundPaint();    }    else    {    this.pieChart.getBackgroundPaint();    }    	compilable	  [FE]  AssertionFailedError	254565765	1
1525467650	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.RED);  }	  	compilable	  [FE]  AssertionFailedError	254244609	1
1525467651	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.RED);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.RED);  }	  	compilable	  [FE]  AssertionFailedError	254244609	1
1525467860	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.RED);  }	  	compilable	  [FE]  AssertionFailedError	254244644	1
1525467861	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.RED);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.RED);  }	  	compilable	  [FE]  AssertionFailedError	254244644	1
1646094212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	274349036	1
1646094213	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	274349036	1
1643039264	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	273839878	1
1643039265	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	273839878	1
1523707713	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	253951286	1
1523707714	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	253951286	1
1643039215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839870	1
1643039216	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839870	1
1523708581	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    seriesTitle.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	253951431	1
1523708582	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    seriesTitle.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	253951431	1
1525475462	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle    ==    null)    {    this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	254245911	1
1525475463	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle    ==    null)    {    this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	254245911	1
1643008369	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle    ==    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	273834729	1
1643008370	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle    ==    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	273834729	1
1646094182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);	  	compilable	  [FE]  AssertionFailedError	274349031	1
1646094183	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);	  	compilable	  [FE]  AssertionFailedError	274349031	1
1643039246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839875	1
1643039247	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839875	1
1643008183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  this.pieChart.setBackgroundPaint(Color.RED);  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	this.pieChart.setBackgroundPaint(Color.RED);  seriesTitle.setPosition(RectangleEdge.LEFT);	  this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.LEFT);    	compilable	  [FE]  AssertionFailedError	273834698	1
1643008184	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.RED);  seriesTitle.setPosition(RectangleEdge.LEFT);  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  this.pieChart.setBackgroundPaint(Color.RED);  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	this.pieChart.setBackgroundPaint(Color.RED);  seriesTitle.setPosition(RectangleEdge.LEFT);	  this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.LEFT);    	compilable	  [FE]  AssertionFailedError	273834698	1
1643039287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	273839882	1
1643039288	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	273839882	1
1643039503	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	273839918	1
1643039504	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	273839918	1
1643039504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	273839918	1
1643039505	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	273839918	1
1643039437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	273839907	1
1643039438	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	273839907	1
1643039438	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	273839907	1
1643039439	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	273839907	1
1525519310	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	254253219	1
1525519311	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	254253219	1
1525519311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	254253219	1
1525519312	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	254253219	1
1643008335	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	273834723	1
1643008336	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	273834723	1
1643008395	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	273834733	1
1643008396	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	273834733	1
1643008220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(this.pieChart!=    null)    {    this.pieChart.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	273834704	1
1643008221	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(this.pieChart!=    null)    {    this.pieChart.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	273834704	1
1525441550	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	254240259	1
1525441551	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	254240259	1
1646094181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	274349031	1
1646094182	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	274349031	1
1643040765	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	273840128	1
1643040766	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	273840128	1
1525519490	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	254253249	1
1525519491	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	254253249	1
1525519491	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	254253249	1
1525519492	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	254253249	1
1525519311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	254253219	1
1525519312	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	254253219	1
1523707465	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	253951245	1
1523707466	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	253951245	1
1523707467	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	253951245	1
1523707468	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	253951245	1
1643039505	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	273839918	1
1643039506	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	273839918	1
1643008401	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	273834734	1
1643008402	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	273834734	1
1643008370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle    ==    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	273834729	1
1643008371	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle    ==    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	273834729	1
1523707713	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	253951286	1
1523707714	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setBackgroundPaint(Color.white);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	253951286	1
1643039474	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839913	1
1643039475	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	273839913	1
1527394617	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	254565770	1
1527394618	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	254565770	1
1643039259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);	  	compilable	  [FE]  AssertionFailedError	273839877	1
1643039260	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);	  	compilable	  [FE]  AssertionFailedError	273839877	1
1523708577	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	253951430	1
1523708578	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	253951430	1
1525467861	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.BLACK);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.BLACK);  }	  	compilable	  [FE]  AssertionFailedError	254244644	1
1525467862	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.BLACK);  }  [FE]  AssertionFailedError  [CONTEXT]                    public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.BLACK);  }  [BUGGY]                    seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.BLACK);  }	  	compilable	  [FE]  AssertionFailedError	254244644	1
1643008363	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	273834728	1
1643008364	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	273834728	1
1643008436	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.getBackgroundPaint();  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.getBackgroundPaint();  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	273834740	1
1643008437	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.getBackgroundPaint();  }  else  {  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]                    super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(                   "Series  Title                   ",  new  Font(                   "SansSerif                   ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);                    [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.getBackgroundPaint();  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]                    this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =                     "Other                   ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.getBackgroundPaint();  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	273834740	1
