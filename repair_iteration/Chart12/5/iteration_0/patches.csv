bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]    [BUGGY]  private  double  limit  =  1.0;  [BUGGY]    [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	add	private  double  limit  =  1.0;	private  double  limit  =  0.0;  	compilable	  [FE]  AssertionFailedError  	9	1	replace
2	[BUG]  [BUGGY]  private  double  limit  =  1.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]    [BUGGY]  private  double  limit  =  1.0;  [BUGGY]    [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	private  double  limit  =  1.0;	private  double  limit  =  0.0;  	compilable	  [FE]  AssertionFailedError  	9	1	replace
3	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  limit  [FE]      AssertionFailedError  [CONTEXT]    [BUGGY]    [BUGGY]    [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	  	private  double  limit  =  0.0;  	non-compiled	[CE]  cannot  find  symbol  limit	9	None	replace
4	[BUG]  [BUGGY]    double  limit  =  Double.parseDouble(getPosition());  [CE]  variable  limit  is  already  defined  in  class  MultiplePiePlot  [FE]    AssertionFailedError  [CONTEXT]    [BUGGY]    double  limit  =  Double.parseDouble(getPosition());  [BUGGY]  private  double  limit  =  0.0;  [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	    double  limit  =  Double.parseDouble(getPosition());		non-compiled	[CE]  variable  limit  is  already  defined  in  class  MultiplePiePlot	10	None	add
5	[BUG]  [BUGGY]    double  limit  =  Double.parseDouble(getPlotSize());  [CE]  variable  limit  is  already  defined  in  class  MultiplePiePlot  [FE]      AssertionFailedError  [CONTEXT]    [BUGGY]    double  limit  =  Double.parseDouble(getPlotSize());  [BUGGY]  private  double  limit  =  0.0;  [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	    double  limit  =  Double.parseDouble(getPlotSize());		non-compiled	[CE]  variable  limit  is  already  defined  in  class  MultiplePiePlot	10	None	add
6	[BUG]  [BUGGY]    double  limit  =  Double.parseDouble( "0 ");  [CE]  variable  limit  is  already  defined  in  class  MultiplePiePlot  [FE]        AssertionFailedError  [CONTEXT]    [BUGGY]    double  limit  =  Double.parseDouble( "0 ");  [BUGGY]  private  double  limit  =  0.0;  [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	    double  limit  =  Double.parseDouble( "0 ");		non-compiled	[CE]  variable  limit  is  already  defined  in  class  MultiplePiePlot	10	None	add
7	[BUG]  [BUGGY]    Double.parseDouble(limit);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]    [BUGGY]    Double.parseDouble(limit);  [BUGGY]  private  double  limit  =  0.0;  [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	    Double.parseDouble(limit);		non-compiled	[CE]  <identifier>  expected	10	None	add
8	[BUG]  [BUGGY]    Double.parseDouble(new  Long(limit));  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]    [BUGGY]    Double.parseDouble(new  Long(limit));  [BUGGY]  private  double  limit  =  0.0;  [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	    Double.parseDouble(new  Long(limit));		non-compiled	[CE]  <identifier>  expected	10	None	add
9	[BUG]  [BUGGY]    Double.parseDouble(getPlotLines());  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]    [BUGGY]    Double.parseDouble(getPlotLines());  [BUGGY]  private  double  limit  =  0.0;  [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	    Double.parseDouble(getPlotLines());		non-compiled	[CE]  <identifier>  expected	10	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]    [BUGGY]  private  double  limit  =  0;  [BUGGY]    [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	add	private  double  limit  =  0;	private  double  limit  =  0.0;  	compilable	  [FE]  AssertionFailedError  	9	1	replace
11	[BUG]  [BUGGY]  private  double  limit  =  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]    [BUGGY]  private  double  limit  =  0;  [BUGGY]    [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	private  double  limit  =  0;	private  double  limit  =  0.0;  	compilable	  [FE]  AssertionFailedError  	9	1	replace
12	[BUG]  [BUGGY]    Double.parseDouble(getPlotLines(),  getPlotLines());  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]    [BUGGY]    Double.parseDouble(getPlotLines(),  getPlotLines());  [BUGGY]  private  double  limit  =  0.0;  [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	    Double.parseDouble(getPlotLines(),  getPlotLines());		non-compiled	[CE]  <identifier>  expected	10	None	add
13	[BUG]  [BUGGY]    Double.parseDouble(getPlotLines(),  getPlotLines()));  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]    [BUGGY]    Double.parseDouble(getPlotLines(),  getPlotLines()));  [BUGGY]  private  double  limit  =  0.0;  [CLASS]  MultiplePiePlot  [VARIABLES]  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	111	111	1	replace	    Double.parseDouble(getPlotLines(),  getPlotLines()));		non-compiled	[CE]  <identifier>  expected	10	None	add
