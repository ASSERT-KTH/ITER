bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
7062356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1177060	1
7062357	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1177060	1
7071272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	1178546	1
7071273	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	1178546	1
8783444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.red;  }	  if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.red;    }    	compilable	  [FE]  AssertionFailedError	1463908	1
8783445	[BUG]  [BUGGY]  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.red;  }	  if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.red;    }    	compilable	  [FE]  AssertionFailedError	1463908	1
7054250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle    ==    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	1175709	1
7054251	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle    ==    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	1175709	1
7069730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    	compilable	  [FE]  AssertionFailedError	1178289	1
7069731	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    	compilable	  [FE]  AssertionFailedError	1178289	1
7606526	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	1267755	1
7606527	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	1267755	1
7062351	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.RED);  }	  	compilable	  [FE]  AssertionFailedError	1177059	1
7062352	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.RED);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.RED);  }	  	compilable	  [FE]  AssertionFailedError	1177059	1
7062633	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1177106	1
7062634	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1177106	1
7054208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7054209	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7620745	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	1270125	1
7620746	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	1270125	1
7062602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1177101	1
7062603	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1177101	1
7063461	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.red);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	1177244	1
7063462	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.red);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	1177244	1
7054208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7054209	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7069724	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	1178288	1
7069725	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	1178288	1
7062387	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1177065	1
7062388	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1177065	1
7071309	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1178552	1
7071310	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1178552	1
7606742	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	1267791	1
7606743	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	1267791	1
7054214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1175703	1
7054215	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1175703	1
7620807	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1270135	1
7620808	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1270135	1
7054214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1175703	1
7054215	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1175703	1
7054203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1175701	1
7054204	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1175701	1
7063502	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.lightGray);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1177251	1
7063503	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.lightGray);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1177251	1
7069946	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(this.pieChart!=    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1178325	1
7069947	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(this.pieChart!=    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1178325	1
7620775	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	1270130	1
7620776	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	1270130	1
7068933	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	1178156	1
7068934	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	1178156	1
8780738	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  this.aggregatedItemsPaint  =  Color.white;  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	this.aggregatedItemsPaint  =  Color.white;  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }	  this.aggregatedItemsPaint    =    Color.white;    if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.gray;    }    	compilable	  [FE]  AssertionFailedError	1463457	1
8780739	[BUG]  [BUGGY]  this.aggregatedItemsPaint  =  Color.white;  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  this.aggregatedItemsPaint  =  Color.white;  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	this.aggregatedItemsPaint  =  Color.white;  if(this.sectionPaints  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }	  this.aggregatedItemsPaint    =    Color.white;    if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.gray;    }    	compilable	  [FE]  AssertionFailedError	1463457	1
7620932	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    seriesTitle.setPosition(RectangleEdge.TOP);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	1270156	1
7620933	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    seriesTitle.setPosition(RectangleEdge.TOP);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	1270156	1
7062355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1177060	1
7062356	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.red);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1177060	1
7052924	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  this.pieChart.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.LEFT);    	compilable	  [FE]  AssertionFailedError	1175488	1
7052925	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  this.pieChart.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.LEFT);    	compilable	  [FE]  AssertionFailedError	1175488	1
8781746	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }	  if(this.aggregatedItemsPaint!=    null)    {    this.aggregatedItemsPaint    =    Color.green;    }    else    {    this.aggregatedItemsPaint    =    Color.green;    }    	compilable	  [FE]  AssertionFailedError	1463625	1
8781747	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }	  if(this.aggregatedItemsPaint!=    null)    {    this.aggregatedItemsPaint    =    Color.green;    }    else    {    this.aggregatedItemsPaint    =    Color.green;    }    	compilable	  [FE]  AssertionFailedError	1463625	1
7054214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1175703	1
7054215	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1175703	1
7054202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	1175701	1
7054203	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	1175701	1
7063676	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.lightGray);    seriesTitle.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	1177280	1
7063677	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.lightGray);    seriesTitle.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	1177280	1
7620776	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	1270130	1
7620777	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	1270130	1
7071278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setTitle(seriesTitle);    }    else    {    this.pieChart.getLegend();    }    	compilable	  [FE]  AssertionFailedError	1178547	1
7071279	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setTitle(seriesTitle);    }    else    {    this.pieChart.getLegend();    }    	compilable	  [FE]  AssertionFailedError	1178547	1
7062236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.white);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	1177040	1
7062237	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.white);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	1177040	1
7069940	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.black);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.black);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1178324	1
7069941	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.black);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.black);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.black);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1178324	1
7606521	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  	compilable	  [FE]  AssertionFailedError	1267754	1
7606522	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  	compilable	  [FE]  AssertionFailedError	1267754	1
7606700	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }	  	compilable	  [FE]  AssertionFailedError	1267784	1
7606701	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }	  	compilable	  [FE]  AssertionFailedError	1267784	1
8781956	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }	  	compilable	  [FE]  AssertionFailedError	1463660	1
8781957	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }	  	compilable	  [FE]  AssertionFailedError	1463660	1
8781957	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.lightGray;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.lightGray;  }	  	compilable	  [FE]  AssertionFailedError	1463660	1
8781958	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.lightGray;  }  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.lightGray;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.lightGray;  }	  	compilable	  [FE]  AssertionFailedError	1463660	1
7054245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1175708	1
7054246	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1175708	1
7054208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7054209	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7620812	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	1270136	1
7620813	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	1270136	1
7062230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	1177039	1
7062231	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	1177039	1
7620739	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1270124	1
7620740	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1270124	1
8781741	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.green;  }	  	compilable	  [FE]  AssertionFailedError	1463624	1
8781742	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.green;  }  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  else  {  this.aggregatedItemsPaint  =  Color.green;  }	  	compilable	  [FE]  AssertionFailedError	1463624	1
7620740	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	1270124	1
7620741	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	1270124	1
7606665	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
7606666	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
7054207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7054208	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7054208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7054209	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7054209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7054210	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1175702	1
7062601	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1177101	1
7062602	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1177101	1
7068891	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	1178149	1
7068892	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	1178149	1
7620807	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	1270135	1
7620808	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	1270135	1
8783437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.white;  }	  	compilable	  [FE]  AssertionFailedError	1463907	1
8783438	[BUG]  [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.white;  }  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.white;  }	  	compilable	  [FE]  AssertionFailedError	1463907	1
8783439	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }	  	compilable	  [FE]  AssertionFailedError	1463907	1
8783440	[BUG]  [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }	  	compilable	  [FE]  AssertionFailedError	1463907	1
7054203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }	  	compilable	  [FE]  AssertionFailedError	1175701	1
7054204	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }	  	compilable	  [FE]  AssertionFailedError	1175701	1
7606520	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);	  	compilable	  [FE]  AssertionFailedError	1267754	1
7606521	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.LEFT);	  	compilable	  [FE]  AssertionFailedError	1267754	1
7606664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
7606665	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
7606665	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
7606666	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
7620957	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1270160	1
7620958	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1270160	1
7606664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
7606665	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
7606665	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
7606666	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
7620769	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	1270129	1
7620770	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	1270129	1
7620771	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	1270129	1
7620772	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	1270129	1
7071278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setTitle(seriesTitle);    }    else    {    this.pieChart.getLegend();    }    	compilable	  [FE]  AssertionFailedError	1178547	1
7071279	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setTitle(seriesTitle);    }    else    {    this.pieChart.getLegend();    }    	compilable	  [FE]  AssertionFailedError	1178547	1
7068938	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	1178157	1
7068939	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	1178157	1
7069724	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	1178288	1
7069725	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	1178288	1
8780661	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.white;  }	  	compilable	  [FE]  AssertionFailedError	1463444	1
8780662	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.white;  }  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.white;  }	  	compilable	  [FE]  AssertionFailedError	1463444	1
7052919	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);	  	compilable	  [FE]  AssertionFailedError	1175487	1
7052920	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);	  	compilable	  [FE]  AssertionFailedError	1175487	1
7069730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    	compilable	  [FE]  AssertionFailedError	1178289	1
7069731	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.green);    }    	compilable	  [FE]  AssertionFailedError	1178289	1
7070013	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1178336	1
7070014	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1178336	1
7620957	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1270160	1
7620958	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	1270160	1
7054202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	1175701	1
7054203	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	1175701	1
7071308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	1178552	1
7071309	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	1178552	1
8781957	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	1463660	1
8781958	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [FE]  AssertionFailedError  [CONTEXT]              PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";              [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]              this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	1463660	1
7063460	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1177244	1
7063461	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1177244	1
7063461	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1177244	1
7063462	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1177244	1
7069945	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(this.pieChart!=    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1178325	1
7069946	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(this.pieChart!=    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	1178325	1
7062590	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1177099	1
7062591	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1177099	1
7062591	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.red);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.red);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	1177099	1
7062592	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.red);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.red);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.red);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	1177099	1
7063424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	1177238	1
7063425	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.green);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	1177238	1
7606670	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	1267779	1
7606671	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	1267779	1
7062386	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1177065	1
7062387	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]              public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));              [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]              seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	1177065	1
7606664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
7606665	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]              super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(             "Series  Title             ",  new  Font(             "SansSerif             ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);              [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]              this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =               "Other             ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	1267778	1
