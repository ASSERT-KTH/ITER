bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
1177250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.lightGray);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	196209	1
1177251	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.lightGray);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	196209	1
1277047	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	212842	1
1277048	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	212842	1
1178354	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  	compilable	  [FE]  AssertionFailedError	196393	1
1178355	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  	compilable	  [FE]  AssertionFailedError	196393	1
1178355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	196393	1
1178356	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	196393	1
1177100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	196184	1
1177101	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	196184	1
1177101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	196184	1
1177102	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	196184	1
1177065	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	196178	1
1177066	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	196178	1
1178546	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	196425	1
1178547	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	196425	1
1270135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	211690	1
1270136	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	211690	1
1177281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	196214	1
1177282	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	196214	1
1270160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211694	1
1270161	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211694	1
1177238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.red);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	196207	1
1177239	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.red);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	196207	1
1177239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.black);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.black);  }	  	compilable	  [FE]  AssertionFailedError	196207	1
1177240	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.black);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.black);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.black);  }	  	compilable	  [FE]  AssertionFailedError	196207	1
1270129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211689	1
1270130	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211689	1
1177059	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	196177	1
1177060	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	196177	1
1178552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  if(this.pieChart!=    null)    {    this.pieChart.setBackgroundPaint(Color.lightGray);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	196426	1
1178553	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  if(this.pieChart!=    null)    {    this.pieChart.setBackgroundPaint(Color.lightGray);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	196426	1
1178541	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	196424	1
1178542	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	196424	1
1175702	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	195951	1
1175703	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	195951	1
1270129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211689	1
1270130	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211689	1
1178330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	196389	1
1178331	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	196389	1
1178331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	196389	1
1178332	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	196389	1
1177039	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle    ==    null)    {    this.pieChart.setTitle(seriesTitle);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	196174	1
1177040	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  if(seriesTitle    ==    null)    {    this.pieChart.setTitle(seriesTitle);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	196174	1
1178546	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	196425	1
1178547	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	196425	1
1267778	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }	  	compilable	  [FE]  AssertionFailedError	211297	1
1267779	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }	  	compilable	  [FE]  AssertionFailedError	211297	1
1270124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211688	1
1270125	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211688	1
1178156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	196360	1
1178157	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	196360	1
1178288	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	196382	1
1178289	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	196382	1
1175702	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	195951	1
1175703	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	195951	1
1177244	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	196208	1
1177245	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	196208	1
1463444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.lightGray;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.lightGray;  }	  	compilable	  [FE]  AssertionFailedError	243908	1
1463445	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.lightGray;  }  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.lightGray;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.lightGray;  }	  	compilable	  [FE]  AssertionFailedError	243908	1
1267779	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }	  	compilable	  [FE]  AssertionFailedError	211297	1
1267780	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }	  	compilable	  [FE]  AssertionFailedError	211297	1
1270123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211688	1
1270124	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211688	1
1177058	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	196177	1
1177059	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.green);  }	  	compilable	  [FE]  AssertionFailedError	196177	1
1177059	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	196177	1
1177060	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	196177	1
1175702	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	195951	1
1175703	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	195951	1
1178324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	196388	1
1178325	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	196388	1
1178325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.black);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.black);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	196388	1
1178326	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.black);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.black);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.black);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	196388	1
1177106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	196185	1
1177107	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	196185	1
1267784	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	211298	1
1267785	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	211298	1
1463660	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }	  	compilable	  [FE]  AssertionFailedError	243944	1
1463661	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }	  	compilable	  [FE]  AssertionFailedError	243944	1
1177034	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	196173	1
1177035	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	196173	1
1267790	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	211299	1
1267791	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    }    else    {    this.pieChart.removeLegend();    }    	compilable	  [FE]  AssertionFailedError	211299	1
1175708	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	195952	1
1175709	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	195952	1
1177286	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.lightGray);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	196215	1
1177287	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.lightGray);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	196215	1
1178336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	196390	1
1178337	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	196390	1
1175708	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	195952	1
1175709	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	195952	1
1270155	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	211693	1
1270156	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	211693	1
1267778	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	211297	1
1267779	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	211297	1
1175701	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	195951	1
1175702	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	195951	1
1177279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	196214	1
1177280	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	196214	1
1267779	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	211297	1
1267780	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	211297	1
1178149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	196359	1
1178150	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	196359	1
1177099	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.red);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	196184	1
1177100	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.red);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	196184	1
1270129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211689	1
1270130	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211689	1
1267754	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    	compilable	  [FE]  AssertionFailedError	211293	1
1267755	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    	compilable	  [FE]  AssertionFailedError	211293	1
1175487	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);	  	compilable	  [FE]  AssertionFailedError	195915	1
1175488	[BUG]  [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.LEFT);	  	compilable	  [FE]  AssertionFailedError	195915	1
1463456	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  this.aggregatedItemsPaint  =  Color.white;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	this.aggregatedItemsPaint  =  Color.white;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }	  this.aggregatedItemsPaint    =    Color.gray;    if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.gray;    }    	compilable	  [FE]  AssertionFailedError	243910	1
1463457	[BUG]  [BUGGY]  this.aggregatedItemsPaint  =  Color.white;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  this.aggregatedItemsPaint  =  Color.white;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	this.aggregatedItemsPaint  =  Color.white;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }	  this.aggregatedItemsPaint    =    Color.gray;    if(this.sectionPaints!=    null)    {    this.aggregatedItemsPaint    =    Color.gray;    }    	compilable	  [FE]  AssertionFailedError	243910	1
1178149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	196359	1
1178150	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	196359	1
1284854	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  seriesTitle.setBackgroundPaint(Color.black);  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	seriesTitle.setBackgroundPaint(Color.black);	  seriesTitle.setPaint(Color.black);    	compilable	  [FE]  AssertionFailedError	214143	1
1284855	[BUG]  [BUGGY]  seriesTitle.setBackgroundPaint(Color.black);  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  seriesTitle.setBackgroundPaint(Color.black);  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	seriesTitle.setBackgroundPaint(Color.black);	  seriesTitle.setPaint(Color.black);    	compilable	  [FE]  AssertionFailedError	214143	1
1178546	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	196425	1
1178547	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	196425	1
1184625	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	197438	1
1184626	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	197438	1
1177059	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	196177	1
1177060	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.red);  }	  	compilable	  [FE]  AssertionFailedError	196177	1
1270155	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	211693	1
1270156	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	211693	1
1463907	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	243985	1
1463908	[BUG]  [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	243985	1
1178336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	196390	1
1178337	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  if(seriesTitle    ==    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	196390	1
1175701	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	195951	1
1175702	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(null);    seriesTitle.setPosition(RectangleEdge.LEFT);    }    	compilable	  [FE]  AssertionFailedError	195951	1
1178294	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	196383	1
1178295	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.white);    }    	compilable	  [FE]  AssertionFailedError	196383	1
1178156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	196360	1
1178157	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.BOTTOM);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	196360	1
1463443	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }	  	compilable	  [FE]  AssertionFailedError	243908	1
1463444	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }	  	compilable	  [FE]  AssertionFailedError	243908	1
1463444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	243908	1
1463445	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	243908	1
1178324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	196388	1
1178325	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	196388	1
1178325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	196388	1
1178326	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	196388	1
1178552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  if(this.pieChart!=    null)    {    this.pieChart.setBackgroundPaint(Color.lightGray);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	196426	1
1178553	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  if(this.pieChart!=    null)    {    this.pieChart.setBackgroundPaint(Color.lightGray);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	196426	1
1463624	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.green;  }	  	compilable	  [FE]  AssertionFailedError	243938	1
1463625	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.green;  }  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.green;  }	  	compilable	  [FE]  AssertionFailedError	243938	1
1463625	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }	  	compilable	  [FE]  AssertionFailedError	243938	1
1463626	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }  [FE]  AssertionFailedError  [CONTEXT]            PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";            [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }  [BUGGY]            this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.white;  }	  	compilable	  [FE]  AssertionFailedError	243938	1
1178150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	196359	1
1178151	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]            public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]            seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.white);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setBackgroundPaint(Color.lightGray);    }    	compilable	  [FE]  AssertionFailedError	196359	1
1270123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211688	1
1270124	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]            super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(           "Series  Title           ",  new  Font(           "SansSerif           ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);            [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]            this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =             "Other           ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.TOP);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	211688	1
