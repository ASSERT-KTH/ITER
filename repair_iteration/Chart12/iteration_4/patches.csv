bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
196393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	32733	1
196394	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getLegend();  }	  if(seriesTitle!=    null)    {    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setTitle(seriesTitle);    }    	compilable	  [FE]  AssertionFailedError	32733	1
243908	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }	  	compilable	  [FE]  AssertionFailedError	40652	1
243909	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.black;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }	  	compilable	  [FE]  AssertionFailedError	40652	1
196208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	32702	1
196209	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	32702	1
214142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  seriesTitle.setPaint(Color.black);  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	seriesTitle.setPaint(Color.black);	  seriesTitle.setPaint(Color.white);    	compilable	  [FE]  AssertionFailedError	35691	1
214143	[BUG]  [BUGGY]  seriesTitle.setPaint(Color.black);  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  seriesTitle.setPaint(Color.black);  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	seriesTitle.setPaint(Color.black);	  seriesTitle.setPaint(Color.white);    	compilable	  [FE]  AssertionFailedError	35691	1
196184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	32698	1
196185	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.green);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	32698	1
196358	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	32727	1
196359	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	32727	1
196359	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	32727	1
196360	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	32727	1
196382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	32731	1
196383	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	32731	1
196383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	32731	1
196384	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	32731	1
243938	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	40657	1
243939	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	40657	1
196424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }	  	compilable	  [FE]  AssertionFailedError	32738	1
196425	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }	  	compilable	  [FE]  AssertionFailedError	32738	1
211292	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);	  	compilable	  [FE]  AssertionFailedError	35216	1
211293	[BUG]  [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);	  	compilable	  [FE]  AssertionFailedError	35216	1
196389	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	32732	1
196390	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	32732	1
243944	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	40658	1
243945	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  else  {  this.aggregatedItemsPaint  =  Color.red;  }	  	compilable	  [FE]  AssertionFailedError	40658	1
211297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }	  seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    	compilable	  [FE]  AssertionFailedError	35217	1
211298	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }	  seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    	compilable	  [FE]  AssertionFailedError	35217	1
196214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	32703	1
196215	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	32703	1
243944	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }	  	compilable	  [FE]  AssertionFailedError	40658	1
243945	[BUG]  [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	if(this.aggregatedItemsPaint  ==  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  else  {  this.aggregatedItemsPaint  =  Color.black;  }	  	compilable	  [FE]  AssertionFailedError	40658	1
196208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	32702	1
196209	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	32702	1
196173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	32696	1
196174	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	32696	1
195950	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	32659	1
195951	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.LEFT);  }	  	compilable	  [FE]  AssertionFailedError	32659	1
195915	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.RIGHT);  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.RIGHT);	  	compilable	  [FE]  AssertionFailedError	32653	1
195916	[BUG]  [BUGGY]  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.RIGHT);  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.RIGHT);  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	this.pieChart.setTitle(seriesTitle);  seriesTitle.setPosition(RectangleEdge.RIGHT);	  	compilable	  [FE]  AssertionFailedError	32653	1
196214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	32703	1
196215	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    seriesTitle.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.TOP);    }    	compilable	  [FE]  AssertionFailedError	32703	1
196425	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	32738	1
196426	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.lightGray);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  	compilable	  [FE]  AssertionFailedError	32738	1
243909	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }	  	compilable	  [FE]  AssertionFailedError	40652	1
243910	[BUG]  [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.gray;  }	  	compilable	  [FE]  AssertionFailedError	40652	1
196418	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	32737	1
196419	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	32737	1
243914	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.lightGray;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.lightGray;  }	  if(this.aggregatedItemsPaint!=    null)    {    this.aggregatedItemsPaint    =    Color.gray;    }    else    {    this.aggregatedItemsPaint    =    Color.black;    }    	compilable	  [FE]  AssertionFailedError	40653	1
243915	[BUG]  [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.lightGray;  }  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.lightGray;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.lightGray;  }	  if(this.aggregatedItemsPaint!=    null)    {    this.aggregatedItemsPaint    =    Color.gray;    }    else    {    this.aggregatedItemsPaint    =    Color.black;    }    	compilable	  [FE]  AssertionFailedError	40653	1
196358	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	32727	1
196359	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	32727	1
196388	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	32732	1
196389	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.getBackgroundPaint();  }	  	compilable	  [FE]  AssertionFailedError	32732	1
196202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	32701	1
196203	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	32701	1
196424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	32738	1
196425	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	32738	1
196425	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	32738	1
196426	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	32738	1
196178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	32697	1
196179	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.green);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	32697	1
211693	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	35283	1
211694	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    seriesTitle.setPosition(RectangleEdge.LEFT);    seriesTitle.setPosition(RectangleEdge.RIGHT);    this.pieChart.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	35283	1
196172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  this.sectionPaints  =  new  HashMap();  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	this.sectionPaints  =  new  HashMap();	  	compilable	  [FE]  AssertionFailedError	32696	1
196173	[BUG]  [BUGGY]  this.sectionPaints  =  new  HashMap();  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  this.sectionPaints  =  new  HashMap();  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	this.sectionPaints  =  new  HashMap();	  	compilable	  [FE]  AssertionFailedError	32696	1
196177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	32697	1
196178	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.green);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	32697	1
196389	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	32732	1
196390	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	32732	1
196388	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	32732	1
196389	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  this.pieChart.setBackgroundPaint(Color.white);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	32732	1
211298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    	compilable	  [FE]  AssertionFailedError	35217	1
211299	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  else  {  this.pieChart.removeLegend();  }	  seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    	compilable	  [FE]  AssertionFailedError	35217	1
211687	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	35282	1
211688	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	35282	1
211688	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	35282	1
211689	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	35282	1
196173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	32696	1
196174	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(Color.white);  }  else  {  this.pieChart.removeLegend();  }	  	compilable	  [FE]  AssertionFailedError	32696	1
196425	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	32738	1
196426	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.TOP);  this.pieChart.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	32738	1
195951	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	32659	1
195952	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(null);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	32659	1
243985	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	add	this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }	  if(this.aggregatedItemsPaint    ==    null)    {    this.aggregatedItemsPaint    =    Color.gray;    }    else    {    this.aggregatedItemsPaint    =    Color.green;    }    	compilable	  [FE]  AssertionFailedError	40665	1
243986	[BUG]  [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [FE]  AssertionFailedError  [CONTEXT]          PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";          [BUGGY]  this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }  [BUGGY]          this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	156	156	1	replace	this.aggregatedItemsPaint  =  Color.gray;  if(this.sectionPaints!=  null)  {  this.aggregatedItemsPaint  =  Color.green;  }	  if(this.aggregatedItemsPaint    ==    null)    {    this.aggregatedItemsPaint    =    Color.gray;    }    else    {    this.aggregatedItemsPaint    =    Color.green;    }    	compilable	  [FE]  AssertionFailedError	40665	1
196207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	32702	1
196208	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setBackgroundPaint(Color.white);  seriesTitle.setBackgroundPaint(Color.white);  }	  	compilable	  [FE]  AssertionFailedError	32702	1
211297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }	  seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    	compilable	  [FE]  AssertionFailedError	35217	1
211298	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setTitle(seriesTitle);  }	  seriesTitle.setPosition(RectangleEdge.LEFT);    this.pieChart.setTitle(seriesTitle);    	compilable	  [FE]  AssertionFailedError	35217	1
197438	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(Color.white);  }	  if(this.pieChart!=    null)    {    this.pieChart.setTitle(seriesTitle);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	32907	1
197439	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(Color.white);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(Color.white);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(Color.white);  }	  if(this.pieChart!=    null)    {    this.pieChart.setTitle(seriesTitle);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	32907	1
211688	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	35282	1
211689	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	35282	1
211689	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	35282	1
211690	[BUG]  [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(this.pieChart!=  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  	compilable	  [FE]  AssertionFailedError	35282	1
195951	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	32659	1
195952	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  seriesTitle.setPosition(RectangleEdge.RIGHT);  }	  	compilable	  [FE]  AssertionFailedError	32659	1
196359	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	32727	1
196360	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  seriesTitle.setPosition(RectangleEdge.LEFT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	32727	1
197288	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	32882	1
197289	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setBackgroundPaint(Color.lightGray);  }	  	compilable	  [FE]  AssertionFailedError	32882	1
197444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(null);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    this.pieChart.setTitle(seriesTitle);    seriesTitle.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	32908	1
197445	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(null);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setTitle(seriesTitle);  seriesTitle.setBackgroundPaint(null);  }	  if(this.pieChart!=    null)    {    this.pieChart.setTitle(seriesTitle);    seriesTitle.setBackgroundPaint(null);    }    	compilable	  [FE]  AssertionFailedError	32908	1
196177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	add	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	32697	1
196178	[BUG]  [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [FE]  AssertionFailedError  [CONTEXT]          public  MultiplePiePlot(CategoryDataset  dataset)  {  super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));          [BUGGY]  if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }  [BUGGY]          seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	153	153	1	replace	if(seriesTitle!=  null)  {  this.pieChart.setBackgroundPaint(Color.red);  seriesTitle.setPosition(RectangleEdge.TOP);  }	  if(seriesTitle!=    null)    {    this.pieChart.setBackgroundPaint(Color.white);    seriesTitle.setPosition(RectangleEdge.BOTTOM);    }    	compilable	  [FE]  AssertionFailedError	32697	1
212839	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	35474	1
212840	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.RIGHT);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	35474	1
212841	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	add	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	35474	1
212842	[BUG]  [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [FE]  AssertionFailedError  [CONTEXT]          super();  this.dataset  =  dataset;  PiePlot  piePlot  =  new  PiePlot(null);  this.pieChart  =  new  JFreeChart(piePlot);  this.pieChart.removeLegend();  this.dataExtractOrder  =  TableOrder.BY_COLUMN;  this.pieChart.setBackgroundPaint(null);  TextTitle  seriesTitle  =  new  TextTitle(         "Series  Title         ",  new  Font(         "SansSerif         ",  Font.BOLD,  12));  seriesTitle.setPosition(RectangleEdge.BOTTOM);          [BUGGY]  if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }  [BUGGY]          this.pieChart.setTitle(seriesTitle);  this.aggregatedItemsKey  =           "Other         ";  this.aggregatedItemsPaint  =  Color.lightGray;  this.sectionPaints  =  new  HashMap();  }  [CLASS]  MultiplePiePlot  [METHOD]  <init>  [RETURN_TYPE]  CategoryDataset)  CategoryDataset  dataset  [VARIABLES]  TextTitle  seriesTitle  Comparable  aggregatedItemsKey  TableOrder  dataExtractOrder  boolean  double  limit  CategoryDataset  dataset  PiePlot  piePlot  Paint  aggregatedItemsPaint  Map  sectionPaints  long  serialVersionUID  JFreeChart  pieChart  	projects/Chart12/source/org/jfree/chart/plot/MultiplePiePlot.java	0.5	154	154	1	replace	if(seriesTitle  ==  null)  {  seriesTitle.setPosition(RectangleEdge.BOTTOM);  this.pieChart.setBackgroundPaint(null);  }	  	compilable	  [FE]  AssertionFailedError	35474	1
