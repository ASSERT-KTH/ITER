bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  int  len  =  a.length;  [CE]  variable  len  is  already  defined  in  method  linearCombination(double[],double[])  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]    final  int  len  =  a.length;  [BUGGY]  if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	    final  int  len  =  a.length;		non-compiled	[CE]  variable  len  is  already  defined  in  method  linearCombination(double[],double[])	4	None	add
2	[BUG]  [BUGGY]    int  len  =  a.length;  [CE]  variable  len  is  already  defined  in  method  linearCombination(double[],double[])  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]    int  len  =  a.length;  [BUGGY]  if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	    int  len  =  a.length;		non-compiled	[CE]  variable  len  is  already  defined  in  method  linearCombination(double[],double[])	4	None	add
3	[BUG]  [BUGGY]    final  int  b  =  a.length;  [CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]    final  int  b  =  a.length;  [BUGGY]  if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	    final  int  b  =  a.length;		non-compiled	[CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])	4	None	add
4	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]  if(len  >  b.length)  {  [BUGGY]  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(len  >  b.length)  {	if  (len  !=  b.length)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
5	[BUG]  [BUGGY]  if(len  >  b.length)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]  if(len  >  b.length)  {  [BUGGY]  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len  >  b.length)  {	if  (len  !=  b.length)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
6	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]  if(b.length!=  len)  {  [BUGGY]  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(b.length!=  len)  {	if  (len  !=  b.length)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
7	[BUG]  [BUGGY]  if(b.length!=  len)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]  if(b.length!=  len)  {  [BUGGY]  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b.length!=  len)  {	if  (len  !=  b.length)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
8	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]  if(len  >  a.length)  {  [BUGGY]  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(len  >  a.length)  {	if  (len  !=  b.length)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
9	[BUG]  [BUGGY]  if(len  >  a.length)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]  if(len  >  a.length)  {  [BUGGY]  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len  >  a.length)  {	if  (len  !=  b.length)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
10	[BUG]  [BUGGY]    int  b  =  a.length;  [CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]    int  b  =  a.length;  [BUGGY]  if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	    int  b  =  a.length;		non-compiled	[CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])	4	None	add
11	[BUG]  [BUGGY]    int  len  =  b.length;  [CE]  variable  len  is  already  defined  in  method  linearCombination(double[],double[])  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]    int  len  =  b.length;  [BUGGY]  if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	    int  len  =  b.length;		non-compiled	[CE]  variable  len  is  already  defined  in  method  linearCombination(double[],double[])	4	None	add
12	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]  if(b!=  null)  {  [BUGGY]  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(b!=  null)  {	if  (len  !=  b.length)  {  	compilable	  [FE]  DimensionMismatchException  	3	4	replace
13	[BUG]  [BUGGY]  if(b!=  null)  {  [FE]  DimensionMismatchException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  [BUGGY]  if(b!=  null)  {  [BUGGY]  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b!=  null)  {	if  (len  !=  b.length)  {  	compilable	  [FE]  DimensionMismatchException  	3	4	replace
