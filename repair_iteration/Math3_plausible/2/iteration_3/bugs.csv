bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(len  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  <  =  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len  <  =  0)  {	  if(b!=    null)    {    if(b!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  ==  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(len  ==  0)  {	  if(b!=    null)    {    if(b!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	1	replace
3	[BUG]  [BUGGY]  if(len  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  ==  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len  ==  0)  {	  if(b!=    null)    {    if(b!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	1	replace
4	[BUG]  [BUGGY]  if(len  >=  b.length)  {  if(len  >=  b.length)  {  [CE]  illegal  start  of  expression  [FE]    DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  >=  b.length)  {  if(len  >=  b.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len    >=    b.length)    {    if(len  >=  b.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
5	[BUG]  [BUGGY]  if(len  >=  b.length)  {  if(len!=  b.length)  {  [CE]  illegal  start  of  expression  [FE]      DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  >=  b.length)  {  if(len!=  b.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len    >=    b.length)    {    if(len!=  b.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
6	[BUG]  [BUGGY]  if(len  >=  b.length)  {  if(len  >=  a.length)  {  [CE]  illegal  start  of  expression  [FE]        DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  >=  b.length)  {  if(len  >=  a.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len    >=    b.length)    {    if(len  >=  a.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
7	[BUG]  [BUGGY]  int  b  =  a.length  -  2;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  int  b  =  a.length  -  2;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	int  b  =  a.length  -  2;	  int    b    =    a.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  final  int  len  =  b.length  -  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  final  int  len  =  b.length  -  1;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	final  int  len  =  b.length  -  1;	  final    int    len    =    b.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
9	[BUG]  [BUGGY]  if(b  ==  null)  {  if(b  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b  ==  null)  {  if(b  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b    ==    null)    {    if(b  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
10	[BUG]  [BUGGY]  if(b  ==  null)  {  if(b!=  null)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b  ==  null)  {  if(b!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b    ==    null)    {    if(b!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
11	[BUG]  [BUGGY]  If(b.length  >  a.length)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  If(b.length  >  a.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	If(b.length  >  a.length)  {	  if(len    >    a.length)    {    If(len    >    a.length)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
12	[BUG]  [BUGGY]  double  b  =  a.length  -  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  double  b  =  a.length  -  1;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	double  b  =  a.length  -  1;	  double    b    =    a.length;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
13	[BUG]  [BUGGY]  double  b  =  a.length  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  double  b  =  a.length  +  1;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	double  b  =  a.length  +  1;	  double    b    =    a.length;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
14	[BUG]  [BUGGY]  final  int  len  =  a.length  /  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  final  int  len  =  a.length  /  1;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	final  int  len  =  a.length  /  1;	  final    int    len    =    a.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
15	[BUG]  [BUGGY]  final  int  b  =  a.length  -  2;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  final  int  b  =  a.length  -  2;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	final  int  b  =  a.length  -  2;	  final    int    b    =    a.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  Integer  len  =  a.length;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  Integer  len  =  a.length;  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	Integer  len  =  a.length;	  if(len    >    a.length)    {    int    len    =    a.length;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
17	[BUG]  [BUGGY]  if(len  <  =  0)  {  If(len  >  b.length)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  <  =  0)  {  If(len  >  b.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len  <  =  0)  {  If(len  >  b.length)  {	  if(len    >    b.length)    {    If(len    >    b.length)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  If(len  <  =  b.length)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  If(len  <  =  b.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	If(len  <  =  b.length)  {	  if(len    >    b.length)    {    If(len    >    b.length)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  final  int  len  =  a.length  -  2;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  final  int  len  =  a.length  -  2;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	final  int  len  =  a.length  -  2;	  final    int    len    =    a.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
20	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b!=  null  ||  b.length  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(b!=  null  ||  b.length  >  0)  {	  if(b!=    null    &&    b.length    >    0)    {    	compilable	  [FE]  DimensionMismatchException  	36	4	replace
21	[BUG]  [BUGGY]  if(b!=  null  ||  b.length  >  0)  {  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b!=  null  ||  b.length  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b!=  null  ||  b.length  >  0)  {	  if(b!=    null    &&    b.length    >    0)    {    	compilable	  [FE]  DimensionMismatchException  	36	4	replace
22	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]      DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b  ==  null  ||  b.length  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(b  ==  null  ||  b.length  >  0)  {	  if(b!=    null    &&    b.length    >    0)    {    	compilable	  [FE]  DimensionMismatchException  	36	4	replace
23	[BUG]  [BUGGY]  if(b  ==  null  ||  b.length  >  0)  {  [FE]  DimensionMismatchException  [FE]      DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b  ==  null  ||  b.length  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b  ==  null  ||  b.length  >  0)  {	  if(b!=    null    &&    b.length    >    0)    {    	compilable	  [FE]  DimensionMismatchException  	36	4	replace
24	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  <  b.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(len  <  b.length)  {	  if(len    <    =    b.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	1	replace
25	[BUG]  [BUGGY]  if(len  <  b.length)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  <  b.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len  <  b.length)  {	  if(len    <    =    b.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	1	replace
26	[BUG]  [BUGGY]  if(b.length  <  =  len)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length  <  =  len)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b.length  <  =  len)  {	  if(len    <    =    a.length)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  if(len  <  a.length)  {  if(len  <  a.length)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  <  a.length)  {  if(len  <  a.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len    <    a.length)    {    if(len  <  a.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
28	[BUG]  [BUGGY]  if(len  <  a.length)  {  if(len  <  b.length)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  <  a.length)  {  if(len  <  b.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len    <    a.length)    {    if(len  <  b.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
29	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(a.length  >  b.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(a.length  >  b.length)  {	  if(b.length    >    a.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	1	replace
30	[BUG]  [BUGGY]  if(a.length  >  b.length)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(a.length  >  b.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(a.length  >  b.length)  {	  if(b.length    >    a.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	1	replace
31	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length  <  len)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(b.length  <  len)  {	  if(len    <    a.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	replace
32	[BUG]  [BUGGY]  if(b.length  <  len)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length  <  len)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b.length  <  len)  {	  if(len    <    a.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	replace
33	[BUG]  [BUGGY]  if(b!=  null  &&  b.length  >  0)  {  if(b!=  null  &&  b.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]    DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b!=  null  &&  b.length  >  0)  {  if(b!=  null  &&  b.length  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b!=    null    &&    b.length    >    0)    {    if(b!=  null  &&  b.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
34	[BUG]  [BUGGY]  if(b!=  null  &&  b.length  >  0)  {  if(b  ==  null  &&  b.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]      DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b!=  null  &&  b.length  >  0)  {  if(b  ==  null  &&  b.length  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b!=    null    &&    b.length    >    0)    {    if(b  ==  null  &&  b.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
35	[BUG]  [BUGGY]  if(len  <  =  0)  {  If(b  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  <  =  0)  {  If(b  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len  <  =  0)  {  If(b  ==  null)  {	  if(b!=    null)    {    If(b!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
36	[BUG]  [BUGGY]  if(len  ==  0)  {  If(b  ==  null)  {  [CE]  ';'  expected  [FE]          DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  ==  0)  {  If(b  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len  ==  0)  {  If(b  ==  null)  {	  if(b!=    null)    {    If(b!=    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
37	[BUG]  [BUGGY]  final  double  b  =  a.length  -  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  final  double  b  =  a.length  -  1;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	final  double  b  =  a.length  -  1;	  final    double    b    =    a.length;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
38	[BUG]  [BUGGY]  final  double  b  =  a.length  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  final  double  b  =  a.length  +  1;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	final  double  b  =  a.length  +  1;	  final    double    b    =    a.length;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
39	[BUG]  [BUGGY]  int  len  =  a.length  -  2;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  int  len  =  a.length  -  2;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	int  len  =  a.length  -  2;	  int    len    =    a.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
40	[BUG]  [BUGGY]  if(b.length  >  len)  {  if(b.length  >  len)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length  >  len)  {  if(b.length  >  len)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b.length    >    len)    {    if(b.length  >  len)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
41	[BUG]  [BUGGY]  if(b.length  >  len)  {  If(b.length  >  len)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length  >  len)  {  If(b.length  >  len)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b.length    >    len)    {    If(b.length  >  len)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
42	[BUG]  [BUGGY]  if(b.length  >  a.length)  {  if(b.length  >  a.length)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length  >  a.length)  {  if(b.length  >  a.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b.length    >    a.length)    {    if(b.length  >  a.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
43	[BUG]  [BUGGY]  if(b.length  >  a.length)  {  If(b.length  >  a.length)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length  >  a.length)  {  If(b.length  >  a.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b.length    >    a.length)    {    If(b.length  >  a.length)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
44	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]        DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(len  >  0)  {	  if(b!=    null)    {    if(b!=    null)    {    	compilable	  [FE]  DimensionMismatchException  	24	4	replace
45	[BUG]  [BUGGY]  if(len  >  0)  {  [FE]  DimensionMismatchException  [FE]        DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len  >  0)  {	  if(b!=    null)    {    if(b!=    null)    {    	compilable	  [FE]  DimensionMismatchException  	24	4	replace
46	[BUG]  [BUGGY]  int  len  =  a.length  /  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  int  len  =  a.length  /  1;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	int  len  =  a.length  /  1;	  int    len    =    a.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  if(b.length  >  len)  {  int  len  =  b.length;  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length  >  len)  {  int  len  =  b.length;  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b.length    >    len)    {    int  len  =  b.length;	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
48	[BUG]  [BUGGY]  if(b.length  >  a.length)  {  If(len  >  a.length)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length  >  a.length)  {  If(len  >  a.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b.length  >  a.length)  {  If(len  >  a.length)  {	  if(len    >    a.length)    {    If(len    >    a.length)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
49	[BUG]  [BUGGY]  If(len  <  a.length)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  If(len  <  a.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	If(len  <  a.length)  {	  if(len    >    a.length)    {    If(len    >    a.length)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
50	[BUG]  [BUGGY]  if(b  ==  null)  {  if(b  ==  null  ||  b.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b  ==  null)  {  if(b  ==  null  ||  b.length!=  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b    ==    null)    {    if(b  ==  null  ||  b.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
51	[BUG]  [BUGGY]  if(b  ==  null)  {  if(b  ==  null  ||  b.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b  ==  null)  {  if(b  ==  null  ||  b.length  ==  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b    ==    null)    {    if(b  ==  null  ||  b.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
52	[BUG]  [BUGGY]  Integer  len  =  b.length;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  Integer  len  =  b.length;  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	Integer  len  =  b.length;	  if(len    >    b.length)    {    int    len    =    b.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
53	[BUG]  [BUGGY]  if(len  <  a.length)  {  If(len  <  a.length)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  <  a.length)  {  If(len  <  a.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len    <    a.length)    {    If(len  <  a.length)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
54	[BUG]  [BUGGY]  if(b.length  >  a.length)  {  int  b.length  >  a.length)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length  >  a.length)  {  int  b.length  >  a.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b.length    >    a.length)    {    int  b.length  >  a.length)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
55	[BUG]  [BUGGY]  final  int  b  =  a.length  /  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  final  int  b  =  a.length  /  1;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	final  int  b  =  a.length  /  1;	  final    int    b    =    a.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
56	[BUG]  [BUGGY]  int  b  =  a.length  /  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  int  b  =  a.length  /  1;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	int  b  =  a.length  /  1;	  int    b    =    a.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b  ==  null  &&  b.length  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(b  ==  null  &&  b.length  >  0)  {	  if(b!=    null    &&    b.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
58	[BUG]  [BUGGY]  if(b  ==  null  &&  b.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b  ==  null  &&  b.length  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b  ==  null  &&  b.length  >  0)  {	  if(b!=    null    &&    b.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
59	[BUG]  [BUGGY]  if(len  <  a.length)  {  If(len  >  b.length)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(len  <  a.length)  {  If(len  >  b.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(len  <  a.length)  {  If(len  >  b.length)  {	  if(len    >    b.length)    {    If(len    >    b.length)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
60	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(a.length!=  len)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(a.length!=  len)  {	  if(b.length!=    len)    {    if(b.length!=    len)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	1	replace
61	[BUG]  [BUGGY]  if(a.length!=  len)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(a.length!=  len)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(a.length!=  len)  {	  if(b.length!=    len)    {    if(b.length!=    len)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	1	replace
62	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length!=  a.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(b.length!=  a.length)  {	  if(b.length    >    a.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	1	replace
63	[BUG]  [BUGGY]  if(b.length!=  a.length)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b.length!=  a.length)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b.length!=  a.length)  {	  if(b.length    >    a.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	1	replace
64	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(a  ==  null  ||  b.length!=  len)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(a  ==  null  ||  b.length!=  len)  {	  if(b    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
65	[BUG]  [BUGGY]  if(a  ==  null  ||  b.length!=  len)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(a  ==  null  ||  b.length!=  len)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(a  ==  null  ||  b.length!=  len)  {	  if(b    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
66	[BUG]  [BUGGY]  final  int  b  =  a.length  -  1  +  len;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  final  int  b  =  a.length  -  1  +  len;  [BUGGY]      if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	final  int  b  =  a.length  -  1  +  len;	  final    int    b    =    a.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
67	[BUG]  [BUGGY]  if(b  ==  null)  {  If(b  ==  null)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b  ==  null)  {  If(b  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b    ==    null)    {    If(b  ==  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
68	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(a  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(a  ==  null)  {	  if(b!=    null)    {    if(b    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
69	[BUG]  [BUGGY]  if(a  ==  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(a  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(a  ==  null)  {	  if(b!=    null)    {    if(b    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
70	[BUG]  [BUGGY]  if(a!=  null)  {  If(b!=  null)  {  [CE]  ';'  expected  [FE]        DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(a!=  null)  {  If(b!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(a!=  null)  {  If(b!=  null)  {	  if(b!=    null)    {    If(b!=    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
71	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b!=  null  &&  a.length  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(b!=  null  &&  a.length  >  0)  {	  if(b!=    null    &&    b.length    >    0)    {    	compilable	  [FE]  DimensionMismatchException  	36	4	replace
72	[BUG]  [BUGGY]  if(b!=  null  &&  a.length  >  0)  {  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b!=  null  &&  a.length  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b!=  null  &&  a.length  >  0)  {	  if(b!=    null    &&    b.length    >    0)    {    	compilable	  [FE]  DimensionMismatchException  	36	4	replace
73	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]        DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(a!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	add	if(a!=  null)  {	  if(b!=    null)    {    if(b!=    null)    {    	compilable	  [FE]  DimensionMismatchException  	24	4	replace
74	[BUG]  [BUGGY]  if(a!=  null)  {  [FE]  DimensionMismatchException  [FE]        DimensionMismatchException      [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(a!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(a!=  null)  {	  if(b!=    null)    {    if(b!=    null)    {    	compilable	  [FE]  DimensionMismatchException  	24	4	replace
75	[BUG]  [BUGGY]  if(b!=  null  &&  b.length  >  0)  {  If(b!=  null  &&  b.length  >  0)  {  [CE]  ';'  expected  [FE]    DimensionMismatchException    [CONTEXT]      throws  DimensionMismatchException  {  final  int  len  =  a.length;      [BUGGY]  if(b!=  null  &&  b.length  >  0)  {  If(b!=  null  &&  b.length  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(len,  b.length);  }    final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	817	817	1	replace	if(b!=    null    &&    b.length    >    0)    {    If(b!=  null  &&  b.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
