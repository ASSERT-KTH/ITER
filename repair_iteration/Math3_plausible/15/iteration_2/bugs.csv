bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);	      final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	8	None	replace
2	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	      final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	8	None	replace
3	[BUG]  [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);	      double    bHigh    =    prodHigh[i]    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	13	None	replace
4	[BUG]  [BUGGY]  final  double  prodLowSum  +=  prodHighCur;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLowSum  +=  prodHighCur;  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  +=  prodHighCur;	      final    double    prodLowSum    +=    prodHighNext;    	non-compiled	[CE]  ';'  expected	3	None	replace
5	[BUG]  [BUGGY]  final  double  prodLowSum  +=  sHighPrev;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLowSum  +=  sHighPrev;  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  +=  sHighPrev;	      final    double    prodLowSum    +=    prodHighNext;    	non-compiled	[CE]  ';'  expected	3	None	replace
6	[BUG]  [BUGGY]  final  double  prodLowSum  =  bi  *  ai;  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLowSum  =  bi  *  ai;  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  =  bi  *  ai;	      final    double    prodLowSum    =    ai    *    bi;    	non-compiled	[CE]  not  a  statement	2	None	replace
7	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
8	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
9	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  aLow  *  bHigh  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  aLow  *  bHigh  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  aLow  *  bHigh	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
10	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);	      final    double    bHigh    =    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	12	None	replace
11	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	      final    double    bHigh    =    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	12	None	replace
12	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);	      final    double    bHigh    =    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh);    	non-compiled	[CE]  not  a  statement	14	None	replace
13	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh))  -  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh))  -  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh))  -  aLow  *  bHigh)-  aHigh  *  bHigh);	      final    double    bHigh    =    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh);    	non-compiled	[CE]  ';'  expected	14	None	replace
14	[BUG]  [BUGGY]  final  double  bLow  =  aHigh  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bLow  =  aHigh  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aHigh  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	      final    double    bLow    =    aLow    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	9	None	replace
15	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	4	replace
16	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	4	replace
17	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  not  a  statement	5	None	replace
18	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
19	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
20	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  aLow  *  bHigh  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  aLow  *  bHigh  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  aLow  *  bHigh	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
21	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
22	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  ai  *  bLow  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  ai  *  bLow  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  ai  *  bLow	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
23	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  '.class'  expected	4	None	add
24	[BUG]  [BUGGY]  final  double  prodLowSum  =  bHigh  *  ai;  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLowSum  =  bHigh  *  ai;  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  =  bHigh  *  ai;	      final    double    prodLowSum    =    ai    *    bHigh;    	non-compiled	[CE]  not  a  statement	1	None	replace
25	[BUG]  [BUGGY]  final  double  bHigh  =  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bHigh  =  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	      final    double    bHigh    =    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	12	None	replace
26	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	4	replace
27	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	4	replace
28	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	4	replace
29	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	4	replace
30	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
31	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
32	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	4	replace
33	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	4	replace
34	[BUG]  [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	      double    bHigh    =    prodHigh[i]    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	13	None	replace
35	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	4	replace
36	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	4	replace
37	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	4	replace
38	[BUG]  [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	4	replace
39	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
40	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
41	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);	      final    double    bLow    =    aLow    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	9	None	replace
42	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);	      final    double    bLow    =    aLow    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	9	None	replace
43	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);	      final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	8	None	replace
44	[BUG]  [BUGGY]  final  double  prodLowSum  +=  bHigh;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLowSum  +=  bHigh;  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  +=  bHigh;	      final    double    prodLowSum    +=    prodHighNext;    	non-compiled	[CE]  ';'  expected	3	None	replace
45	[BUG]  [BUGGY]  final  double  prodLowSum  =  ai  *  bLow;  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLowSum  =  ai  *  bLow;  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  =  ai  *  bLow;	      final    double    prodLowSum    =    ai    *    bi;    	non-compiled	[CE]  not  a  statement	2	None	replace
46	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
47	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
48	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	      final    double    bLow    =    aLow    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	9	None	replace
49	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	4	replace
50	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	4	replace
51	[BUG]  [BUGGY]  final  double  bHigh  =  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bHigh  =  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	      final    double    bHigh    =    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	12	None	replace
52	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  '.class'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  '.class'  expected	10	None	add
53	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  '.class'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  '.class'  expected	6	None	add
54	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	4	replace
55	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]    aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	4	replace
56	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	      final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	8	None	replace
57	[BUG]  [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;    [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]    final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	      double    bHigh    =    prodHigh[i]    -    (((prodHigh[i]    -    aHigh    *    bHigh)    -    aLow    *    bHigh)    -    aHigh    *    bHigh)    -    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	13	None	replace
