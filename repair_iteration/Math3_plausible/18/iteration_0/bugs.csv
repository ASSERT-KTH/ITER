bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
35	[BUG] [BUGGY] double prodHighNext = prodHigh[1]; [FE] ArrayIndexOutOfBoundsException [CONTEXT] prodHigh[i] = ai * bi; final double prodLow = aLow * bLow - (((prodHigh[i] - aHigh * bHigh) - aLow * bHigh) - aHigh * bLow); prodLowSum += prodLow; }  final double prodHighCur = prodHigh[0]; [BUGGY] double prodHighNext = prodHigh[1]; [BUGGY] double sHighPrev = prodHighCur + prodHighNext; double sPrime = sHighPrev - prodHighNext; double sLowSum = (prodHighNext - (sHighPrev - sPrime)) + (prodHighCur - sPrime); final int lenMinusOne = len - 1; for (int i = 1; i < lenMinusOne; i++) { prodHighNext = prodHigh[i + 1]; final double sHighCur = sHighPrev + prodHighNext; sPrime = sHighCur - prodHighNext; sLowSum += (prodHighNext - (sHighCur - sPrime)) + (sHighPrev - sPrime); [CLASS] MathArrays OrderDirection 1 2 [METHOD] linearCombination [RETURN_TYPE] double  final double[] a final double[] b [VARIABLES] boolean double[] a b prodHigh int SPLIT_FACTOR comp i index j len lenMinusOne max numElements startIndex sum yListLen OrderDirection DECREASING INCREASING dir double aHigh aLow ai bHigh bLow bi ca cb prodHighCur prodHighNext prodLow prodLowSum result sHighCur sHighPrev sLowSum sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	846	846	1	replace	
36	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] prodHigh[i] = ai * bi; final double prodLow = aLow * bLow - (((prodHigh[i] - aHigh * bHigh) - aLow * bHigh) - aHigh * bLow); prodLowSum += prodLow; }  final double prodHighCur = prodHigh[0]; [BUGGY] [BUGGY] double prodHighNext = prodHigh[1]; double sHighPrev = prodHighCur + prodHighNext; double sPrime = sHighPrev - prodHighNext; double sLowSum = (prodHighNext - (sHighPrev - sPrime)) + (prodHighCur - sPrime); final int lenMinusOne = len - 1; for (int i = 1; i < lenMinusOne; i++) { prodHighNext = prodHigh[i + 1]; final double sHighCur = sHighPrev + prodHighNext; sPrime = sHighCur - prodHighNext; sLowSum += (prodHighNext - (sHighCur - sPrime)) + (sHighPrev - sPrime); [CLASS] MathArrays OrderDirection 1 2 [METHOD] linearCombination [RETURN_TYPE] double  final double[] a final double[] b [VARIABLES] boolean double[] a b prodHigh int SPLIT_FACTOR comp i index j len lenMinusOne max numElements startIndex sum yListLen OrderDirection DECREASING INCREASING dir double aHigh aLow ai bHigh bLow bi ca cb prodHighCur prodHighNext prodLow prodLowSum result sHighCur sHighPrev sLowSum sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	846	846	1	add	
