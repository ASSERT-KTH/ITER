bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]  final  double  cb  =  bi  *  SPLIT_FACTOR;  [BUGGY]  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	add	final  double  cb  =  bi  *  SPLIT_FACTOR;	final  double  cb  =  SPLIT_FACTOR  *  bi;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	1	replace
2	[BUG]  [BUGGY]  final  double  cb  =  bi  *  SPLIT_FACTOR;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]  final  double  cb  =  bi  *  SPLIT_FACTOR;  [BUGGY]  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	final  double  cb  =  bi  *  SPLIT_FACTOR;	final  double  cb  =  SPLIT_FACTOR  *  bi;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	1	replace
3	[BUG]  [BUGGY]  final  double  cb  =  prodHigh  *  bi;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]  final  double  cb  =  prodHigh  *  bi;  [BUGGY]  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	final  double  cb  =  prodHigh  *  bi;	final  double  cb  =  SPLIT_FACTOR  *  bi;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	21	None	replace
4	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  cb  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]    [BUGGY]  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	  	final  double  cb  =  SPLIT_FACTOR  *  bi;  	non-compiled	[CE]  cannot  find  symbol  cb	21	None	replace
5	[BUG]  [BUGGY]    final  double  bi  =  prodHigh[i];  [CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]    final  double  bi  =  prodHigh[i];  [BUGGY]  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	    final  double  bi  =  prodHigh[i];		non-compiled	[CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])	22	None	add
6	[BUG]  [BUGGY]    final  double  bi  =  ai  *  bi;  [CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]    final  double  bi  =  ai  *  bi;  [BUGGY]  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	    final  double  bi  =  ai  *  bi;		non-compiled	[CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])	22	None	add
7	[BUG]  [BUGGY]    final  double  bi  =  prodHigh[i]  *  bHigh;  [CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]    final  double  bi  =  prodHigh[i]  *  bHigh;  [BUGGY]  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	    final  double  bi  =  prodHigh[i]  *  bHigh;		non-compiled	[CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])	22	None	add
8	[BUG]  [BUGGY]  final  double  cb  =  Bi  *  SPLIT_FACTOR;  [CE]  cannot  find  symbol  Bi  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]  final  double  cb  =  Bi  *  SPLIT_FACTOR;  [BUGGY]  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	final  double  cb  =  Bi  *  SPLIT_FACTOR;	final  double  cb  =  SPLIT_FACTOR  *  bi;  	non-compiled	[CE]  cannot  find  symbol  Bi	21	None	replace
9	[BUG]  [BUGGY]    final  double  bi  =  b[i];  [CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]    final  double  bi  =  b[i];  [BUGGY]  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	    final  double  bi  =  b[i];		non-compiled	[CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])	22	None	add
10	[BUG]  [BUGGY]    final  double  bi  =  prodHigh[i]  *  bLow;  [CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]    final  double  bi  =  prodHigh[i]  *  bLow;  [BUGGY]  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	    final  double  bi  =  prodHigh[i]  *  bLow;		non-compiled	[CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])	22	None	add
11	[BUG]  [BUGGY]    final  double  prodHigh[i]  =  ai  *  bi;  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]    final  double  prodHigh[i]  =  ai  *  bi;  [BUGGY]  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	    final  double  prodHigh[i]  =  ai  *  bi;		non-compiled	[CE]  ']'  expected	22	None	add
12	[BUG]  [BUGGY]    final  double  bHigh  =  prodHigh[i]  -  (bHigh  -  bi);  [CE]  variable  bHigh  is  already  defined  in  method  linearCombination(double[],double[])  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]    final  double  bHigh  =  prodHigh[i]  -  (bHigh  -  bi);  [BUGGY]  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	    final  double  bHigh  =  prodHigh[i]  -  (bHigh  -  bi);		non-compiled	[CE]  variable  bHigh  is  already  defined  in  method  linearCombination(double[],double[])	22	None	add
13	[BUG]  [BUGGY]    final  double  bHigh  =  prodHigh[i]  -  (bHigh  *  bi);  [CE]  variable  bHigh  is  already  defined  in  method  linearCombination(double[],double[])  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  [BUGGY]    final  double  bHigh  =  prodHigh[i]  -  (bHigh  *  bi);  [BUGGY]  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	833	833	1	replace	    final  double  bHigh  =  prodHigh[i]  -  (bHigh  *  bi);		non-compiled	[CE]  variable  bHigh  is  already  defined  in  method  linearCombination(double[],double[])	22	None	add
