bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  null);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  super.addValue(obj,  null);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  null);	      Object    v    =    super.addValue(obj);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
2	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  count);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  super.addValue(obj,  count);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  count);	      Object    v    =    super.addValue(obj);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
3	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  super.addValue(obj,  1);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  1);	      Object    v    =    super.addValue(obj);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
4	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&  v  instanceof  Integer)  {  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(v  instanceof  Integer  &&  v  instanceof  Integer)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&  v  instanceof  Integer)  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  if(obj  instanceof  Integer  ||  v  instanceof  Integer)  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(obj  instanceof  Integer  ||  v  instanceof  Integer)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  ||  v  instanceof  Integer)  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
6	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer))  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  Object  v  =  getEmptyValue();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getEmptyValue();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getEmptyValue();	      Object    v    =    getValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  Object  v  =  getValue().intValue();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getValue().intValue();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue().intValue();	      Object    v    =    getValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  Object  v  =  getKey();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getKey();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getKey();	      Object    v    =    getValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  Object  v  =  this;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  this;  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this;	      Object    v    =    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
11	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&  v  instanceof  Long)  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(v  instanceof  Integer  &&  v  instanceof  Long)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&  v  instanceof  Long)  {	  if(v    instanceof    Integer    ||    v    instanceof    Long)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
12	[BUG]  [BUGGY]  if(obj  instanceof  Integer  ||  v  instanceof  Long)  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(obj  instanceof  Integer  ||  v  instanceof  Long)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  ||  v  instanceof  Long)  {	  if(v    instanceof    Integer    ||    v    instanceof    Long)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer  ||  v  instanceof  Long)  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer  ||  v  instanceof  Long)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||  v  instanceof  Integer  ||  v  instanceof  Long)  {	  if(v    instanceof    Integer    ||    v    instanceof    Long)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
14	[BUG]  [BUGGY]  Object  v  =  freqTable.get(obj);  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  freqTable.get(obj);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  freqTable.get(obj);	      Object    v    =    this.freqTable.get(obj);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(obj  +  1);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  this.freqTable.get(obj  +  1);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this.freqTable.get(obj  +  1);	      Object    v    =    this.freqTable.get(obj);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(obj,  null);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  this.freqTable.get(obj,  null);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this.freqTable.get(obj,  null);	      Object    v    =    this.freqTable.get(obj);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer))  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(!(obj  instanceof  Integer))  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer))  {	  if(!(v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  if(!(v  instanceof  Integer  ||  v  instanceof  Integer))  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(!(v  instanceof  Integer  ||  v  instanceof  Integer))  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer  ||  v  instanceof  Integer))  {	  if(!(v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  if(!(v  instanceof  Integer)&&!(v  instanceof  Integer  ||!(v  instanceof  Integer)))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(!(v  instanceof  Integer)&&!(v  instanceof  Integer  ||!(v  instanceof  Integer)))  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer)&&!(v  instanceof  Integer  ||!(v  instanceof  Integer)))  {	  if(!(v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  if(obj  instanceof  Integer)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(obj  instanceof  Integer)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer)  {	  if(!(v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  if(obj  instanceof  Integer  &&((  Integer)v).longValue()!=  null)  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(obj  instanceof  Integer  &&((  Integer)v).longValue()!=  null)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  &&((  Integer)v).longValue()!=  null)  {	  if(v    instanceof    Integer    &&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
22	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&((  Integer)v).intValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(v  instanceof  Integer  &&((  Integer)v).intValue()!=  null)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&((  Integer)v).intValue()!=  null)  {	  if(v    instanceof    Integer    &&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
23	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&((  Integer)v).longValue()  ==  null)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(v  instanceof  Integer  &&((  Integer)v).longValue()  ==  null)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&((  Integer)v).longValue()  ==  null)  {	  if(v    instanceof    Integer    &&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  null);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getValue(obj,  null);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  null);	      Object    v    =    getValue(obj);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  count);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getValue(obj,  count);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  count);	      Object    v    =    getValue(obj);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  false);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getValue(obj,  false);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  false);	      Object    v    =    getValue(obj);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  Object  v  =  getValue(null,  null);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getValue(null,  null);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(null,  null);	      Object    v    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  Object  v  =  getValue(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getValue(0);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(0);	      Object    v    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  Object  obj  =  getNullValue();  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  obj  =  getNullValue();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getNullValue();	      Object    obj    =    getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  Object  obj  =  getEmptyValue();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  obj  =  getEmptyValue();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getEmptyValue();	      Object    obj    =    getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  Object  obj  =  getClass();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  obj  =  getClass();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getClass();	      Object    obj    =    getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(!(obj  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {	  if(!(v    instanceof    Integer)&&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).intValue()!=  null)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).intValue()!=  null)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer)&&((  Integer)v).intValue()!=  null)  {	  if(!(v    instanceof    Integer)&&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
34	[BUG]  [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).longValue()  ==  null)  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).longValue()  ==  null)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer)&&((  Integer)v).longValue()  ==  null)  {	  if(!(v    instanceof    Integer)&&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
35	[BUG]  [BUGGY]  Object  v  =  getClass().getSimpleName();  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getClass().getSimpleName();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getSimpleName();	      Object    v    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
36	[BUG]  [BUGGY]  Object  v  =  getClass().getRawClass();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getClass().getRawClass();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getRawClass();	      Object    v    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
37	[BUG]  [BUGGY]  Object  v  =  getClass().getName()  +  1;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getClass().getName()  +  1;  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getName()  +  1;	      Object    v    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
38	[BUG]  [BUGGY]  Object  obj  =  v;  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  obj  =  v;  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  v;	      Object    obj    =    null;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
39	[BUG]  [BUGGY]  Object  obj  =  this;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  obj  =  this;  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  this;	      Object    obj    =    null;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  Object  obj  =  this.freqTable.get(v);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  obj  =  this.freqTable.get(v);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  this.freqTable.get(v);	      Object    obj    =    null;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  if(!(v  instanceof  Integer  ||  v  instanceof  Long))  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(!(v  instanceof  Integer  ||  v  instanceof  Long))  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer  ||  v  instanceof  Long))  {	  if(v    instanceof    Integer    ||    v    instanceof    Long)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
42	[BUG]  [BUGGY]  Object  v  =  getValue(null,  obj);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getValue(null,  obj);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(null,  obj);	      Object    v    =    getValue(null);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
43	[BUG]  [BUGGY]  Object  v  =  getValue(this);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getValue(this);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(this);	      Object    v    =    getValue(null);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
44	[BUG]  [BUGGY]  Object  v  =  getBaseValue();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getBaseValue();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getBaseValue();	      Object    v    =    getValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
45	[BUG]  [BUGGY]  Object  v  =  getNullValue();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getNullValue();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getNullValue();	      Object    v    =    getValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
46	[BUG]  [BUGGY]  Object  v  =  getImpl();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getImpl();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getImpl();	      Object    v    =    getValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
47	[BUG]  [BUGGY]  Object  v  =  getValue(obj  +  1);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getValue(obj  +  1);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj  +  1);	      Object    v    =    getValue(obj);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  Object  v  =  getClass().getImpl();  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getClass().getImpl();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getImpl();	      Object    v    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
49	[BUG]  [BUGGY]  Object  v  =  super.addValue(this.freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  super.addValue(this.freqTable.get(obj);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(this.freqTable.get(obj);	      Object    v    =    this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  Object  obj  =  value;  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  obj  =  value;  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  value;	      Object    obj    =    null;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
51	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&!(v  instanceof  Integer  ||  v  instanceof  Integer))  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(v  instanceof  Integer  &&!(v  instanceof  Integer  ||  v  instanceof  Integer))  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&!(v  instanceof  Integer  ||  v  instanceof  Integer))  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  null;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  null;  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  null;	      Object    v    =    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  0;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  0;  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  0;	      Object    v    =    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).longValue()  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).longValue()  :  null;  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Integer)?((  Integer)obj).longValue()  :  null;	      Object    v    =    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
55	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  v);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  super.addValue(obj,  v);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  v);	      Object    v    =    super.addValue(obj);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
56	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  value);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  super.addValue(obj,  value);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  value);	      Object    v    =    super.addValue(obj);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
57	[BUG]  [BUGGY]  Object  obj  =  getBaseValue();  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  obj  =  getBaseValue();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getBaseValue();	      Object    obj    =    getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  Object  v  =  getClass().getImplicitReturn();  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getClass().getImplicitReturn();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getImplicitReturn();	      Object    v    =    getClass().getName();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).doubleValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).doubleValue()!=  null)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer)&&((  Integer)v).doubleValue()!=  null)  {	  if(!(v    instanceof    Integer)&&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  Object  v  =  super.addValue(value);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  super.addValue(value);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(value);	      Object    v    =    super.addValue(obj);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  super.addValue(obj  +  1);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj  +  1);	      Object    v    =    super.addValue(obj);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
62	[BUG]  [BUGGY]  Object  v  =  new  TreeMap();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  new  TreeMap();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  new  TreeMap();	      Object    v    =    null;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
63	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&!(v  instanceof  Integer))  {  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(v  instanceof  Integer  &&!(v  instanceof  Integer))  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&!(v  instanceof  Integer))  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
64	[BUG]  [BUGGY]  Object  v  =  getValue(obj)+  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getValue(obj)+  1;  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj)+  1;	      Object    v    =    getValue(obj);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
65	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||((  Integer)v).longValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(v  instanceof  Integer  ||((  Integer)v).longValue()!=  null)  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||((  Integer)v).longValue()!=  null)  {	  if(v    instanceof    Integer    &&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||!(v  instanceof  Integer))  {	  if(!(v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
67	[BUG]  [BUGGY]  if(!(v  instanceof  Integer)&&!(v  instanceof  Integer))  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  if(!(v  instanceof  Integer)&&!(v  instanceof  Integer))  {  [BUGGY]    obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer)&&!(v  instanceof  Integer))  {	  if(!(v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
68	[BUG]  [BUGGY]  Object  obj  =  getCurrentToken();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  obj  =  getCurrentToken();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getCurrentToken();	      Object    obj    =    getValue();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
69	[BUG]  [BUGGY]  Object  obj  =  getImpl();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  obj  =  getImpl();  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getImpl();	      Object    obj    =    getValue();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
70	[BUG]  [BUGGY]  Object  v  =  getValue(null,  false);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]              Object  obj  =  v;    [BUGGY]  Object  v  =  getValue(null,  false);  [BUGGY]    if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(null,  false);	      Object    v    =    getValue(null);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
