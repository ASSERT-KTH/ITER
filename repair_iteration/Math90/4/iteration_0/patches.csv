bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Object  obj  =  null;  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]    Object  obj  =  null;  [BUGGY]  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	    Object  obj  =  null;		non-compiled	[CE]  illegal  start  of  type	8	None	add
2	[BUG]  [BUGGY]    Object  obj  =  getValue();  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]    Object  obj  =  getValue();  [BUGGY]  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	    Object  obj  =  getValue();		non-compiled	[CE]  illegal  start  of  expression	8	None	add
3	[BUG]  [BUGGY]    Object  v  =  getValue();  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]    Object  v  =  getValue();  [BUGGY]  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	    Object  v  =  getValue();		non-compiled	[CE]  illegal  start  of  expression	8	None	add
4	[BUG]  [BUGGY]    Object  v  =  null;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]    Object  v  =  null;  [BUGGY]  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	    Object  v  =  null;		non-compiled	[CE]  illegal  start  of  expression	8	None	add
5	[BUG]  [BUGGY]    Object  v  =  getValue(obj);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]    Object  v  =  getValue(obj);  [BUGGY]  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	    Object  v  =  getValue(obj);		non-compiled	[CE]  illegal  start  of  type	8	None	add
6	[BUG]  [BUGGY]  if(!(v  instanceof  Integer))  {  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]  if(!(v  instanceof  Integer))  {  [BUGGY]  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer))  {	if  (v  instanceof  Integer)  {  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer)  {  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer)  {  [BUGGY]  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||  v  instanceof  Integer)  {	if  (v  instanceof  Integer)  {  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {  [BUGGY]  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {	if  (v  instanceof  Integer)  {  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Long)  {  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Long)  {  [BUGGY]  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||  v  instanceof  Long)  {	if  (v  instanceof  Integer)  {  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]    Object  v  =  this.freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]    Object  v  =  this.freqTable.get(obj);  [BUGGY]  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	    Object  v  =  this.freqTable.get(obj);		non-compiled	[CE]  illegal  start  of  type	8	None	add
11	[BUG]  [BUGGY]    Object  v  =  getValue(null);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]    Object  v  =  getValue(null);  [BUGGY]  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	    Object  v  =  getValue(null);		non-compiled	[CE]  illegal  start  of  type	8	None	add
12	[BUG]  [BUGGY]    Object  v  =  super.addValue(obj);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]    Object  v  =  super.addValue(obj);  [BUGGY]  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	    Object  v  =  super.addValue(obj);		non-compiled	[CE]  illegal  start  of  type	8	None	add
13	[BUG]  [BUGGY]    Object  v  =  getClass().getName();  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]    Object  v  =  getClass().getName();  [BUGGY]  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	    Object  v  =  getClass().getName();		non-compiled	[CE]  illegal  start  of  type	8	None	add
14	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&((  Integer)v).longValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]            Object  obj  =  v;  [BUGGY]  if(v  instanceof  Integer  &&((  Integer)v).longValue()!=  null)  {  [BUGGY]  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&((  Integer)v).longValue()!=  null)  {	if  (v  instanceof  Integer)  {  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
