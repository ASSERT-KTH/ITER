bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer)&&((  Integer)v).longValue()  ==  null)  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(obj  instanceof  Integer)&&((  Integer)v).longValue()  ==  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer)&&((  Integer)v).longValue()  ==  null)  {	  if(!(v    instanceof    Integer)&&((    Integer)v).longValue()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
2	[BUG]  [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).intValue()  ==  null)  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).intValue()  ==  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer)&&((  Integer)v).intValue()  ==  null)  {	  if(!(v    instanceof    Integer)&&((    Integer)v).longValue()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
3	[BUG]  [BUGGY]  Object  v  =  getClass().getImplicitReturn(obj);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getClass().getImplicitReturn(obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getImplicitReturn(obj);	  Object    v    =    getClass().getImplicitReturn();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
4	[BUG]  [BUGGY]  Object  v  =  getClass().getReturnType();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getClass().getReturnType();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getReturnType();	  Object    v    =    getClass().getImplicitReturn();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
5	[BUG]  [BUGGY]  if(obj  instanceof  Integer  ||((  Integer)v).longValue()!=  null)  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  ||((  Integer)v).longValue()!=  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  ||((  Integer)v).longValue()!=  null)  {	  if(v    instanceof    Integer    ||((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
6	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||((  Integer)v).intValue()!=  null)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  ||((  Integer)v).intValue()!=  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||((  Integer)v).intValue()!=  null)  {	  if(v    instanceof    Integer    ||((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
7	[BUG]  [BUGGY]  Object  v  =  getNumberValue();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getNumberValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getNumberValue();	  Object    v    =    getNullValue();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
8	[BUG]  [BUGGY]  Object  v  =  getRawValue();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getRawValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getRawValue();	  Object    v    =    getNullValue();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
9	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  count  +  1);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  count  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  count  +  1);	  Object    v    =    getValue(obj,    count);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
10	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  count.intValue());  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  count.intValue());  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  count.intValue());	  Object    v    =    getValue(obj,    count);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
11	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  count.longValue());  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  count.longValue());  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  count.longValue());	  Object    v    =    getValue(obj,    count);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
12	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  count  *  2);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  count  *  2);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  count  *  2);	  Object    v    =    getValue(obj,    count);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
13	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  1L);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  1L);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  1L);	  Object    v    =    super.addValue(obj,    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
14	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  2);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  2);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  2);	  Object    v    =    super.addValue(obj,    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  0);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  0);	  Object    v    =    super.addValue(obj,    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
16	[BUG]  [BUGGY]  if(obj  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer))  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer    ||!(v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Long))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Long))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Long))  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer    ||!(v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer  ||!(v  instanceof  Integer))  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer    ||!(v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||!(v  instanceof  Integer  ||  v  instanceof  Integer))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  ||!(v  instanceof  Integer  ||  v  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||!(v  instanceof  Integer  ||  v  instanceof  Integer))  {	  if(v    instanceof    Integer    &&!(v    instanceof    Integer    ||    v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
20	[BUG]  [BUGGY]  if(obj  instanceof  Integer  ||!(v  instanceof  Integer  ||  v  instanceof  Integer))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  ||!(v  instanceof  Integer  ||  v  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  ||!(v  instanceof  Integer  ||  v  instanceof  Integer))  {	  if(v    instanceof    Integer    &&!(v    instanceof    Integer    ||    v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
21	[BUG]  [BUGGY]  if(obj  instanceof  Integer  &&!(v  instanceof  Integer  ||  v  instanceof  Integer))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  &&!(v  instanceof  Integer  ||  v  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  &&!(v  instanceof  Integer  ||  v  instanceof  Integer))  {	  if(v    instanceof    Integer    &&!(v    instanceof    Integer    ||    v    instanceof    Integer))    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
22	[BUG]  [BUGGY]  Object  v  =  getValue(null,  null,  obj);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(null,  null,  obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(null,  null,  obj);	  Object    v    =    getValue(null,    null);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
23	[BUG]  [BUGGY]  Object  v  =  getValue(null,  null,  false);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(null,  null,  false);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(null,  null,  false);	  Object    v    =    getValue(null,    null);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
24	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer)&&((  Integer)v).doubleValue()!=  null)  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(obj  instanceof  Integer)&&((  Integer)v).doubleValue()!=  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer)&&((  Integer)v).doubleValue()!=  null)  {	  if(!(v    instanceof    Integer)&&((    Integer)v).doubleValue()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
25	[BUG]  [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).doubleValue()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)v).doubleValue()  ==  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer)&&((  Integer)v).doubleValue()  ==  null)  {	  if(!(v    instanceof    Integer)&&((    Integer)v).doubleValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
26	[BUG]  [BUGGY]  Object  v  =  this.getValue();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  this.getValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this.getValue();	  Object    v    =    getKey();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  Object  v  =  getBaseValue(obj);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getBaseValue(obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getBaseValue(obj);	  Object    v    =    getBaseValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
28	[BUG]  [BUGGY]  Object  v  =  freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  freqTable.get(obj  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  freqTable.get(obj  +  1);	  Object    v    =    freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  Object  v  =  freqTable.get(obj,  null);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  freqTable.get(obj,  null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  freqTable.get(obj,  null);	  Object    v    =    freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  if(obj  instanceof  Integer  ||  v  instanceof  Integer  ||  v  instanceof  Long)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  ||  v  instanceof  Integer  ||  v  instanceof  Long)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  ||  v  instanceof  Integer  ||  v  instanceof  Long)  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer    ||    v    instanceof    Long)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
31	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&  v  instanceof  Integer  ||  v  instanceof  Long)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  &&  v  instanceof  Integer  ||  v  instanceof  Long)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&  v  instanceof  Integer  ||  v  instanceof  Long)  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer    ||    v    instanceof    Long)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
32	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Long  ||  v  instanceof  Integer)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Long  ||  v  instanceof  Integer)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||  v  instanceof  Long  ||  v  instanceof  Integer)  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer    ||    v    instanceof    Long)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
33	[BUG]  [BUGGY]  Object  obj  =  getEmptyObject();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getEmptyObject();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getEmptyObject();	  Object    obj    =    getEmptyValue();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
34	[BUG]  [BUGGY]  Object  obj  =  getNumberValue();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getNumberValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getNumberValue();	  Object    obj    =    getEmptyValue();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
35	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  count  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  count  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  count  +  1);	  Object    v    =    super.addValue(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
36	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj  +  1,  count);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj  +  1,  count);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj  +  1,  count);	  Object    v    =    super.addValue(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
37	[BUG]  [BUGGY]  Object  v  =  super.addValue(value,  obj);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(value,  obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(value,  obj);	  Object    v    =    super.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
38	[BUG]  [BUGGY]  Object  obj  =  this.freqTable.get(v  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  this.freqTable.get(v  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  this.freqTable.get(v  +  1);	  Object    obj    =    this.freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
39	[BUG]  [BUGGY]  Object  obj  =  this.freqTable.get(v)+  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  this.freqTable.get(v)+  1;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  this.freqTable.get(v)+  1;	  Object    obj    =    this.freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
40	[BUG]  [BUGGY]  Object  obj  =  super.addValue(v);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  super.addValue(v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  super.addValue(v);	  Object    obj    =    this.freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
41	[BUG]  [BUGGY]  Object  v  =  getValue(1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(1);	  Object    v    =    getValue(0);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
42	[BUG]  [BUGGY]  Object  v  =  getValue(2);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(2);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(2);	  Object    v    =    getValue(0);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
43	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  value  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  value  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  value  +  1);	  Object    v    =    super.addValue(obj,    value);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
44	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  this.value);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  this.value);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  this.value);	  Object    v    =    super.addValue(obj,    value);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
45	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&((  Integer)obj).longValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  &&((  Integer)obj).longValue()!=  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&((  Integer)obj).longValue()!=  null)  {	  if(obj    instanceof    Integer    &&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
46	[BUG]  [BUGGY]  if(obj  instanceof  Integer  &&((  Integer)v).intValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  &&((  Integer)v).intValue()!=  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  &&((  Integer)v).intValue()!=  null)  {	  if(obj    instanceof    Integer    &&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
47	[BUG]  [BUGGY]  if(obj  instanceof  Integer  ||!(v  instanceof  Integer))  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  ||!(v  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  ||!(v  instanceof  Integer))  {	  if(v    instanceof    Integer    ||!(v    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
48	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer  ||  v  instanceof  Long))  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(obj  instanceof  Integer  ||  v  instanceof  Long))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer  ||  v  instanceof  Long))  {	  if(!(v    instanceof    Integer    ||    v    instanceof    Long))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
49	[BUG]  [BUGGY]  if(obj  instanceof  Integer  &&  v  instanceof  Integer)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  &&  v  instanceof  Integer)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  &&  v  instanceof  Integer)  {	  if(v    instanceof    Integer    &&    v    instanceof    Integer)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||  obj  instanceof  Long)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  ||  obj  instanceof  Long)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||  obj  instanceof  Long)  {	  if(obj    instanceof    Integer    ||    v    instanceof    Long)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  if(obj  instanceof  Integer  &&  v  instanceof  Long)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  &&  v  instanceof  Long)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  &&  v  instanceof  Long)  {	  if(obj    instanceof    Integer    ||    v    instanceof    Long)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
52	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer  ||  v  instanceof  Integer))  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(obj  instanceof  Integer  ||  v  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer  ||  v  instanceof  Integer))  {	  if(!(obj    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
53	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer)&&!(v  instanceof  Integer))  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(obj  instanceof  Integer)&&!(v  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer)&&!(v  instanceof  Integer))  {	  if(!(obj    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
54	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  this);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  this);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  this);	  Object    v    =    super.addValue(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  null,  false);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  null,  false);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  null,  false);	  Object    v    =    super.addValue(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  Object  v  =  getValue(obj)+  2;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj)+  2;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj)+  2;	  Object    v    =    getValue(obj)+    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
57	[BUG]  [BUGGY]  Object  v  =  getValue(obj)/  1;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj)/  1;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj)/  1;	  Object    v    =    getValue(obj)+    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
58	[BUG]  [BUGGY]  Object  v  =  getValue(obj)+  1L;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj)+  1L;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj)+  1L;	  Object    v    =    getValue(obj)+    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
59	[BUG]  [BUGGY]  Object  v  =  super.addValue(this.freqTable.get(obj));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(this.freqTable.get(obj));  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(this.freqTable.get(obj));	  Object    v    =    super.addValue(this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
60	[BUG]  [BUGGY]  Object  v  =  super.addValue(this.freqTable.get(obj)+  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(this.freqTable.get(obj)+  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(this.freqTable.get(obj)+  1);	  Object    v    =    super.addValue(this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
61	[BUG]  [BUGGY]  Object  v  =  super.addValue(this.freqTable.get(obj).toString());  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(this.freqTable.get(obj).toString());  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(this.freqTable.get(obj).toString());	  Object    v    =    super.addValue(this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
62	[BUG]  [BUGGY]  if(obj  instanceof  Integer  &&!(obj  instanceof  Integer))  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  &&!(obj  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  &&!(obj  instanceof  Integer))  {	  if(v    instanceof    Integer    &&!(v    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
63	[BUG]  [BUGGY]  if(obj  instanceof  Integer  &&!(v  instanceof  Integer))  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  &&!(v  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  &&!(v  instanceof  Integer))  {	  if(v    instanceof    Integer    &&!(v    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
64	[BUG]  [BUGGY]  Object  v  =  getEmptyObject();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getEmptyObject();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getEmptyObject();	  Object    v    =    getEmptyValue();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||  obj  instanceof  Integer)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  ||  obj  instanceof  Integer)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||  obj  instanceof  Integer)  {	  if(obj    instanceof    Integer    ||    v    instanceof    Integer)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
66	[BUG]  [BUGGY]  Object  v  =  new  TreeMap().get(obj);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  new  TreeMap().get(obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  new  TreeMap().get(obj);	  Object    v    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
67	[BUG]  [BUGGY]  Object  v  =  new  TreeMap(this.count);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  new  TreeMap(this.count);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  new  TreeMap(this.count);	  Object    v    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
68	[BUG]  [BUGGY]  Object  v  =  new  TreeMap(Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  new  TreeMap(Long.MAX_VALUE);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  new  TreeMap(Long.MAX_VALUE);	  Object    v    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
69	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  null;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  null;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  null;	  Object    v    =(obj    instanceof    Integer)?((    Integer)obj).longValue()    :    null;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
70	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).doubleValue()  :  null;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).doubleValue()  :  null;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Integer)?((  Integer)obj).doubleValue()  :  null;	  Object    v    =(obj    instanceof    Integer)?((    Integer)obj).longValue()    :    null;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
71	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).longValue()  :  Long.valueOf(0);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).longValue()  :  Long.valueOf(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Integer)?((  Integer)obj).longValue()  :  Long.valueOf(0);	  Object    v    =(obj    instanceof    Integer)?((    Integer)obj).longValue()    :    null;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
72	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer)&&((  Integer)v).intValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(obj  instanceof  Integer)&&((  Integer)v).intValue()!=  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer)&&((  Integer)v).intValue()!=  null)  {	  if(!(obj    instanceof    Integer)&&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
73	[BUG]  [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)obj).longValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(v  instanceof  Integer)&&((  Integer)obj).longValue()!=  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer)&&((  Integer)obj).longValue()!=  null)  {	  if(!(obj    instanceof    Integer)&&((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
74	[BUG]  [BUGGY]  Object  v  =  getValue().longValue();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue().longValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue().longValue();	  Object    v    =    getValue().intValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
75	[BUG]  [BUGGY]  Object  v  =  getValue().doubleValue();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue().doubleValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue().doubleValue();	  Object    v    =    getValue().intValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
76	[BUG]  [BUGGY]  Object  v  =  getValue().intValue()  +  1;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue().intValue()  +  1;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue().intValue()  +  1;	  Object    v    =    getValue().intValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
77	[BUG]  [BUGGY]  Object  obj  =  getCurrentValue();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getCurrentValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getCurrentValue();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
78	[BUG]  [BUGGY]  Object  obj  =  this.getCurrentToken();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  this.getCurrentToken();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  this.getCurrentToken();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
79	[BUG]  [BUGGY]  Object  obj  =  getCurrentToken().getValue();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getCurrentToken().getValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getCurrentToken().getValue();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
80	[BUG]  [BUGGY]  Object  v  =  getValue(null,  obj,  null);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(null,  obj,  null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(null,  obj,  null);	  Object    v    =    getValue(null,    obj);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
81	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(obj,  null  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  this.freqTable.get(obj,  null  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this.freqTable.get(obj,  null  +  1);	  Object    v    =    this.freqTable.get(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
82	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(obj,  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  this.freqTable.get(obj,  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this.freqTable.get(obj,  1);	  Object    v    =    this.freqTable.get(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
83	[BUG]  [BUGGY]  Object  obj  =  getBaseValue().getObject();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getBaseValue().getObject();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getBaseValue().getObject();	  Object    obj    =    getBaseValue();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
84	[BUG]  [BUGGY]  Object  obj  =  getClass().getRawClass();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getClass().getRawClass();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getClass().getRawClass();	  Object    obj    =    getClass();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
85	[BUG]  [BUGGY]  Object  obj  =  getClass().getName();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getClass().getName();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getClass().getName();	  Object    obj    =    getClass();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
86	[BUG]  [BUGGY]  Object  obj  =  getClass().getComparator();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getClass().getComparator();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getClass().getComparator();	  Object    obj    =    getClass();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
87	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  0,  count);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  0,  count);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  0,  count);	  Object    v    =    super.addValue(obj,    count);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
88	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  count  *  2);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  count  *  2);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  count  *  2);	  Object    v    =    super.addValue(obj,    count);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
89	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  true);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  true);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  true);	  Object    v    =    getValue(obj,    false);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
90	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  false,  true);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  false,  true);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  false,  true);	  Object    v    =    getValue(obj,    false);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
91	[BUG]  [BUGGY]  Object  obj  =  this.value;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  this.value;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  this.value;	  Object    obj    =    value;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
92	[BUG]  [BUGGY]  Object  obj  =  value.getValue();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  value.getValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  value.getValue();	  Object    obj    =    value;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
93	[BUG]  [BUGGY]  Object  obj  =  getImplicitNullValue();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getImplicitNullValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getImplicitNullValue();	  Object    obj    =    getNullValue();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
94	[BUG]  [BUGGY]  if(obj  instanceof  Integer  &&((  Integer)v).longValue()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  &&((  Integer)v).longValue()  ==  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  &&((  Integer)v).longValue()  ==  null)  {	  if(v    instanceof    Integer    &&((    Integer)v).longValue()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
95	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&((  Integer)v).intValue()  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  &&((  Integer)v).intValue()  ==  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&((  Integer)v).intValue()  ==  null)  {	  if(v    instanceof    Integer    &&((    Integer)v).longValue()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
96	[BUG]  [BUGGY]  Object  v  =  getNullValue(this);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getNullValue(this);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getNullValue(this);	  Object    v    =    getValue(this);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
97	[BUG]  [BUGGY]  Object  obj  =  this.frequencyTable.get(v);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  this.frequencyTable.get(v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  this.frequencyTable.get(v);	  Object    obj    =    v;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
98	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  this);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  this);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  this);	  Object    v    =    getValue(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
99	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  null,  false);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  null,  false);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  null,  false);	  Object    v    =    getValue(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
100	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  null,  true);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  null,  true);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  null,  true);	  Object    v    =    getValue(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
101	[BUG]  [BUGGY]  Object  v  =  this.getImpl();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  this.getImpl();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this.getImpl();	  Object    v    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
102	[BUG]  [BUGGY]  Object  v  =  getImpl(0);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getImpl(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getImpl(0);	  Object    v    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
103	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  Integer.valueOf(0);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  Integer.valueOf(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  Integer.valueOf(0);	  Object    v    =(obj    instanceof    Long)?((    Long)obj).longValue()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
104	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  Boolean.TRUE;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  Boolean.TRUE;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  Boolean.TRUE;	  Object    v    =(obj    instanceof    Long)?((    Long)obj).longValue()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
105	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  Integer.MIN_VALUE;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  :  Integer.MIN_VALUE;	  Object    v    =(obj    instanceof    Long)?((    Long)obj).longValue()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
106	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer)&&!(v  instanceof  Integer  ||!(v  instanceof  Integer)))  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(obj  instanceof  Integer)&&!(v  instanceof  Integer  ||!(v  instanceof  Integer)))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer)&&!(v  instanceof  Integer  ||!(v  instanceof  Integer)))  {	  if(!(v    instanceof    Integer)&&!(v    instanceof    Integer    ||!(v    instanceof    Integer)))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
107	[BUG]  [BUGGY]  if(obj  instanceof  Integer  ||!(v  instanceof  Integer  ||!(v  instanceof  Integer)))  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  ||!(v  instanceof  Integer  ||!(v  instanceof  Integer)))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  ||!(v  instanceof  Integer  ||!(v  instanceof  Integer)))  {	  if(!(v    instanceof    Integer)&&!(v    instanceof    Integer    ||!(v    instanceof    Integer)))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
108	[BUG]  [BUGGY]  if(obj  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  ==  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  ==  null)  {	  if(!(v    instanceof    Integer)&&!(v    instanceof    Integer    ||!(v    instanceof    Integer)))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
109	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  1);	  Object    v    =    getValue(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
110	[BUG]  [BUGGY]  Object  obj  =  this.getImpl();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  this.getImpl();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  this.getImpl();	  Object    obj    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
111	[BUG]  [BUGGY]  Object  obj  =  getImpl(0);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getImpl(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getImpl(0);	  Object    obj    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
112	[BUG]  [BUGGY]  Object  obj  =  getImpl(null);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getImpl(null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getImpl(null);	  Object    obj    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
113	[BUG]  [BUGGY]  Object  v  =  getValue(null,  true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(null,  true);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(null,  true);	  Object    v    =    getValue(null,    false);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
114	[BUG]  [BUGGY]  Object  v  =  getValue(false,  false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(false,  false);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(false,  false);	  Object    v    =    getValue(null,    false);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
115	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).longValue()  :  0;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).longValue()  :  0;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Integer)?((  Integer)obj).longValue()  :  0;	  Object    v    =(obj    instanceof    Integer)?((    Integer)obj).intValue()    :    0;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
116	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  1;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  1;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  1;	  Object    v    =(obj    instanceof    Integer)?((    Integer)obj).intValue()    :    0;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
117	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue();	  Object    v    =(obj    instanceof    Integer)?((    Integer)obj).intValue()    :    0;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
118	[BUG]  [BUGGY]  Object  v  =  getClass().getRawClass().getSimpleName();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getClass().getRawClass().getSimpleName();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getRawClass().getSimpleName();	  Object    v    =    getClass().getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
119	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(obj  +  2);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  this.freqTable.get(obj  +  2);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this.freqTable.get(obj  +  2);	  Object    v    =    this.freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
120	[BUG]  [BUGGY]  Object  v  =  getCurrentToken();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getCurrentToken();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getCurrentToken();	  Object    v    =    this;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
121	[BUG]  [BUGGY]  Object  v  =  this.getClass().getName();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  this.getClass().getName();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this.getClass().getName();	  Object    v    =    getClass().getName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
122	[BUG]  [BUGGY]  Object  v  =  get(this);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  get(this);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  get(this);	  Object    v    =    getValue(this);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
123	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer)&&!(obj  instanceof  Integer))  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(obj  instanceof  Integer)&&!(obj  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer)&&!(obj  instanceof  Integer))  {	  if(!(v    instanceof    Integer)&&!(v    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
124	[BUG]  [BUGGY]  Object  obj  =  getClass().getComponentType();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getClass().getComponentType();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getClass().getComponentType();	  Object    obj    =    getClass();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
125	[BUG]  [BUGGY]  Object  obj  =  value  instanceof  String?((  String)v).longValue()  :  Integer.valueOf(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  value  instanceof  String?((  String)v).longValue()  :  Integer.valueOf(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  value  instanceof  String?((  String)v).longValue()  :  Integer.valueOf(0);	  Object    obj    =    value;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
126	[BUG]  [BUGGY]  Object  obj  =  value  instanceof  String?((  String)value).longValue()  :  Long.valueOf(0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  value  instanceof  String?((  String)value).longValue()  :  Long.valueOf(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  value  instanceof  String?((  String)value).longValue()  :  Long.valueOf(0);	  Object    obj    =    value;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
127	[BUG]  [BUGGY]  Object  obj  =  value  instanceof  String?((  String)v).longValue()  :  Long.valueOf(0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  value  instanceof  String?((  String)v).longValue()  :  Long.valueOf(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  value  instanceof  String?((  String)v).longValue()  :  Long.valueOf(0);	  Object    obj    =    value;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
128	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  1,  count);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  1,  count);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  1,  count);	  Object    v    =    getValue(obj,    count);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
129	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&!(v  instanceof  Long))  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  &&!(v  instanceof  Long))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&!(v  instanceof  Long))  {	  if(!(v    instanceof    Integer    ||    v    instanceof    Long))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
130	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  null,  v);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  null,  v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  null,  v);	  Object    v    =    super.addValue(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
131	[BUG]  [BUGGY]  Object  v  =  getClass().getRawType();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getClass().getRawType();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getRawType();	  Object    v    =    getClass().getRawClass();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
132	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj  *  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj  *  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj  *  1);	  Object    v    =    super.addValue(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
133	[BUG]  [BUGGY]  Object  obj  =  new  TreeMap();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  new  TreeMap();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  new  TreeMap();	  Object    obj    =    this;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
134	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  0L;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  0L;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  :  0L;	  Object    v    =(obj    instanceof    Integer)?((    Integer)obj).intValue()    :    0;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
135	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  +  1:  0;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  +  1:  0;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Integer)?((  Integer)obj).intValue()  +  1:  0;	  Object    v    =(obj    instanceof    Integer)?((    Integer)obj).intValue()    :    0;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
136	[BUG]  [BUGGY]  if(obj  instanceof  Integer  &&((  Integer)v).longValue()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(obj  instanceof  Integer  &&((  Integer)v).longValue()!=  0)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(obj  instanceof  Integer  &&((  Integer)v).longValue()!=  0)  {	  if(obj    instanceof    Integer)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
137	[BUG]  [BUGGY]  Object  v  =  getValue(this,  false);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(this,  false);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(this,  false);	  Object    v    =    getValue(null,    false);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
138	[BUG]  [BUGGY]  Object  v  =  getValue(obj  *  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj  *  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj  *  1);	  Object    v    =    getValue(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
139	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  false,  null);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  false,  null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  false,  null);	  Object    v    =    getValue(obj,    false);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
140	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  null,  v.intValue());  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  null,  v.intValue());  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  null,  v.intValue());	  Object    v    =    getValue(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
141	[BUG]  [BUGGY]  Object  v  =  getImpl(null);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getImpl(null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getImpl(null);	  Object    v    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
142	[BUG]  [BUGGY]  Object  v  =  getImpl(obj);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getImpl(obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getImpl(obj);	  Object    v    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
143	[BUG]  [BUGGY]  Object  obj  =  getCurrentName();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getCurrentName();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getCurrentName();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
144	[BUG]  [BUGGY]  Object  obj  =  getCurrentIndex();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getCurrentIndex();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getCurrentIndex();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
145	[BUG]  [BUGGY]  Object  v  =  new  TreeMap(freqTable.get(obj));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  new  TreeMap(freqTable.get(obj));  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  new  TreeMap(freqTable.get(obj));	  Object    v    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
146	[BUG]  [BUGGY]  Object  v  =  new  TreeMap(freqTable.size());  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  new  TreeMap(freqTable.size());  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  new  TreeMap(freqTable.size());	  Object    v    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
147	[BUG]  [BUGGY]  Object  v  =  new  TreeMap(this.freqTable);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  new  TreeMap(this.freqTable);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  new  TreeMap(this.freqTable);	  Object    v    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
148	[BUG]  [BUGGY]  Object  obj  =  freqTable.get(v);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  freqTable.get(v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  freqTable.get(v);	  Object    obj    =    this.freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
149	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(v);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  this.freqTable.get(v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this.freqTable.get(v);	  Object    obj    =    this.freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
150	[BUG]  [BUGGY]  Object  obj  =  getImmediateParentValue();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getImmediateParentValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getImmediateParentValue();	  Object    obj    =    getNullValue();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
151	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer)&&  v  instanceof  Integer)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(obj  instanceof  Integer)&&  v  instanceof  Integer)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer)&&  v  instanceof  Integer)  {	  if(!(obj    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
152	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  +  1:  null;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  +  1:  null;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Long)?((  Long)obj).longValue()  +  1:  null;	  Object    v    =(obj    instanceof    Long)?((    Long)obj).longValue()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
153	[BUG]  [BUGGY]  Object  obj  =  v  instanceof  Integer?((  Integer)v).intValue()  :  0;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  v  instanceof  Integer?((  Integer)v).intValue()  :  0;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  v  instanceof  Integer?((  Integer)v).intValue()  :  0;	  Object    obj    =    v;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
154	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(obj,  v);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  this.freqTable.get(obj,  v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this.freqTable.get(obj,  v);	  Object    v    =    this.freqTable.get(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
155	[BUG]  [BUGGY]  if(!(obj  instanceof  Integer)&&!(obj  instanceof  Integer  ||!(v  instanceof  Integer)))  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(obj  instanceof  Integer)&&!(obj  instanceof  Integer  ||!(v  instanceof  Integer)))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(obj  instanceof  Integer)&&!(obj  instanceof  Integer  ||!(v  instanceof  Integer)))  {	  if(!(v    instanceof    Integer)&&!(v    instanceof    Integer    ||!(v    instanceof    Integer)))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
156	[BUG]  [BUGGY]  Object  v  =  getClass().getImpl(null);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getClass().getImpl(null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getImpl(null);	  Object    v    =    getClass().getImpl();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
157	[BUG]  [BUGGY]  Object  v  =  getClass().getImpl(0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getClass().getImpl(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getImpl(0);	  Object    v    =    getClass().getImpl();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
158	[BUG]  [BUGGY]  Object  v  =  super.addValue(freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(freqTable.get(obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(freqTable.get(obj);	  Object    v    =    super.addValue(this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
159	[BUG]  [BUGGY]  Object  v  =  super.addValue(this.freqTable.get(obj).value();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(this.freqTable.get(obj).value();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(this.freqTable.get(obj).value();	  Object    v    =    super.addValue(this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
160	[BUG]  [BUGGY]  Object  v  =  getClass().getSimpleName(obj);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getClass().getSimpleName(obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getSimpleName(obj);	  Object    v    =    getClass().getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
161	[BUG]  [BUGGY]  Object  v  =  getClass();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getClass();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass();	  Object    v    =    getKey();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
162	[BUG]  [BUGGY]  Object  v  =  super.add(obj);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.add(obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.add(obj);	  Object    v    =    super.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
163	[BUG]  [BUGGY]  Object  v  =  getBaseValue(null);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getBaseValue(null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getBaseValue(null);	  Object    v    =    getBaseValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
164	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  v  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  v  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  v  +  1);	  Object    v    =    super.addValue(obj,    v);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
165	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&  v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  &&  v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&  v  instanceof  Integer  ||!(v  instanceof  Integer))  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer    ||!(v    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
166	[BUG]  [BUGGY]  if(!(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer))  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer))  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer    ||!(v    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
167	[BUG]  [BUGGY]  Object  v  =  getClass().getImplicitValue();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getClass().getImplicitValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getImplicitValue();	  Object    v    =    getClass().getImplicitReturn();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
168	[BUG]  [BUGGY]  Object  v  =  getClass().getImplicit(obj);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getClass().getImplicit(obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getImplicit(obj);	  Object    v    =    getClass().getImplicitReturn();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
169	[BUG]  [BUGGY]  Object  v  =(obj  ==  null)?  null  :  obj.getClass();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  ==  null)?  null  :  obj.getClass();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  ==  null)?  null  :  obj.getClass();	  Object    v    =    this;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
170	[BUG]  [BUGGY]  Object  v  =(obj  ==  null)?  null  :  obj.intValue();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  ==  null)?  null  :  obj.intValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  ==  null)?  null  :  obj.intValue();	  Object    v    =    this;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
171	[BUG]  [BUGGY]  Object  v  =(obj!=  null)?  null  :  obj.getClass();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj!=  null)?  null  :  obj.getClass();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj!=  null)?  null  :  obj.getClass();	  Object    v    =    this;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
172	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  4);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  4);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  4);	  Object    v    =    super.addValue(obj,    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
173	[BUG]  [BUGGY]  Object  v  =  freqTable.get(obj)+  1;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  freqTable.get(obj)+  1;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  freqTable.get(obj)+  1;	  Object    v    =    freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
174	[BUG]  [BUGGY]  Object  v  =  getValue(this,  obj);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(this,  obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(this,  obj);	  Object    v    =    getValue(null,    obj);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
175	[BUG]  [BUGGY]  Object  v  =  getValue(freqTable,  obj);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(freqTable,  obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(freqTable,  obj);	  Object    v    =    getValue(null,    obj);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
176	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||((  Integer)v).longValue()  ==  null)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  ||((  Integer)v).longValue()  ==  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||((  Integer)v).longValue()  ==  null)  {	  if(v    instanceof    Integer    ||((    Integer)v).longValue()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
177	[BUG]  [BUGGY]  Object  v  =  getClass().getImplicitInstance();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getClass().getImplicitInstance();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getClass().getImplicitInstance();	  Object    v    =    getClass().getImplicitReturn();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
178	[BUG]  [BUGGY]  Object  v  =  super.addValue(value,  null);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(value,  null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(value,  null);	  Object    v    =    super.addValue(value);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
179	[BUG]  [BUGGY]  Object  v  =  freqTable.get(obj).toString();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  freqTable.get(obj).toString();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  freqTable.get(obj).toString();	  Object    v    =    freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
180	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||!(v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  ||!(v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||!(v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {	  if(v    instanceof    Integer    ||!(v    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
181	[BUG]  [BUGGY]  Object  v  =  new  TreeMap(System.identityHashCode(obj));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  new  TreeMap(System.identityHashCode(obj));  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  new  TreeMap(System.identityHashCode(obj));	  Object    v    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
182	[BUG]  [BUGGY]  Object  v  =  new  TreeMap(TreeMap.class);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  new  TreeMap(TreeMap.class);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  new  TreeMap(TreeMap.class);	  Object    v    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
183	[BUG]  [BUGGY]  Object  v  =  new  TreeMap(System.identityHashCode(this));  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  new  TreeMap(System.identityHashCode(this));  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  new  TreeMap(System.identityHashCode(this));	  Object    v    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
184	[BUG]  [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  ||  v  instanceof  Integer  ||!(v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer    ||!(v    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
185	[BUG]  [BUGGY]  if(v  instanceof  Integer  &&  v  instanceof  Integer  &&  v  instanceof  Long)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(v  instanceof  Integer  &&  v  instanceof  Integer  &&  v  instanceof  Long)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(v  instanceof  Integer  &&  v  instanceof  Integer  &&  v  instanceof  Long)  {	  if(v    instanceof    Integer    ||    v    instanceof    Integer    ||    v    instanceof    Long)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
186	[BUG]  [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).doubleValue()  :  null;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =(obj  instanceof  Long)?((  Long)obj).doubleValue()  :  null;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =(obj  instanceof  Long)?((  Long)obj).doubleValue()  :  null;	  Object    v    =(obj    instanceof    Long)?((    Long)obj).longValue()    :    null;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
187	[BUG]  [BUGGY]  Object  obj  =  value  ==  null?  value  :  Integer.valueOf(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  value  ==  null?  value  :  Integer.valueOf(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  value  ==  null?  value  :  Integer.valueOf(0);	  Object    obj    =    value;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
188	[BUG]  [BUGGY]  Object  obj  =  value!=  null?  value  :  Integer.valueOf(0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  value!=  null?  value  :  Integer.valueOf(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  value!=  null?  value  :  Integer.valueOf(0);	  Object    obj    =    value;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
189	[BUG]  [BUGGY]  Object  obj  =  value  instanceof  Integer?((  Integer)v).intValue()  :  0;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  value  instanceof  Integer?((  Integer)v).intValue()  :  0;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  value  instanceof  Integer?((  Integer)v).intValue()  :  0;	  Object    obj    =    value;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
190	[BUG]  [BUGGY]  Object  v  =  getCurrentNode();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getCurrentNode();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getCurrentNode();	  Object    v    =    this;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
191	[BUG]  [BUGGY]  Object  v  =  getImpl(1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getImpl(1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getImpl(1);	  Object    v    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
192	[BUG]  [BUGGY]  Object  obj  =  super.getImpl();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  super.getImpl();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  super.getImpl();	  Object    obj    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
193	[BUG]  [BUGGY]  Object  obj  =  getCurrentToken().toString();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getCurrentToken().toString();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getCurrentToken().toString();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
194	[BUG]  [BUGGY]  Object  obj  =  getCurrentNumericValue();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getCurrentNumericValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getCurrentNumericValue();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
195	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  1,  count);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  1,  count);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  1,  count);	  Object    v    =    super.addValue(obj,    count);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
196	[BUG]  [BUGGY]  Object  v  =  getValue(false,  obj);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(false,  obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(false,  obj);	  Object    v    =    getValue(null,    obj);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
197	[BUG]  [BUGGY]  Object  obj  =  super.getValue();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  super.getValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  super.getValue();	  Object    obj    =    v;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
198	[BUG]  [BUGGY]  Object  v  =  getImpl(this);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getImpl(this);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getImpl(this);	  Object    v    =    getValue(this);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
199	[BUG]  [BUGGY]  if(!(v  instanceof  Integer  ||  v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  if(!(v  instanceof  Integer  ||  v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {  [BUGGY]      obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	if(!(v  instanceof  Integer  ||  v  instanceof  Integer)&&((  Integer)v).longValue()!=  null)  {	  if(!(v    instanceof    Integer    ||    v    instanceof    Integer))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
200	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(obj  /  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  this.freqTable.get(obj  /  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  this.freqTable.get(obj  /  1);	  Object    v    =    this.freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
201	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  null,  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  null,  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  null,  1);	  Object    v    =    super.addValue(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
202	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  null,  v);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  null,  v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  null,  v);	  Object    v    =    getValue(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
203	[BUG]  [BUGGY]  Object  obj  =  getImmediateParentPointer();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getImmediateParentPointer();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getImmediateParentPointer();	  Object    obj    =    getNullValue();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
204	[BUG]  [BUGGY]  Object  v  =  getValue(obj  /  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj  /  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj  /  1);	  Object    v    =    getValue(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
205	[BUG]  [BUGGY]  Object  obj  =  getBase();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getBase();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getBase();	  Object    obj    =    getBaseValue();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
206	[BUG]  [BUGGY]  Object  obj  =  getBaseValue(null);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  obj  =  getBaseValue(null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  obj  =  getBaseValue(null);	  Object    obj    =    getBaseValue();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
207	[BUG]  [BUGGY]  Object  v  =  getValue(obj,  count  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj,  count  -  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj,  count  -  1);	  Object    v    =    getValue(obj,    count);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
208	[BUG]  [BUGGY]  Object  v  =  getValue(null,  null).toString();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(null,  null).toString();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(null,  null).toString();	  Object    v    =    getValue(null,    null);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
209	[BUG]  [BUGGY]  Object  v  =  getValue(obj)-  1;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  getValue(obj)-  1;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  getValue(obj)-  1;	  Object    v    =    getValue(obj)+    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
210	[BUG]  [BUGGY]  Object  v  =  super.addValue(obj,  Boolean.TRUE);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                Object  obj  =  v;      [BUGGY]  Object  v  =  super.addValue(obj,  Boolean.TRUE);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	122	122	1	replace	Object  v  =  super.addValue(obj,  Boolean.TRUE);	  Object    v    =    super.addValue(obj,    v);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
