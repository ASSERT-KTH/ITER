bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)this.freqTable.get(1);	  Integer    freqTable    =(Integer)freqTable.get(1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
2	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  -  1  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  -  1  +  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
3	[BUG]  [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj,  v);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj,  v);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)freqTable.get(obj,  v);	  Object    freqTable    =(Object)freqTable.get(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
4	[BUG]  [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj,  this);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj,  this);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)freqTable.get(obj,  this);	  Object    freqTable    =(Object)freqTable.get(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
5	[BUG]  [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj,  null  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj,  null  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)freqTable.get(obj,  null  +  1);	  Object    freqTable    =(Object)freqTable.get(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
6	[BUG]  [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj  -  1  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj  -  1  +  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  (Integer)freqTable.get(obj  -  1  +  1);	  Integer    count    =    (Integer)freqTable.get(obj    -    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
7	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v  +  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
8	[BUG]  [BUGGY]  long  count  =(long)Long.valueOf(v.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  long  count  =(long)Long.valueOf(v.intValue()  +  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	long  count  =(long)Long.valueOf(v.intValue()  +  1);	  int    count    =(int)Long.valueOf(v.intValue()    +    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
9	[BUG]  [BUGGY]  int  count  =(int)Long.valueOf(v.intValue());  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  int  count  =(int)Long.valueOf(v.intValue());  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	int  count  =(int)Long.valueOf(v.intValue());	  int    count    =(int)Long.valueOf(v.intValue()    +    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
10	[BUG]  [BUGGY]  int  count  =(int)Long.valueOf(v.intValue()  /  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  int  count  =(int)Long.valueOf(v.intValue()  /  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	int  count  =(int)Long.valueOf(v.intValue()  /  1);	  int    count    =(int)Long.valueOf(v.intValue()    +    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
11	[BUG]  [BUGGY]  Integer  count  =(Integer)freqTable.get(obj  +  1).longValue();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(Integer)freqTable.get(obj  +  1).longValue();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)freqTable.get(obj  +  1).longValue();	  Long    count    =(Long)freqTable.get(obj    +    1).longValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
12	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  0);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  0);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj,    v);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
13	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v).clone();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v).clone();  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v).clone();	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj,    v);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
14	[BUG]  [BUGGY]  Long  count  =  freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =  freqTable.get(obj);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =  freqTable.get(obj);	  Long    count    =    this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  Long  count  =  this.freqTable.get(obj,  v);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =  this.freqTable.get(obj,  v);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =  this.freqTable.get(obj,  v);	  Long    count    =    this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  Integer  count  =  this.freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =  this.freqTable.get(obj);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  this.freqTable.get(obj);	  Long    count    =    this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  Integer  count  =(Integer)obj;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(Integer)obj;  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)obj;	  Integer    count    =(Integer)v;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  Integer  count  =(int)v;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(int)v;  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(int)v;	  Integer    count    =(Integer)v;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  Long  count  =(Long)v.clone();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =(Long)v.clone();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)v.clone();	  Integer    count    =(Integer)v.clone();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
20	[BUG]  [BUGGY]  Integer  count  =(int)v.clone();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(int)v.clone();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(int)v.clone();	  Integer    count    =(Integer)v.clone();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
21	[BUG]  [BUGGY]  Long  count  =(Long)freqTable.get(obj  /  2);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =(Long)freqTable.get(obj  /  2);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)freqTable.get(obj  /  2);	  Long    count    =(Long)freqTable.get(obj    /    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
22	[BUG]  [BUGGY]  Integer  count  =(Integer)freqTable.get(obj  /  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(Integer)freqTable.get(obj  /  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)freqTable.get(obj  /  1);	  Long    count    =(Long)freqTable.get(obj    /    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
23	[BUG]  [BUGGY]  Object  freqTable  =(Object)freqTable.get(1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  freqTable  =(Object)freqTable.get(1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)freqTable.get(1);	  Object    freqTable    =(Object)freqTable.get(0);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
24	[BUG]  [BUGGY]  Object  freqTable  =(Object)freqTable.get(v);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  freqTable  =(Object)freqTable.get(v);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)freqTable.get(v);	  Object    freqTable    =(Object)freqTable.get(0);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
25	[BUG]  [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj,  v  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj,  v  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)freqTable.get(obj,  v  +  1);	  Object    freqTable    =(Object)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(v  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(v  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)this.freqTable.get(v  +  1);	  Integer    freqTable    =(Integer)freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
27	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(v  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(v  -  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)this.freqTable.get(v  -  1);	  Integer    freqTable    =(Integer)this.freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
28	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(v,  0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(v,  0);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)this.freqTable.get(v,  0);	  Integer    freqTable    =(Integer)this.freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
29	[BUG]  [BUGGY]  Integer  count  =  obj.intValue()  +  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =  obj.intValue()  +  1;  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  obj.intValue()  +  1;	  Integer    count    =    obj.intValue();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
30	[BUG]  [BUGGY]  Long  count  =  obj.intValue();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =  obj.intValue();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =  obj.intValue();	  Integer    count    =    obj.intValue();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
31	[BUG]  [BUGGY]  Integer  count  =  v.intValue();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =  v.intValue();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  v.intValue();	  Integer    count    =    obj.intValue();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
32	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(obj  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)this.freqTable.get(obj  +  1);	  Integer    freqTable    =(Integer)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
33	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(obj  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(obj  -  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)this.freqTable.get(obj  -  1);	  Integer    freqTable    =(Integer)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
34	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(obj,  v);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(obj,  v);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)this.freqTable.get(obj,  v);	  Integer    freqTable    =(Integer)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
35	[BUG]  [BUGGY]  obj  =  Long.valueOf(((Integer)v).doubleValue()  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  obj  =  Long.valueOf(((Integer)v).doubleValue()  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	obj  =  Long.valueOf(((Integer)v).doubleValue()  +  1);	  obj    =    Long.valueOf(((Integer)v).doubleValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  Object  freqTable  =(Object)this.freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  freqTable  =(Object)this.freqTable.get(obj  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)this.freqTable.get(obj  +  1);	  Object    freqTable    =(Object)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  Object  freqTable  =(Object)this.freqTable.get(obj,  v);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  freqTable  =(Object)this.freqTable.get(obj,  v);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)this.freqTable.get(obj,  v);	  Object    freqTable    =(Object)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  Object  count  =  getValue(obj,  v);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  count  =  getValue(obj,  v);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  count  =  getValue(obj,  v);	  Object    count    =    getValue(obj);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
39	[BUG]  [BUGGY]  Object  count  =  getValue(obj,  null);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  count  =  getValue(obj,  null);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  count  =  getValue(obj,  null);	  Object    count    =    getValue(obj);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
40	[BUG]  [BUGGY]  Object  count  =  getValue(obj,  false);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  count  =  getValue(obj,  false);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  count  =  getValue(obj,  false);	  Object    count    =    getValue(obj);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
41	[BUG]  [BUGGY]  Long  count  =(Long)obj.clone();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =(Long)obj.clone();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)obj.clone();	  Integer    count    =(Integer)obj.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  Integer  count  =(Integer)obj.intValue();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(Integer)obj.intValue();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)obj.intValue();	  Integer    count    =(Integer)obj.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  Integer  count  =(int)obj.clone();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(int)obj.clone();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(int)obj.clone();	  Integer    count    =(Integer)obj.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  Integer  count  =(int)freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(int)freqTable.get(obj  +  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(int)freqTable.get(obj  +  1);	  Long    count    =(long)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
45	[BUG]  [BUGGY]  Long  count  =(long)freqTable.get(obj  /  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =(long)freqTable.get(obj  /  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(long)freqTable.get(obj  /  1);	  Long    count    =(long)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
46	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  v  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  v  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  v  +  1);	  TreeMap    freqTable    =(TreeMap)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
47	[BUG]  [BUGGY]  Integer  count  =(Integer)obj.getValue();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(Integer)obj.getValue();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)obj.getValue();	  Integer    count    =(Integer)v.getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
48	[BUG]  [BUGGY]  Long  count  =(Long)v.getValue();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =(Long)v.getValue();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)v.getValue();	  Integer    count    =(Integer)v.getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
49	[BUG]  [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj,  v  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj,  v  +  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  (Integer)freqTable.get(obj,  v  +  1);	  Integer    count    =    (Integer)freqTable.get(obj,    v);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  Integer  count  =  freqTable.get(obj,  v);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =  freqTable.get(obj,  v);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  freqTable.get(obj,  v);	  Integer    count    =    (Integer)freqTable.get(obj,    v);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  Integer  count  =  (Integer)this.freqTable.get(obj,  v);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =  (Integer)this.freqTable.get(obj,  v);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  (Integer)this.freqTable.get(obj,  v);	  Integer    count    =    (Integer)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  Long  count  =(Long)v.intValue();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =(Long)v.intValue();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)v.intValue();	  Integer    count    =(Integer)v.intValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  Integer  count  =(Integer)v.intValue()  +  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(Integer)v.intValue()  +  1;  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)v.intValue()  +  1;	  Integer    count    =(Integer)v.intValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(v);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(v);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(v);	  TreeMap    freqTable    =(TreeMap)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
55	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)super.freqTable.get(v);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)super.freqTable.get(v);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)super.freqTable.get(v);	  TreeMap    freqTable    =(TreeMap)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
56	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
57	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  Integer.MAX_VALUE);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  Integer.MAX_VALUE);	  TreeMap    freqTable    =(TreeMap)freqTable.get(obj,    v);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  Long  count  =(Long)freqTable.get(obj  /  1).longValue();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =(Long)freqTable.get(obj  /  1).longValue();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)freqTable.get(obj  /  1).longValue();	  Long    count    =(Long)freqTable.get(obj    +    1).longValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  Integer  count  =(int)v.intValue();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(int)v.intValue();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(int)v.intValue();	  Integer    count    =(Integer)v.intValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
60	[BUG]  [BUGGY]  Long  count  =(long)freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =(long)freqTable.get(obj);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(long)freqTable.get(obj);	  Long    count    =(long)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
61	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  -  1  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  -  1  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj  -  1  +  1);	  TreeMap    freqTable    =(TreeMap)freqTable.get(obj    -    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
62	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  /  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  /  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj  /  1);	  TreeMap    freqTable    =(TreeMap)freqTable.get(obj    -    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
63	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(v  -  1  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(v  -  1  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)freqTable.get(v  -  1  +  1);	  Integer    freqTable    =(Integer)freqTable.get(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
64	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(0,  v  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(0,  v  -  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)freqTable.get(0,  v  -  1);	  Integer    freqTable    =(Integer)freqTable.get(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
65	[BUG]  [BUGGY]  Long  count  =  this.freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =  this.freqTable.get(obj  +  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =  this.freqTable.get(obj  +  1);	  Long    count    =    this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  Integer  count  =  freqTable.get(obj  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =  freqTable.get(obj  -  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  freqTable.get(obj  -  1);	  Integer    count    =    (Integer)freqTable.get(obj    -    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
67	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(obj  /  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(obj  /  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)freqTable.get(obj  /  1);	  Integer    freqTable    =(Integer)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
68	[BUG]  [BUGGY]  float  count  =(float)Long.valueOf(v.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  float  count  =(float)Long.valueOf(v.intValue()  +  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	float  count  =(float)Long.valueOf(v.intValue()  +  1);	  int    count    =(int)Long.valueOf(v.intValue()    +    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
69	[BUG]  [BUGGY]  Integer  count  =(Integer)freqTable.clone();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(Integer)freqTable.clone();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)freqTable.clone();	  Integer    count    =(Integer)v.clone();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
70	[BUG]  [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj  +  2);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj  +  2);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)freqTable.get(obj  +  2);	  Object    freqTable    =(Object)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
71	[BUG]  [BUGGY]  Integer  count  =  obj!=  null?  obj.intValue()  :  0;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =  obj!=  null?  obj.intValue()  :  0;  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  obj!=  null?  obj.intValue()  :  0;	  Integer    count    =    obj.intValue();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
72	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  0);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  0);	  TreeMap    freqTable    =(TreeMap)freqTable.get(obj,    v);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
73	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  null);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  null);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  null);	  TreeMap    freqTable    =(TreeMap)freqTable.get(obj,    v);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
74	[BUG]  [BUGGY]  Integer  count  =(Integer)obj.values().clone();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(Integer)obj.values().clone();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)obj.values().clone();	  Integer    count    =(Integer)obj.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
75	[BUG]  [BUGGY]  Integer  count  =(int)v.getValue();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(int)v.getValue();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(int)v.getValue();	  Integer    count    =(Integer)v.getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
76	[BUG]  [BUGGY]  Object  count  =  getValue(obj  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  count  =  getValue(obj  +  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  count  =  getValue(obj  +  1);	  Object    count    =    getValue(obj);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
77	[BUG]  [BUGGY]  Long  count  =(Long)freqTable.get(obj  /  1  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =(Long)freqTable.get(obj  /  1  +  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)freqTable.get(obj  /  1  +  1);	  Long    count    =(Long)freqTable.get(obj    /    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
78	[BUG]  [BUGGY]  Long  count  =(Long)freqTable.get(obj  /  10);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =(Long)freqTable.get(obj  /  10);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)freqTable.get(obj  /  10);	  Long    count    =(Long)freqTable.get(obj    /    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
79	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(obj  -  1  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(obj  -  1  +  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)freqTable.get(obj  -  1  +  1);	  Integer    freqTable    =(Integer)freqTable.get(obj    -    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
80	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  /  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  /  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  /  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
81	[BUG]  [BUGGY]  Object  freqTable  =(Object)this.freqTable.get(v);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  freqTable  =(Object)this.freqTable.get(v);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)this.freqTable.get(v);	  Object    freqTable    =(Object)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
82	[BUG]  [BUGGY]  Long  count  =(Long)v;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =(Long)v;  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)v;	  Integer    count    =(Integer)v;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
83	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(obj  +  2);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(obj  +  2);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)freqTable.get(obj  +  2);	  Integer    freqTable    =(Integer)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
84	[BUG]  [BUGGY]  Long  count  =  this.freqTable.get(obj  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Long  count  =  this.freqTable.get(obj  -  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =  this.freqTable.get(obj  -  1);	  Long    count    =    this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
85	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v  -  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v  -  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj,    v);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
86	[BUG]  [BUGGY]  Object  count  =  getValue(v);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  count  =  getValue(v);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  count  =  getValue(v);	  Object    count    =    getValue(obj);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
87	[BUG]  [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj  *  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj  *  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)freqTable.get(obj  *  1);	  Object    freqTable    =(Object)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
88	[BUG]  [BUGGY]  Integer  count  =(int)((  Integer)v).intValue();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =(int)((  Integer)v).intValue();  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(int)((  Integer)v).intValue();	  Integer    count    =(Integer)v.intValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
89	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(v  /  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(v  /  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)freqTable.get(v  /  1);	  Integer    freqTable    =(Integer)freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
90	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  +  2);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  +  2);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj  +  2);	  TreeMap    freqTable    =(TreeMap)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
91	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(v  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(v  -  1);  [BUGGY]      Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(v  -  1);	  TreeMap    freqTable    =(TreeMap)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
92	[BUG]  [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj,  0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj,  0);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  (Integer)freqTable.get(obj,  0);	  Integer    count    =    (Integer)freqTable.get(obj,    v);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
93	[BUG]  [BUGGY]  int  count  =(int)Long.valueOf(obj.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]            Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {      [BUGGY]  int  count  =(int)Long.valueOf(obj.intValue()  +  1);  [BUGGY]      if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(     "Value  not  comparable  to  existing  values.     ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	int  count  =(int)Long.valueOf(obj.intValue()  +  1);	  int    count    =(int)Long.valueOf(v.intValue()    +    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
