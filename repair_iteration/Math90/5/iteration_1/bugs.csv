bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj);  [BUGGY]  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  (Integer)freqTable.get(obj);	Long  count  =  (Long)  freqTable.get(obj);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  Long  count  =  (Long)this.freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]  Long  count  =  (Long)this.freqTable.get(obj);  [BUGGY]  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =  (Long)this.freqTable.get(obj);	Long  count  =  (Long)  freqTable.get(obj);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]    [BUGGY]  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	  	Long  count  =  (Long)  freqTable.get(obj);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]    TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]    TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj);  [BUGGY]  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	    TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj);		non-compiled	[CE]  illegal  start  of  type	10	None	add
5	[BUG]  [BUGGY]    TreeMap  freqTable  =(TreeMap)freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]    TreeMap  freqTable  =(TreeMap)freqTable.get(obj);  [BUGGY]  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	    TreeMap  freqTable  =(TreeMap)freqTable.get(obj);		non-compiled	[CE]  illegal  start  of  type	10	None	add
6	[BUG]  [BUGGY]    obj  =  Long.valueOf(((Integer)v).longValue());  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]    obj  =  Long.valueOf(((Integer)v).longValue());  [BUGGY]  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	    obj  =  Long.valueOf(((Integer)v).longValue());		non-compiled	[CE]  illegal  start  of  type	10	None	add
7	[BUG]  [BUGGY]    obj  =  Long.valueOf(((Integer)v).intValue());  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]    obj  =  Long.valueOf(((Integer)v).intValue());  [BUGGY]  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	    obj  =  Long.valueOf(((Integer)v).intValue());		non-compiled	[CE]  illegal  start  of  type	10	None	add
8	[BUG]  [BUGGY]    obj  =  Long.valueOf(((Integer)v).longValue()  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]    obj  =  Long.valueOf(((Integer)v).longValue()  +  1);  [BUGGY]  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	    obj  =  Long.valueOf(((Integer)v).longValue()  +  1);		non-compiled	[CE]  illegal  start  of  type	10	None	add
9	[BUG]  [BUGGY]  Long  count  =(Long)freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]  Long  count  =(Long)freqTable.get(obj  +  1);  [BUGGY]  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)freqTable.get(obj  +  1);	Long  count  =  (Long)  freqTable.get(obj);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]    Integer  freqTable  =(Integer)freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]    Integer  freqTable  =(Integer)freqTable.get(obj);  [BUGGY]  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	    Integer  freqTable  =(Integer)freqTable.get(obj);		non-compiled	[CE]  illegal  start  of  type	10	None	add
11	[BUG]  [BUGGY]    Object  freqTable  =(Object)freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]    Object  freqTable  =(Object)freqTable.get(obj);  [BUGGY]  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	    Object  freqTable  =(Object)freqTable.get(obj);		non-compiled	[CE]  illegal  start  of  type	10	None	add
12	[BUG]  [BUGGY]    TreeMap  freqTable  =(TreeMap)freqTable.get(0);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]    TreeMap  freqTable  =(TreeMap)freqTable.get(0);  [BUGGY]  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	    TreeMap  freqTable  =(TreeMap)freqTable.get(0);		non-compiled	[CE]  illegal  start  of  type	10	None	add
13	[BUG]  [BUGGY]    Integer  freqTable  =(Integer)freqTable.get(v);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]    Integer  freqTable  =(Integer)freqTable.get(v);  [BUGGY]  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	    Integer  freqTable  =(Integer)freqTable.get(v);		non-compiled	[CE]  illegal  start  of  type	10	None	add
14	[BUG]  [BUGGY]    Integer  freqTable  =(Integer)freqTable.get(0);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]        Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  [BUGGY]    Integer  freqTable  =(Integer)freqTable.get(0);  [BUGGY]  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException( "Value  not  comparable  to  existing  values. ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	    Integer  freqTable  =(Integer)freqTable.get(0);		non-compiled	[CE]  illegal  start  of  type	10	None	add
