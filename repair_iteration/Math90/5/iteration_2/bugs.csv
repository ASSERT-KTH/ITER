bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  count  =(Integer)v.intValue();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  count  =(Integer)v.intValue();  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)v.intValue();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  Integer  count  =(Integer)v.getValue();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  count  =(Integer)v.getValue();  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)v.getValue();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  Integer  count  =(Integer)v;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  count  =(Integer)v;  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)v;	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  Integer  count  =(Integer)obj.clone();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  count  =(Integer)obj.clone();  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)obj.clone();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  Integer  count  =  (Integer)this.freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  count  =  (Integer)this.freqTable.get(obj);  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  (Integer)this.freqTable.get(obj);	  Long    count    =    (Long)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  Long  count  =  this.freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Long  count  =  this.freqTable.get(obj);  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =  this.freqTable.get(obj);	  Long    count    =    (Long)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  obj  =  Long.valueOf(((Integer)v).doubleValue());  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  obj  =  Long.valueOf(((Integer)v).doubleValue());  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	obj  =  Long.valueOf(((Integer)v).doubleValue());	      obj    =    Long.valueOf(((Integer)v).longValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  +  1);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj  +  1);	      TreeMap    freqTable    =(TreeMap)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  v);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  v);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj,  v);	      TreeMap    freqTable    =(TreeMap)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj  +  1);  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  (Integer)freqTable.get(obj  +  1);	  Integer    count    =    (Integer)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj,  v);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj,  v);  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  (Integer)freqTable.get(obj,  v);	  Integer    count    =    (Integer)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj  +  1);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)freqTable.get(obj  +  1);	      Object    freqTable    =(Object)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  Object  freqTable  =(Object)this.freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Object  freqTable  =(Object)this.freqTable.get(obj);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)this.freqTable.get(obj);	      Object    freqTable    =(Object)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(0);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(0);	      TreeMap    freqTable    =(TreeMap)freqTable.get(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(v);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(v);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(v);	      TreeMap    freqTable    =(TreeMap)freqTable.get(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  Long  count  =(Long)freqTable.get(obj  +  1).longValue();  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Long  count  =(Long)freqTable.get(obj  +  1).longValue();  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)freqTable.get(obj  +  1).longValue();	  Long    count    =(Long)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(0);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(0);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)this.freqTable.get(0);	      Integer    freqTable    =(Integer)freqTable.get(0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
18	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(1);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)freqTable.get(1);	      Integer    freqTable    =(Integer)freqTable.get(0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj,  v);	      TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  +  1);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  +  1);	      TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  -  1);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  -  1);	      TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  obj  =  Long.valueOf(((Integer)v).intValue()  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  obj  =  Long.valueOf(((Integer)v).intValue()  +  1);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	obj  =  Long.valueOf(((Integer)v).intValue()  +  1);	      obj    =    Long.valueOf(((Integer)v).intValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(obj  +  1);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)freqTable.get(obj  +  1);	      Integer    freqTable    =(Integer)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(obj);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)this.freqTable.get(obj);	      Integer    freqTable    =(Integer)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(v);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  freqTable  =(Integer)this.freqTable.get(v);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)this.freqTable.get(v);	      Integer    freqTable    =(Integer)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj  -  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  count  =  (Integer)freqTable.get(obj  -  1);  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  (Integer)freqTable.get(obj  -  1);	  Integer    count    =    (Integer)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(v  -  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(v  -  1);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)freqTable.get(v  -  1);	      Integer    freqTable    =(Integer)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
28	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  -  1);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  -  1);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj  -  1);	      TreeMap    freqTable    =(TreeMap)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  Long  count  =(Long)freqTable.get(obj  /  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Long  count  =(Long)freqTable.get(obj  /  1);  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(Long)freqTable.get(obj  /  1);	  Long    count    =(Long)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj,  null);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Object  freqTable  =(Object)freqTable.get(obj,  null);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)freqTable.get(obj,  null);	      Object    freqTable    =(Object)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  Integer  count  =  obj.intValue();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  count  =  obj.intValue();  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =  obj.intValue();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  Object  count  =  getValue(obj);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Object  count  =  getValue(obj);  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  count  =  getValue(obj);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(obj  -  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(obj  -  1);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)freqTable.get(obj  -  1);	      Integer    freqTable    =(Integer)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  Long  count  =(long)freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Long  count  =(long)freqTable.get(obj  +  1);  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Long  count  =(long)freqTable.get(obj  +  1);	  Long    count    =(Long)freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  Integer  count  =(Integer)v.clone();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  count  =(Integer)v.clone();  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  count  =(Integer)v.clone();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
36	[BUG]  [BUGGY]  int  count  =(int)Long.valueOf(v.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  int  count  =(int)Long.valueOf(v.intValue()  +  1);  [BUGGY]    if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	int  count  =(int)Long.valueOf(v.intValue()  +  1);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
37	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(v  +  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(v  +  1);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Integer  freqTable  =(Integer)freqTable.get(v  +  1);	      Integer    freqTable    =(Integer)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  Object  freqTable  =(Object)freqTable.get(0);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]          Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {    [BUGGY]  Object  freqTable  =(Object)freqTable.get(0);  [BUGGY]    Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  }  catch  (ClassCastException  ex)  {  throw  new  IllegalArgumentException(   "Value  not  comparable  to  existing  values.   ");  }  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	126	126	1	replace	Object  freqTable  =(Object)freqTable.get(0);	      Object    freqTable    =(Object)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
