bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  freqTable.add(this.frequency);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.add(this.frequency);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.add(this.frequency);	      freqTable.add(frequency);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  freqTable.set(this.frequency);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.set(this.frequency);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.set(this.frequency);	      freqTable.add(frequency);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  freqTable.add(this.freqTable);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.add(this.freqTable);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.add(this.freqTable);	      freqTable.add(frequency);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  freqTable.addAll(this.freqTable);  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.addAll(this.freqTable);  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(this.freqTable);	  freqTable.addAll(freqTable);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
5	[BUG]  [BUGGY]  freqTable.addAll(this);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.addAll(this);  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(this);	  freqTable.addAll(freqTable);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  ]);  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  ]);  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  ]);	  this.freqTable    =    freqTable.clone();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
7	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  Frequency[freqTable.size()  ]);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  this.freqTable  =  freqTable.toArray(new  Frequency[freqTable.size()  ]);  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  Frequency[freqTable.size()  ]);	  this.freqTable    =    freqTable.clone();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
8	[BUG]  [BUGGY]  freqTable.add(this);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.add(this);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.add(this);	      freqTable.add(freqTable);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  freqTable.set(this);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.set(this);  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.set(this);	  freqTable.clear();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  freqTable  =  new  LinkedHashMap();  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable  =  new  LinkedHashMap();  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  LinkedHashMap();	  freqTable    =    new    TreeMap();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  freqTable  =  new  TreeMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable  =  new  TreeMap  <  String,Object>();  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap  <  String,Object>();	  freqTable    =    new    TreeMap();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
12	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue()));  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue()));  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getValue()));	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SECOND));  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SECOND));  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SECOND));	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()  +  1));  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()  +  1));  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()  +  1));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue()));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
16	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey()));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey()));  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue()));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  false));  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  false));  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  false));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue()));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumber()));  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumber()));  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumber()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue()));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
19	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  this.freqTable  =  new  TreeMap  <  String,Object>();  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  new  TreeMap  <  String,Object>();	  this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  this.freqTable  =  new  LinkedHashMap();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  this.freqTable  =  new  LinkedHashMap();  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  new  LinkedHashMap();	  this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  freqTable.putAll(this.freqTable);  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.putAll(this.freqTable);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(this.freqTable);	      freqTable.putAll(freqTable);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  freqTable.putAll(freqTable.clone());  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.putAll(freqTable.clone());  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(freqTable.clone());	      freqTable.putAll(freqTable);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
23	[BUG]  [BUGGY]  freqTable.addAll(freqTable.size()  -  1);  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.addAll(freqTable.size()  -  1);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(freqTable.size()  -  1);	      freqTable.addAll(freqTable.size());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
24	[BUG]  [BUGGY]  freqTable.addAll(this.freqTable.size());  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.addAll(this.freqTable.size());  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(this.freqTable.size());	      freqTable.addAll(freqTable.size());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
25	[BUG]  [BUGGY]  freqTable.putAll(freqTable.size());  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.putAll(freqTable.size());  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(freqTable.size());	      freqTable.addAll(freqTable.size());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
26	[BUG]  [BUGGY]  freqTable.addAll(freqTable.size()  +  1);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.addAll(freqTable.size()  +  1);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(freqTable.size()  +  1);	      freqTable.addAll(freqTable.size());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
27	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable));  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(freqTable));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable),  true);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable),  true);  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable),  true);	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(freqTable));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  freqTable.addAll(freqTable.values());  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.addAll(freqTable.values());  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(freqTable.values());	      freqTable.addAll(freqTable.size());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
30	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList());  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList());  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  java.util.ArrayList());	  this.freqTable    =    freqTable.clone();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
31	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  Double[freqTable.size()  ]);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  this.freqTable  =  freqTable.toArray(new  Double[freqTable.size()  ]);  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  Double[freqTable.size()  ]);	  this.freqTable    =    freqTable.clone();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
32	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getValue()));  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getValue()));  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getValue()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue()));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable),  false);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable),  false);  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable),  false);	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(freqTable));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  freqTable.put( "freq ",  freqTable);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.put( "freq ",  freqTable);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.put( "freq ",  freqTable);	      freqTable.add(freqTable);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
35	[BUG]  [BUGGY]  freqTable.addAll(freqTable.get(0));  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.addAll(freqTable.get(0));  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(freqTable.get(0));	      freqTable.addAll(freqTable.size());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
36	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue()));  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue()));  [BUGGY]      [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue()));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
37	[BUG]  [BUGGY]  freqTable.putAll(freqTable.values());  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    public  Frequency()  {  freqTable  =  new  TreeMap();    [BUGGY]  freqTable.putAll(freqTable.values());  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(freqTable.values());	      freqTable.putAll(freqTable);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
