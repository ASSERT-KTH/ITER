bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  freqTable.addAll(FrequencyTable.size());  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.addAll(FrequencyTable.size());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(FrequencyTable.size());	  freqTable.addAll(freqTable.size()    +    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
2	[BUG]  [BUGGY]  freqTable.add(freqTable.size());  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.add(freqTable.size());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.add(freqTable.size());	  freqTable.addAll(freqTable.size()    +    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
3	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getKey(),  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getKey(),  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getKey(),  DateTimeConstants.MILLIS_PER_SECOND));	  freqTable.setIndex(FieldUtils.safeAdd(getValue(),    DateTimeConstants.MILLIS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
4	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));	  freqTable.setIndex(FieldUtils.safeAdd(getValue(),    DateTimeConstants.MILLIS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
5	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  true);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  true);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  true);	  freqTable.setIndex(FieldUtils.safeAdd(getValue(),    DateTimeConstants.MILLIS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
6	[BUG]  [BUGGY]  freqTable.set(this.frequency  -  1);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.set(this.frequency  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.set(this.frequency  -  1);	  freqTable.set(this.frequency);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
7	[BUG]  [BUGGY]  freqTable.set(this.freqTable);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.set(this.freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.set(this.freqTable);	  freqTable.add(this.freqTable);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  freqTable.put(this.freqTable,  freqTable);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.put(this.freqTable,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.put(this.freqTable,  freqTable);	  freqTable.add(this.freqTable);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  Frequency[freqTable.size()  -  1]);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  Frequency[freqTable.size()  -  1]);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  Frequency[freqTable.size()  -  1]);	  this.freqTable    =    freqTable.toArray(new    Frequency[freqTable.size()    ]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  Frequency[freqTable.size()  +  1]);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  Frequency[freqTable.size()  +  1]);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  Frequency[freqTable.size()  +  1]);	  this.freqTable    =    freqTable.toArray(new    Frequency[freqTable.size()    ]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  freqTable.putAll(this.freqTable.clone());  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.putAll(this.freqTable.clone());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(this.freqTable.clone());	  freqTable.putAll(this.freqTable);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
12	[BUG]  [BUGGY]  freqTable.putAll(this.freqTable.cloneTree());  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.putAll(this.freqTable.cloneTree());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(this.freqTable.cloneTree());	  freqTable.putAll(this.freqTable);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
13	[BUG]  [BUGGY]  freqTable.putAll(this.freqTable.size());  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.putAll(this.freqTable.size());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(this.freqTable.size());	  freqTable.putAll(this.freqTable);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
14	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getKey()));  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getKey()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getKey()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(this.getValue()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
15	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getValue()  +  1));  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getValue()  +  1));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getValue()  +  1));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(this.getValue()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
16	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getValue(),  true));  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getValue(),  true));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getValue(),  true));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(this.getValue()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
17	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getComparator()));  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getComparator()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.getComparator()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(this.getValue()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
18	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  true));  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  true));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  true));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue(),    false));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
19	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey(),  false));  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey(),  false));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey(),  false));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue(),    false));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
20	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue(),  false));  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue(),  false));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue(),  false));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue(),    false));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
21	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  false),  true);  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  false),  true);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  false),  true);	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue(),    false));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
22	[BUG]  [BUGGY]  freqTable.putAll(this.freqTable.values());  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.putAll(this.freqTable.values());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(this.freqTable.values());	  freqTable.putAll(freqTable.values());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
23	[BUG]  [BUGGY]  freqTable.putAll(freqTable.keySet());  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.putAll(freqTable.keySet());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(freqTable.keySet());	  freqTable.putAll(freqTable.values());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
24	[BUG]  [BUGGY]  freqTable.putAll(freqTable.getValues());  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.putAll(freqTable.getValues());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(freqTable.getValues());	  freqTable.putAll(freqTable.values());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
25	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap  <  Object,Object>();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  new  TreeMap  <  Object,Object>();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  new  TreeMap  <  Object,Object>();	  this.freqTable    =    new    TreeMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
26	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeMultiply(getValue()));  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeMultiply(getValue()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeMultiply(getValue()));	  freqTable.setIndex(FieldUtils.safeAdd(getValue()));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
27	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(this.getValue()));  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(this.getValue()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(this.getValue()));	  freqTable.setIndex(FieldUtils.safeAdd(getValue()));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
28	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getKey()));  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getKey()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getKey()));	  freqTable.setIndex(FieldUtils.safeAdd(getValue()));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
29	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue()  +  1));  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue()  +  1));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getValue()  +  1));	  freqTable.setIndex(FieldUtils.safeAdd(getValue()));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
30	[BUG]  [BUGGY]  freqTable.put( "freq ", "freq ");  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.put( "freq ", "freq ");  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.put( "freq ", "freq ");	  freqTable.put(   "freq   ",    freqTable);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
31	[BUG]  [BUGGY]  freqTable.put( "freq ", "true ");  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.put( "freq ", "true ");  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.put( "freq ", "true ");	  freqTable.put(   "freq   ",    freqTable);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
32	[BUG]  [BUGGY]  freqTable.put( "freq ", "Frequency ");  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.put( "freq ", "Frequency ");  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.put( "freq ", "Frequency ");	  freqTable.put(   "freq   ",    freqTable);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
33	[BUG]  [BUGGY]  freqTable.put( "result ", "freq ");  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.put( "result ", "freq ");  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.put( "result ", "freq ");	  freqTable.put(   "freq   ",    freqTable);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
34	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue()  +  1));  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue()  +  1));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue()  +  1));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getNullValue()));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
35	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumberValue()));  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumberValue()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumberValue()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getNullValue()));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
36	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getEmptyValue()));  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getEmptyValue()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getEmptyValue()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getNullValue()));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
37	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue(),  getChronology()));  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue(),  getChronology()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue(),  getChronology()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getNullValue()));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
38	[BUG]  [BUGGY]  freqTable.putAll(freqTable.size()  -  1);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.putAll(freqTable.size()  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(freqTable.size()  -  1);	  freqTable.putAll(freqTable.size());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
39	[BUG]  [BUGGY]  freqTable.putAll(freqTable.size()  +  1);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.putAll(freqTable.size()  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(freqTable.size()  +  1);	  freqTable.putAll(freqTable.size());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
40	[BUG]  [BUGGY]  freqTable.add(this.frequency  -  1);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.add(this.frequency  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.add(this.frequency  -  1);	  freqTable.add(this.frequency);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  freqTable.put(this.frequency,  freqTable);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.put(this.frequency,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.put(this.frequency,  freqTable);	  freqTable.add(this.frequency);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable),  true);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable),  true);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable),  true);	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(freqTable),    true);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
43	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable,  false));  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable,  false));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable,  false));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(freqTable),    true);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
44	[BUG]  [BUGGY]  freqTable.addAll(this.freqTable,  true);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.addAll(this.freqTable,  true);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(this.freqTable,  true);	  freqTable.addAll(this.freqTable);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
45	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getKey(),  DateTimeConstants.SECONDS_PER_SECOND));  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getKey(),  DateTimeConstants.SECONDS_PER_SECOND));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getKey(),  DateTimeConstants.SECONDS_PER_SECOND));	  freqTable.setIndex(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
46	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.SECONDS_PER_SECOND));  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.SECONDS_PER_SECOND));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.SECONDS_PER_SECOND));	  freqTable.setIndex(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
47	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SECOND),  true);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SECOND),  true);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SECOND),  true);	  freqTable.setIndex(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
48	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()  /  1));  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()  /  1));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()  /  1));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue()    +    1));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
49	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()  -  1));  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()  -  1));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()  -  1));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue()    +    1));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
50	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  Object>());  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  Object>());  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  Object>());	  this.freqTable    =    freqTable.toArray(new    java.util.ArrayList());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
51	[BUG]  [BUGGY]  this.freqTable  =  new  java.util.ArrayList();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  new  java.util.ArrayList();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  new  java.util.ArrayList();	  this.freqTable    =    freqTable.toArray(new    java.util.ArrayList());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
52	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  String>());  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  String>());  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  String>());	  this.freqTable    =    freqTable.toArray(new    java.util.ArrayList());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
53	[BUG]  [BUGGY]  this.freqTable  =  new  LinkedList();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  new  LinkedList();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  new  LinkedList();	  this.freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
54	[BUG]  [BUGGY]  this.freqTable  =  new  LinkedHashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  new  LinkedHashMap  <  String,Object>();	  this.freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
55	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable),  false);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable),  false);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable),  false);	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(this.freqTable));    	non-compiled	[CE]  <identifier>  expected	27	None	replace
56	[BUG]  [BUGGY]  freqTable.addAll(this.freqTable.size()  -  1);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.addAll(this.freqTable.size()  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(this.freqTable.size()  -  1);	  freqTable.addAll(this.freqTable.size());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
57	[BUG]  [BUGGY]  freqTable.addAll(this.freqTable.size()  +  1);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.addAll(this.freqTable.size()  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(this.freqTable.size()  +  1);	  freqTable.addAll(this.freqTable.size());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
58	[BUG]  [BUGGY]  freqTable.putAll(freqTable.get(0));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.putAll(freqTable.get(0));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.putAll(freqTable.get(0));	  freqTable.putAll(freqTable.clone());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
59	[BUG]  [BUGGY]  freqTable.addAll(this.freqTable.get(0));  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.addAll(this.freqTable.get(0));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(this.freqTable.get(0));	  freqTable.addAll(freqTable.get(0));    	non-compiled	[CE]  <identifier>  expected	35	None	replace
60	[BUG]  [BUGGY]  freqTable.set(this,  null);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.set(this,  null);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.set(this,  null);	  freqTable.set(this);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  +  1]);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  +  1]);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  +  1]);	  this.freqTable    =    freqTable.toArray(new    String[freqTable.size()    ]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
62	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  -  1]);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  -  1]);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  -  1]);	  this.freqTable    =    freqTable.toArray(new    String[freqTable.size()    ]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
63	[BUG]  [BUGGY]  freqTable  =  new  LinkedList();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  LinkedList();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  LinkedList();	  freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
64	[BUG]  [BUGGY]  freqTable  =  new  LinkedHashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  LinkedHashMap  <  String,Object>();	  freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
65	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  Double[freqTable.size()  +  1]);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  Double[freqTable.size()  +  1]);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  Double[freqTable.size()  +  1]);	  this.freqTable    =    freqTable.toArray(new    Double[freqTable.size()    ]);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
66	[BUG]  [BUGGY]  this.freqTable  =  new  Double[freqTable.size()  ];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  new  Double[freqTable.size()  ];  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  new  Double[freqTable.size()  ];	  this.freqTable    =    freqTable.toArray(new    Double[freqTable.size()    ]);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
67	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  Double[freqTable.size()  -  1]);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  Double[freqTable.size()  -  1]);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  Double[freqTable.size()  -  1]);	  this.freqTable    =    freqTable.toArray(new    Double[freqTable.size()    ]);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
68	[BUG]  [BUGGY]  freqTable.addAll(this.freqTable.values());  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.addAll(this.freqTable.values());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(this.freqTable.values());	  freqTable.addAll(freqTable.values());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
69	[BUG]  [BUGGY]  freqTable.addAll(freqTable.getValues());  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.addAll(freqTable.getValues());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(freqTable.getValues());	  freqTable.addAll(freqTable.values());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
70	[BUG]  [BUGGY]  freqTable.put(this,  freqTable);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.put(this,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.put(this,  freqTable);	  freqTable.add(this);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
71	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumber()  +  1));  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumber()  +  1));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumber()  +  1));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getNumber()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
72	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumber()  -  1));  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumber()  -  1));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNumber()  -  1));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getNumber()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
73	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getComparator()));  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getComparator()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getComparator()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getNumber()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
74	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getMillis()));  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getMillis()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getMillis()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getNumber()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
75	[BUG]  [BUGGY]  freqTable  =  new  TreeMap  <  Object,Object>();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap  <  Object,Object>();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap  <  Object,Object>();	  freqTable    =    new    TreeMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
76	[BUG]  [BUGGY]  freqTable  =  new  TreeMap  <  >();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap  <  >();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap  <  >();	  freqTable    =    new    TreeMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
77	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable,  true));  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable,  true));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable,  true));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(freqTable),    false);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
78	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey()  +  1));  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey()  +  1));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey()  +  1));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getKey()));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
79	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  Frequency[this.freqTable.size()  ]);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  Frequency[this.freqTable.size()  ]);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  Frequency[this.freqTable.size()  ]);	  this.freqTable    =    freqTable.toArray(new    Frequency[freqTable.size()    ]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
80	[BUG]  [BUGGY]  freqTable  =  new  ArrayList();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  ArrayList();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  ArrayList();	  freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
81	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap  <  Object>();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  new  TreeMap  <  Object>();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  new  TreeMap  <  Object>();	  this.freqTable    =    new    TreeMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
82	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getElementType(),  false));  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getElementType(),  false));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getElementType(),  false));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getValue(),    false));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
83	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable)+  1);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable)+  1);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(freqTable)+  1);	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(freqTable),    false);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
84	[BUG]  [BUGGY]  freqTable.put(this,  new  Double(freqTable.size()));  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.put(this,  new  Double(freqTable.size()));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.put(this,  new  Double(freqTable.size()));	  freqTable.add(this);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
85	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable),  0);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable),  0);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable),  0);	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(this.freqTable));    	non-compiled	[CE]  <identifier>  expected	27	None	replace
86	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getBase()));  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getBase()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getBase()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getKey()));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
87	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue()),  0);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue()),  0);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue()),  0);	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getNullValue()));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
88	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  1);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  1);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  1);	  freqTable.setIndex(FieldUtils.safeAdd(getValue(),    DateTimeConstants.MILLIS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
89	[BUG]  [BUGGY]  freqTable.addAll(this.frequency);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.addAll(this.frequency);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(this.frequency);	  freqTable.add(this.frequency);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
90	[BUG]  [BUGGY]  freqTable.put( "freq "  +  File.separatorChar  + "freq ");  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.put( "freq "  +  File.separatorChar  + "freq ");  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.put( "freq "  +  File.separatorChar  + "freq ");	  freqTable.put(   "freq   ",    freqTable);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
91	[BUG]  [BUGGY]  this.freqTable  =  new  ArrayList();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  new  ArrayList();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  new  ArrayList();	  this.freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
92	[BUG]  [BUGGY]  freqTable.add(freqTable.get(0));  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.add(freqTable.get(0));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.add(freqTable.get(0));	  freqTable.addAll(freqTable.get(0));    	non-compiled	[CE]  <identifier>  expected	35	None	replace
93	[BUG]  [BUGGY]  freqTable.addAll(FreqTable.size());  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.addAll(FreqTable.size());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(FreqTable.size());	  freqTable.addAll(freqTable.size()    +    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
94	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SECOND),  1);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SECOND),  1);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SECOND),  1);	  freqTable.setIndex(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
95	[BUG]  [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getEmptyValue()));  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.setIndex(FieldUtils.safeAdd(getEmptyValue()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.setIndex(FieldUtils.safeAdd(getEmptyValue()));	  freqTable.setIndex(FieldUtils.safeAdd(getValue()));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
96	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue(),  getBase()));  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue(),  getBase()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getNullValue(),  getBase()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getNullValue()));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
97	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  Frequency>());  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  Frequency>());  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  Frequency>());	  this.freqTable    =    freqTable.toArray(new    java.util.ArrayList());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
98	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  Freq>());  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  Freq>());  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  java.util.ArrayList  <  Freq>());	  this.freqTable    =    freqTable.toArray(new    java.util.ArrayList());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
99	[BUG]  [BUGGY]  freqTable  =  new  TreeMap  <  Character,Object>();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap  <  Character,Object>();  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap  <  Character,Object>();	  freqTable    =    new    TreeMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
100	[BUG]  [BUGGY]  freqTable.add(freq);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.add(freq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.add(freq);	  freqTable.add(this);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
101	[BUG]  [BUGGY]  freqTable.add(new  java.util.ArrayList());  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.add(new  java.util.ArrayList());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.add(new  java.util.ArrayList());	  freqTable.add(this);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
102	[BUG]  [BUGGY]  freqTable.set(this,  new  TreeMap());  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.set(this,  new  TreeMap());  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.set(this,  new  TreeMap());	  freqTable.set(this);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
103	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable,  0));  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable,  0));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable,  0));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(this.freqTable));    	non-compiled	[CE]  <identifier>  expected	27	None	replace
104	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey(),  getValue()));  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey(),  getValue()));  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getKey(),  getValue()));	  freqTable    =    new    TreeMap(FieldUtils.safeMultiply(getKey()));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
105	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  String[this.freqTable.size()  ]);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  String[this.freqTable.size()  ]);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  String[this.freqTable.size()  ]);	  this.freqTable    =    freqTable.toArray(new    String[freqTable.size()    ]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
106	[BUG]  [BUGGY]  freqTable.addAll(this.freqTable.clone());  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  freqTable.addAll(this.freqTable.clone());  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	freqTable.addAll(this.freqTable.clone());	  freqTable.addAll(this.freqTable);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
107	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  Double[this.freqTable.size()  ]);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  Frequency()  {  freqTable  =  new  TreeMap();      [BUGGY]  this.freqTable  =  freqTable.toArray(new  Double[this.freqTable.size()  ]);  [BUGGY]        [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	59	59	1	replace	this.freqTable  =  freqTable.toArray(new  Double[this.freqTable.size()  ]);	  this.freqTable    =    freqTable.toArray(new    Double[freqTable.size()    ]);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
