bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!(v  instanceof  Long))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Long))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Long))  {  throw  new  IllegalArgumentException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
2	[BUG]  [BUGGY]  if(!(v  instanceof  Long))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Long))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Long))  {  throw  new  IllegalArgumentException( " "));  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
3	[BUG]  [BUGGY]  Object  obj  =  freqTable.get(v  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  freqTable.get(v  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  freqTable.get(v  +  1);	  Object    obj    =    freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
4	[BUG]  [BUGGY]  Object  obj  =  freqTable.get(v)+  1;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  freqTable.get(v)+  1;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  freqTable.get(v)+  1;	  Object    obj    =    freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
5	[BUG]  [BUGGY]  Object  obj  =(v!=  null)?  null  :  v.getClass().getRawClass().getName();  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =(v!=  null)?  null  :  v.getClass().getRawClass().getName();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =(v!=  null)?  null  :  v.getClass().getRawClass().getName();	  Object    obj    =(v    ==    null)?    null    :    v.getClass().getRawClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
6	[BUG]  [BUGGY]  Object  v  =(v  ==  null)?  null  :  v.getClass().getRawClass().getName();  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(v  ==  null)?  null  :  v.getClass().getRawClass().getName();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(v  ==  null)?  null  :  v.getClass().getRawClass().getName();	  Object    obj    =(v    ==    null)?    null    :    v.getClass().getRawClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
7	[BUG]  [BUGGY]  ||(v!=  null  &&  v.equals( "null ")))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  ||(v!=  null  &&  v.equals( "null ")))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	||(v!=  null  &&  v.equals( "null ")))  {  return;  }	  ||(v    ==    null    &&    v.equals(   "null   ")))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  ||(v  ==  null  &&  v.equals( "null ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  ||(v  ==  null  &&  v.equals( "null ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	||(v  ==  null  &&  v.equals( "null ")))  {  throw  new  IllegalArgumentException( " ");  }	  ||(v    ==    null    &&    v.equals(   "null   ")))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(obj);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtExceptionHandler.handleMissingValue(obj);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtExceptionHandler.handleMissingValue(obj);	  aughtExceptionHandler.handleMissingValue(v);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
10	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(new  Long(v));  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtExceptionHandler.handleMissingValue(new  Long(v));  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtExceptionHandler.handleMissingValue(new  Long(v));	  aughtExceptionHandler.handleMissingValue(v);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
11	[BUG]  [BUGGY]  Annotation  freqTable  =(Annotation)freqTable.get(obj);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  freqTable  =(Annotation)freqTable.get(obj);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  freqTable  =(Annotation)freqTable.get(obj);	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
12	[BUG]  [BUGGY]  aughtException.from(freqTable,  obj,  this);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.from(freqTable,  obj,  this);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.from(freqTable,  obj,  this);	  aughtException.from(freqTable,    obj,    null);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
13	[BUG]  [BUGGY]  aughtException.from(freqTable,  null,  v);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.from(freqTable,  null,  v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.from(freqTable,  null,  v);	  aughtException.from(freqTable,    obj,    null);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
14	[BUG]  [BUGGY]  aughtException.from(freqTable,  obj,  null,  ex);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.from(freqTable,  obj,  null,  ex);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.from(freqTable,  obj,  null,  ex);	  aughtException.from(freqTable,    obj,    null);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
15	[BUG]  [BUGGY]  Annotation  v  =(Annotation)this.freqTable.get(obj);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  v  =(Annotation)this.freqTable.get(obj);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  v  =(Annotation)this.freqTable.get(obj);	  Annotation    v    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  Annotation  v  =(Annotation)freqTable.get(obj  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  v  =(Annotation)freqTable.get(obj  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  v  =(Annotation)freqTable.get(obj  +  1);	  Annotation    v    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
18	[BUG]  [BUGGY]  Object  v  =(v  ==  null)?  null  :  obj.getClass();  [CE]  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(v  ==  null)?  null  :  obj.getClass();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(v  ==  null)?  null  :  obj.getClass();	  Object    v    =(v    ==    null)?    null    :    v.getClass();    	non-compiled	[CE]  	25	None	replace
19	[BUG]  [BUGGY]  Object  obj  =  this.freqTable.get(v)/  1;  [CE]  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  this.freqTable.get(v)/  1;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  this.freqTable.get(v)/  1;	  Object    obj    =    this.freqTable.get(v)+    1;    	non-compiled	[CE]  	36	None	replace
20	[BUG]  [BUGGY]  Object  obj  =  this.freqTable.get(v)+  2;  [CE]  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  this.freqTable.get(v)+  2;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  this.freqTable.get(v)+  2;	  Object    obj    =    this.freqTable.get(v)+    1;    	non-compiled	[CE]  	36	None	replace
21	[BUG]  [BUGGY]  Object  obj  =  getCurrentToken().getValue();  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getCurrentToken().getValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getCurrentToken().getValue();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  Object  obj  =  getCurrentValue();  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getCurrentValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getCurrentValue();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  Object  obj  =  getCurrentToken().toString();  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getCurrentToken().toString();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getCurrentToken().toString();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
24	[BUG]  [BUGGY]  allowNull(freqTable.get(obj));  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  allowNull(freqTable.get(obj));  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	allowNull(freqTable.get(obj));	  if(!(v    instanceof    Long))    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
25	[BUG]  [BUGGY]  allowNull(freqTable.get(obj),  false);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  allowNull(freqTable.get(obj),  false);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	allowNull(freqTable.get(obj),  false);	  if(!(v    instanceof    Long))    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
26	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v  ==  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v  ==  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
27	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIOException( " ");  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIOException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIOException( " ");  }	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
28	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIOException( " ");  }  else  {  throw  new  ClassCastException( " ");  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIOException( " ");  }  else  {  throw  new  ClassCastException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIOException( " ");  }  else  {  throw  new  ClassCastException( " ");  }	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
29	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)super.freqTable.clone();  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)super.freqTable.clone();  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)super.freqTable.clone();	  TreeMap    freqTable    =(TreeMap)super.freqTable;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
30	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable;  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable;	  TreeMap    freqTable    =(TreeMap)super.freqTable;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
31	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)super.freqTable.get(v);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)super.freqTable.get(v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)super.freqTable.get(v);	  TreeMap    freqTable    =(TreeMap)super.freqTable;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
32	[BUG]  [BUGGY]  aughtException.from(freqTable,  obj,  this));  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.from(freqTable,  obj,  this));  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.from(freqTable,  obj,  this));	  aughtException.from(freqTable,    obj,    null));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
33	[BUG]  [BUGGY]  aughtException.from(freqTable,  null,  v));  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.from(freqTable,  null,  v));  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.from(freqTable,  null,  v));	  aughtException.from(freqTable,    obj,    null));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
34	[BUG]  [BUGGY]  aughtException.from(freqTable,  obj,  null),  ex);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.from(freqTable,  obj,  null),  ex);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.from(freqTable,  obj,  null),  ex);	  aughtException.from(freqTable,    obj,    null));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
35	[BUG]  [BUGGY]  if(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v  ==  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v  ==  null)  {  return;  }	  if(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
36	[BUG]  [BUGGY]  if(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  continue;  }	  if(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
37	[BUG]  [BUGGY]  While(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  While(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	While(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  While(v!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
38	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  ex);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  ex);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtExceptionHandler.handleMissingException( " ",  ex);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
39	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( ", ");  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtExceptionHandler.handleMissingException( ", ");  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtExceptionHandler.handleMissingException( ", ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
40	[BUG]  [BUGGY]  Annotations.setValue((  Integer)v);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.setValue((  Integer)v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.setValue((  Integer)v);	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
41	[BUG]  [BUGGY]  Annotations.setValue((  Integer)v,  0);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.setValue((  Integer)v,  0);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.setValue((  Integer)v,  0);	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
42	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.clone();  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.clone();  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.clone();	  TreeMap    freqTable    =(TreeMap)false.clone();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
43	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)true.clone();  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)true.clone();  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)true.clone();	  TreeMap    freqTable    =(TreeMap)false.clone();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
44	[BUG]  [BUGGY]  Annotation  obj  =(Annotation)this.freqTable.get(obj);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  obj  =(Annotation)this.freqTable.get(obj);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  obj  =(Annotation)this.freqTable.get(obj);	  if(!(v    instanceof    Long))    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
45	[BUG]  [BUGGY]  Annotation  obj  =(Annotation)super.getProperty(Node.class);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  obj  =(Annotation)super.getProperty(Node.class);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  obj  =(Annotation)super.getProperty(Node.class);	  if(!(v    instanceof    Long))    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
46	[BUG]  [BUGGY]  Object  v  =(v  ==  null)?  null  :  v.getClass().getRawClass().getSimpleName();  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(v  ==  null)?  null  :  v.getClass().getRawClass().getSimpleName();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(v  ==  null)?  null  :  v.getClass().getRawClass().getSimpleName();	  Object    v    =(v    ==    null)?    null    :    v.getClass().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
47	[BUG]  [BUGGY]  Object  v  =(v!=  null)?  null  :  v.getClass().getSimpleName();  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(v!=  null)?  null  :  v.getClass().getSimpleName();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(v!=  null)?  null  :  v.getClass().getSimpleName();	  Object    v    =(v    ==    null)?    null    :    v.getClass().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
48	[BUG]  [BUGGY]  Object  v  =(Object)freqTable.get(obj);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(Object)freqTable.get(obj);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(Object)freqTable.get(obj);	  Object    v    =(Object)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
49	[BUG]  [BUGGY]  Object  v  =(Object)this.freqTable.get(v);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(Object)this.freqTable.get(v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(Object)this.freqTable.get(v);	  Object    v    =(Object)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
50	[BUG]  [BUGGY]  Object  v  =(Object)freqTable.get(i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(Object)freqTable.get(i);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(Object)freqTable.get(i);	  Object    v    =(Object)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
51	[BUG]  [BUGGY]  wireMap.put(obj,  new  TreeMap());  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  wireMap.put(obj,  new  TreeMap());  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	wireMap.put(obj,  new  TreeMap());	  wireMap.put(obj,    null);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
52	[BUG]  [BUGGY]  wireMap.put(obj,  v);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  wireMap.put(obj,  v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	wireMap.put(obj,  v);	  wireMap.put(obj,    null);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
53	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  /  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  /  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  /  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
54	[BUG]  [BUGGY]  Annotation  freq  =(Annotation)this.freqTable.get(obj);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  freq  =(Annotation)this.freqTable.get(obj);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  freq  =(Annotation)this.freqTable.get(obj);	  Annotation    freq    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  Annotation  freq  =(Annotation)freqTable.get(obj  +  1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  freq  =(Annotation)freqTable.get(obj  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  freq  =(Annotation)freqTable.get(obj  +  1);	  Annotation    freq    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  Annotation  obj  =(Annotation)freqTable.get(v);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  obj  =(Annotation)freqTable.get(v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  obj  =(Annotation)freqTable.get(v);	  Annotation    obj    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  if(v  instanceof  Long)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Long)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Long)  {  throw  new  IllegalArgumentException( " ");  }	  }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
58	[BUG]  [BUGGY]  Object  obj  =  this.frequencyTable.get(v  -  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  this.frequencyTable.get(v  -  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  this.frequencyTable.get(v  -  1);	  Object    obj    =    this.frequencyTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
59	[BUG]  [BUGGY]  Object  obj  =  this.frequencyTable.get(v  *  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  this.frequencyTable.get(v  *  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  this.frequencyTable.get(v  *  1);	  Object    obj    =    this.frequencyTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
60	[BUG]  [BUGGY]  String  v  =(String)freqTable.get(obj);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  String  v  =(String)freqTable.get(obj);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	String  v  =(String)freqTable.get(obj);	  String    v    =(String)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
61	[BUG]  [BUGGY]  String  v  =(String)this.freqTable.get(v);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  String  v  =(String)this.freqTable.get(v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	String  v  =(String)this.freqTable.get(v);	  String    v    =(String)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
62	[BUG]  [BUGGY]  String  v  =(String)freqTable.get(i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  String  v  =(String)freqTable.get(i);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	String  v  =(String)freqTable.get(i);	  String    v    =(String)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
63	[BUG]  [BUGGY]  aughtException.class.getName();  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.class.getName();  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.class.getName();	  aughtException.class.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
64	[BUG]  [BUGGY]  aughtException.class.getSimpleName(),  ex);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.class.getSimpleName(),  ex);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.class.getSimpleName(),  ex);	  aughtException.class.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
65	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  -  1  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(obj  -  1  +  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
66	[BUG]  [BUGGY]  Object  obj  =  getValue(v  *  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(v  *  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(v  *  1);	  Object    obj    =    getValue(v    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
67	[BUG]  [BUGGY]  Object  obj  =  getNullValue(v  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getNullValue(v  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getNullValue(v  +  1);	  Object    obj    =    getValue(v    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
68	[BUG]  [BUGGY]  Object  obj  =  getValue(null,  v  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(null,  v  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(null,  v  +  1);	  Object    obj    =    getValue(v    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
69	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(b  -  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(b  -  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(b  -  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(b);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
70	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(b  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(b  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(b  +  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(b);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
71	[BUG]  [BUGGY]  Object  obj  =  getValue(false,  true);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(false,  true);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(false,  true);	  Object    obj    =    getValue(null,    true);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
72	[BUG]  [BUGGY]  Object  obj  =  getValue(this,  true);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(this,  true);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(this,  true);	  Object    obj    =    getValue(null,    true);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
73	[BUG]  [BUGGY]  Object  obj  =  getValue(true);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(true);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(true);	  Object    obj    =    getValue(false);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
74	[BUG]  [BUGGY]  Object  obj  =  getValue(0);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(0);	  Object    obj    =    getValue(false);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
75	[BUG]  [BUGGY]  Object  obj  =  getValue(1);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(1);	  Object    obj    =    getValue(false);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
76	[BUG]  [BUGGY]  Object  v  =  this.frequencyTable.get(obj);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.frequencyTable.get(obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.frequencyTable.get(obj);	  Object    v    =    this.frequencyTable.get(v);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
77	[BUG]  [BUGGY]  Object  v  =  this.frequencyTable.get(0);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.frequencyTable.get(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.frequencyTable.get(0);	  Object    v    =    this.frequencyTable.get(v);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
78	[BUG]  [BUGGY]  Object  obj  =  getValue(this.freqTable);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(this.freqTable);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(this.freqTable);	  Object    obj    =    getValue(freqTable);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
79	[BUG]  [BUGGY]  Object  obj  =  getValue(table);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(table);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(table);	  Object    obj    =    getValue(freqTable);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
80	[BUG]  [BUGGY]  Object  obj  =  getValue(freqTable,  null);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(freqTable,  null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(freqTable,  null);	  Object    obj    =    getValue(freqTable);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
81	[BUG]  [BUGGY]  Object  obj  =(v  ==  null)?  null  :  v.getClass().getRawClass().getSimpleName();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =(v  ==  null)?  null  :  v.getClass().getRawClass().getSimpleName();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =(v  ==  null)?  null  :  v.getClass().getRawClass().getSimpleName();	  Object    obj    =(v    ==    null)?    null    :    v.getClass().getSimpleName();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
82	[BUG]  [BUGGY]  Object  obj  =  new  TreeMap(freqTable.size());  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  new  TreeMap(freqTable.size());  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  new  TreeMap(freqTable.size());	  Object    obj    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
83	[BUG]  [BUGGY]  Object  obj  =  new  TreeMap  <  Long,  Long>();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  new  TreeMap  <  Long,  Long>();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  new  TreeMap  <  Long,  Long>();	  Object    obj    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
84	[BUG]  [BUGGY]  Object  obj  =  new  TreeMap  <  Long,  Integer>();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  new  TreeMap  <  Long,  Integer>();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  new  TreeMap  <  Long,  Integer>();	  Object    obj    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
85	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).intValue();  if(v!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).intValue();  if(v!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).intValue();  if(v!=  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
86	[BUG]  [BUGGY]  annotations.checkState(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  annotations.checkState(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	annotations.checkState(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
87	[BUG]  [BUGGY]  Object  obj  =(Object)freqTable.get(v  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =(Object)freqTable.get(v  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =(Object)freqTable.get(v  +  1);	  Object    obj    =(Object)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
88	[BUG]  [BUGGY]  Object  obj  =(Object)this.freqTable.get(v);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =(Object)this.freqTable.get(v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =(Object)this.freqTable.get(v);	  Object    obj    =(Object)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
89	[BUG]  [BUGGY]  Object  obj  =  getValue(v.intValue()  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(v.intValue()  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(v.intValue()  +  1);	  Object    obj    =    getValue(v.intValue());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
90	[BUG]  [BUGGY]  Object  obj  =  getValue(v.toString());  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(v.toString());  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(v.toString());	  Object    obj    =    getValue(v.intValue());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
91	[BUG]  [BUGGY]  Object  obj  =  getValue(v.longValue());  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(v.longValue());  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(v.longValue());	  Object    obj    =    getValue(v.intValue());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
92	[BUG]  [BUGGY]  Object  obj  =  getValue(v.byteValue());  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(v.byteValue());  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(v.byteValue());	  Object    obj    =    getValue(v.intValue());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
93	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.reportCodeChange();  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.reportCodeChange();	  if(!(v    instanceof    Long))    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
94	[BUG]  [BUGGY]  reader.put(obj,  null);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  reader.put(obj,  null);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	reader.put(obj,  null);	  readTable.put(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
95	[BUG]  [BUGGY]  readTable.put(obj,  v);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  readTable.put(obj,  v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	readTable.put(obj,  v);	  readTable.put(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
96	[BUG]  [BUGGY]  ||(v  ==  null  ||!v.equals( "null ")))  {  return;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  ||(v  ==  null  ||!v.equals( "null ")))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	||(v  ==  null  ||!v.equals( "null ")))  {  return;  }	  ||(v    ==    null    &&!v.equals(   "null   ")))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
97	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ",  ex);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ",  ex);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtExceptionHandler.throwAsIgnoredException( " ",  ex);	  aughtExceptionHandler.throwAsIgnoredException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
98	[BUG]  [BUGGY]  aughtException.class.getSimpleName(),  v);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.class.getSimpleName(),  v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.class.getSimpleName(),  v);	  aughtException.class.getSimpleName(),    obj);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
99	[BUG]  [BUGGY]  aughtException.class.getName(),  obj);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.class.getName(),  obj);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.class.getName(),  obj);	  aughtException.class.getSimpleName(),    obj);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
100	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(p  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(p  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(p  +  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(p);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
101	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(p  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(p  -  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(p  -  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(p);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
102	[BUG]  [BUGGY]  if(v!=  null  ||!(v  instanceof  Long))  {  return;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v!=  null  ||!(v  instanceof  Long))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v!=  null  ||!(v  instanceof  Long))  {  return;  }	  if(v    ==    null    ||!(v    instanceof    Long))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
103	[BUG]  [BUGGY]  Object  obj  =  this.freqTable.get(v  *  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  this.freqTable.get(v  *  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  this.freqTable.get(v  *  1);	  Object    obj    =    this.freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
104	[BUG]  [BUGGY]  String  obj  =(String)this.freqTable.get(v  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  String  obj  =(String)this.freqTable.get(v  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	String  obj  =(String)this.freqTable.get(v  +  1);	  String    obj    =(String)freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
105	[BUG]  [BUGGY]  Object  v  =(v  ==  null)?  null  :  v.toString();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(v  ==  null)?  null  :  v.toString();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(v  ==  null)?  null  :  v.toString();	  Object    obj    =(v    ==    null)?    null    :    v.toString();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
106	[BUG]  [BUGGY]  Object  obj  =(v!=  null)?  null  :  v.toString();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =(v!=  null)?  null  :  v.toString();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =(v!=  null)?  null  :  v.toString();	  Object    obj    =(v    ==    null)?    null    :    v.toString();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
107	[BUG]  [BUGGY]  Object  obj  =  getValue(null,  null,  false);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(null,  null,  false);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(null,  null,  false);	  Object    obj    =    getValue(null,    null);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
108	[BUG]  [BUGGY]  Object  obj  =  getValue(null,  null,  null);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(null,  null,  null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(null,  null,  null);	  Object    obj    =    getValue(null,    null);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
109	[BUG]  [BUGGY]  Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v  ==  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v  ==  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v  ==  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
110	[BUG]  [BUGGY]  Context.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
111	[BUG]  [BUGGY]  Object  obj  =  getEmptyArgument();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getEmptyArgument();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getEmptyArgument();	  Object    obj    =    getEmptyValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
112	[BUG]  [BUGGY]  Object  obj  =  getNumberValue();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getNumberValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getNumberValue();	  Object    obj    =    getEmptyValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
113	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj  +  1);	  TreeMap    freqTable    =(TreeMap)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
114	[BUG]  [BUGGY]  aughtException.initCause(this);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.initCause(this);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.initCause(this);	  aughtException.initCause(ex);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
115	[BUG]  [BUGGY]  aughtException.initCause(e);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.initCause(e);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.initCause(e);	  aughtException.initCause(ex);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
116	[BUG]  [BUGGY]  ||!(v  instanceof  Integer))  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  ||!(v  instanceof  Integer))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	||!(v  instanceof  Integer))  {  return;  }	  if(v    ==    null    ||!(v    instanceof    Integer))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
117	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  if(v  ==  null  ||!(v  instanceof  Integer))  {  return;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Integer)  {  if(v  ==  null  ||!(v  instanceof  Integer))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Integer)  {  if(v  ==  null  ||!(v  instanceof  Integer))  {  return;  }	  if(v    ==    null    ||!(v    instanceof    Integer))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
118	[BUG]  [BUGGY]  if(v!=  null  ||!(v  instanceof  Integer))  {  return;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v!=  null  ||!(v  instanceof  Integer))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v!=  null  ||!(v  instanceof  Integer))  {  return;  }	  if(v    ==    null    ||!(v    instanceof    Integer))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
119	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  -  1  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  -  1  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  -  1  +  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
120	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  -  2);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  -  2);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  -  2);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
121	[BUG]  [BUGGY]  Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
122	[BUG]  [BUGGY]  Context.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
123	[BUG]  [BUGGY]  Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
124	[BUG]  [BUGGY]  Context.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).doubleValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).doubleValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).doubleValue();  if(v!=  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).doubleValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
125	[BUG]  [BUGGY]  Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).doubleValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).doubleValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).doubleValue();  if(v!=  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).doubleValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
126	[BUG]  [BUGGY]  Object  obj  =  getNumberValue(v);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getNumberValue(v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getNumberValue(v);	  Object    obj    =    getNullValue(v);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
127	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
128	[BUG]  [BUGGY]  Annotations.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(obj  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
129	[BUG]  [BUGGY]  Object  v  =  getValue(null,  null);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(null,  null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(null,  null);	  Object    v    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
130	[BUG]  [BUGGY]  Object  v  =  getValue(obj);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(obj);	  Object    v    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
131	[BUG]  [BUGGY]  Object  v  =  getValue(null,  false);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(null,  false);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(null,  false);	  Object    v    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
132	[BUG]  [BUGGY]  Object  v  =  getValue(false);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(false);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(false);	  Object    v    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
133	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ",  ex);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ",  ex);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ",  ex);	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
134	[BUG]  [BUGGY]  Object  obj  =  getImpl(0);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getImpl(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getImpl(0);	  Object    obj    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
135	[BUG]  [BUGGY]  Object  obj  =  getImpl(null);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getImpl(null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getImpl(null);	  Object    obj    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
136	[BUG]  [BUGGY]  Object  obj  =  this.getImpl();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  this.getImpl();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  this.getImpl();	  Object    obj    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
137	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(obj);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.freqTable.get(obj);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.freqTable.get(obj);	  Object    v    =    this.freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
138	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.freqTable.get(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.freqTable.get(0);	  Object    v    =    this.freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
139	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(null);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.freqTable.get(null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.freqTable.get(null);	  Object    v    =    this.freqTable.get(v);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
140	[BUG]  [BUGGY]  Object  v  =  freqTable.get(v);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  freqTable.get(v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  freqTable.get(v);	  Object    v    =    this.freqTable.get(v);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
141	[BUG]  [BUGGY]  ||!(v  instanceof  String))  {  return;  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  ||!(v  instanceof  String))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	||!(v  instanceof  String))  {  return;  }	  if(v    ==    null    ||!(v    instanceof    String))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
142	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).intValue();  if(v!=  null)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).intValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).intValue();  if(v!=  null)  {  continue;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
143	[BUG]  [BUGGY]  annotations.checkState(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  continue;  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  annotations.checkState(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	annotations.checkState(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  continue;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
144	[BUG]  [BUGGY]  if(obj  instanceof  Long)  {  Annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(obj  instanceof  Long)  {  Annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(obj  instanceof  Long)  {  Annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue    	non-compiled	[CE]  <identifier>  expected	66	None	replace
145	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
146	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
147	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
148	[BUG]  [BUGGY]  annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
149	[BUG]  [BUGGY]  Object  obj  =  getValue(false,  false);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(false,  false);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(false,  false);	  Object    obj    =    getValue(null,    false);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
150	[BUG]  [BUGGY]  Object  obj  =  getValue(null,  false,  null);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(null,  false,  null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(null,  false,  null);	  Object    obj    =    getValue(null,    false);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
151	[BUG]  [BUGGY]  Object  v  =(v!=  null)?  null  :  v.getClass().getName();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(v!=  null)?  null  :  v.getClass().getName();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(v!=  null)?  null  :  v.getClass().getName();	  Object    v    =(v    ==    null)?    null    :    v.getClass().getName();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
152	[BUG]  [BUGGY]  Object  v  =  getNullValue(v);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getNullValue(v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getNullValue(v);	  Object    v    =    getValue(v);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
153	[BUG]  [BUGGY]  Object  v  =  getValue(value);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(value);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(value);	  Object    v    =    getValue(v);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
154	[BUG]  [BUGGY]  Annotation  v  =(Annotation)super.getValue();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  v  =(Annotation)super.getValue();  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  v  =(Annotation)super.getValue();	  if(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
155	[BUG]  [BUGGY]  Annotation  obj  =(Annotation)super.getValue();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  obj  =(Annotation)super.getValue();  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  obj  =(Annotation)super.getValue();	  if(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
156	[BUG]  [BUGGY]  Object  obj  =  getNumber();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getNumber();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getNumber();	  Object    obj    =    getArgument();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
157	[BUG]  [BUGGY]  Object  obj  =  getImplicitNullValue();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getImplicitNullValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getImplicitNullValue();	  Object    obj    =    getNullValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
158	[BUG]  [BUGGY]  Object  obj  =  getImmediateParent();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getImmediateParent();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getImmediateParent();	  Object    obj    =    getNullValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
159	[BUG]  [BUGGY]  Object  obj  =  getValue(null,  v.intValue());  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(null,  v.intValue());  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(null,  v.intValue());	  Object    obj    =    getValue(v.intValue());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
160	[BUG]  [BUGGY]  Object  obj  =  getValue(Long.valueOf(v.longValue()));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(Long.valueOf(v.longValue()));  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(Long.valueOf(v.longValue()));	  Object    obj    =    getValue(v.intValue());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
161	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  return  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  return  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  return	  if(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
162	[BUG]  [BUGGY]  NeighborTraversal.traverse(compiler,  new  IllegalArgumentException( " ")).traverse(freqTable);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  NeighborTraversal.traverse(compiler,  new  IllegalArgumentException( " ")).traverse(freqTable);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	NeighborTraversal.traverse(compiler,  new  IllegalArgumentException( " ")).traverse(freqTable);	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
163	[BUG]  [BUGGY]  NeighborTraversal.traverse(compiler,  new  IllegalArgumentException( " "));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  NeighborTraversal.traverse(compiler,  new  IllegalArgumentException( " "));  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	NeighborTraversal.traverse(compiler,  new  IllegalArgumentException( " "));	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
164	[BUG]  [BUGGY]  NeighborTraversal.traverse(compiler,  new  IllegalArgumentException( " ")).traverse(this);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]                  [BUGGY]  NeighborTraversal.traverse(compiler,  new  IllegalArgumentException( " ")).traverse(this);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	NeighborTraversal.traverse(compiler,  new  IllegalArgumentException( " ")).traverse(this);	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
165	[BUG]  [BUGGY]  String  v  =(String)freqTable.get(p);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  String  v  =(String)freqTable.get(p);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	String  v  =(String)freqTable.get(p);	  String    v    =(String)freqTable.get(v);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
166	[BUG]  [BUGGY]  readerTable.put(obj,  null);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  readerTable.put(obj,  null);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	readerTable.put(obj,  null);	  readTable.put(obj,    null);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
167	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(2);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(2);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(2);	  TreeMap    freqTable    =(TreeMap)freqTable.get(1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
168	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ",  ex);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ",  ex);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtExceptionHandler.throwAsIOException( " ",  ex);	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
169	[BUG]  [BUGGY]  Object  obj  =  getValue(count  +  1);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(count  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(count  +  1);	  Object    obj    =    getValue(v    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
170	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(p);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.freqTable.get(p);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.freqTable.get(p);	  Object    v    =    this.freqTable.get(v);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
171	[BUG]  [BUGGY]  Object  obj  =  this.freqTable.get(v)-  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  this.freqTable.get(v)-  1;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  this.freqTable.get(v)-  1;	  Object    obj    =    this.freqTable.get(v)+    1;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
172	[BUG]  [BUGGY]  if(freqTable!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(freqTable!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(freqTable!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
173	[BUG]  [BUGGY]  Object  v  =  this.frequencyTable.get(freqTable);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.frequencyTable.get(freqTable);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.frequencyTable.get(freqTable);	  Object    v    =    this.frequencyTable.get(v);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
174	[BUG]  [BUGGY]  Object  obj  =  new  TreeMap(freqTable);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  new  TreeMap(freqTable);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  new  TreeMap(freqTable);	  Object    obj    =    new    TreeMap();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
175	[BUG]  [BUGGY]  Object  obj  =  getEmptyObject();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getEmptyObject();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getEmptyObject();	  Object    obj    =    getEmptyValue();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
176	[BUG]  [BUGGY]  Object  obj  =  getCurrentName();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getCurrentName();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getCurrentName();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
177	[BUG]  [BUGGY]  Object  obj  =  getCurrentNode();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getCurrentNode();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getCurrentNode();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
178	[BUG]  [BUGGY]  NegativeFactory.getInstance().addValue(this,  obj);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  NegativeFactory.getInstance().addValue(this,  obj);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	NegativeFactory.getInstance().addValue(this,  obj);	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
179	[BUG]  [BUGGY]  NegativeFactory.getInstance().addValue(null,  v);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  NegativeFactory.getInstance().addValue(null,  v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	NegativeFactory.getInstance().addValue(null,  v);	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
180	[BUG]  [BUGGY]  NegativeFactory.getInstance().addValue(this,  v);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  NegativeFactory.getInstance().addValue(this,  v);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	NegativeFactory.getInstance().addValue(this,  v);	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
181	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)false.get();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)false.get();  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)false.get();	  TreeMap    freqTable    =(TreeMap)false.clone();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
182	[BUG]  [BUGGY]  Object  v  =  getValue(this);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(this);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(this);	  Object    v    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
183	[BUG]  [BUGGY]  Object  v  =  getValue(freqTable);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(freqTable);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(freqTable);	  Object    v    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
184	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(v  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(v  -  1  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(v  -  1  +  1);	  TreeMap    freqTable    =(TreeMap)freqTable.get(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
185	[BUG]  [BUGGY]  Object  obj  =  getCurrentArgument();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getCurrentArgument();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getCurrentArgument();	  Object    obj    =    getArgument();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
186	[BUG]  [BUGGY]  Object  obj  =  getArgument().getValue();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getArgument().getValue();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getArgument().getValue();	  Object    obj    =    getArgument();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
187	[BUG]  [BUGGY]  Object  obj  =  getArgument().valueOf(0);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getArgument().valueOf(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getArgument().valueOf(0);	  Object    obj    =    getArgument();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
188	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  continue  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  continue  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  continue	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
189	[BUG]  [BUGGY]  if(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
190	[BUG]  [BUGGY]  if(!(v  instanceof  Long))  {  Annotations.checkState(v  instanceof  Long)  {  v  =((  Long)v).longValue();  if(v!=  null)  {  continue  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Long))  {  Annotations.checkState(v  instanceof  Long)  {  v  =((  Long)v).longValue();  if(v!=  null)  {  continue  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Long))  {  Annotations.checkState(v  instanceof  Long)  {  v  =((  Long)v).longValue();  if(v!=  null)  {  continue	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
191	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)super.freqTable.get(0);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)super.freqTable.get(0);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)super.freqTable.get(0);	  TreeMap    freqTable    =(TreeMap)super.freqTable;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
192	[BUG]  [BUGGY]  Object  obj  =  getImpl(1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getImpl(1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getImpl(1);	  Object    obj    =    getImpl();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
193	[BUG]  [BUGGY]  aughtException.initCause(this,  ex);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.initCause(this,  ex);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.initCause(this,  ex);	  aughtException.initCause(ex);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
194	[BUG]  [BUGGY]  aughtException.from(freqTable,  obj,  ex);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.from(freqTable,  obj,  ex);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.from(freqTable,  obj,  ex);	  aughtException.from(freqTable,    obj,    null);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
195	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this;  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this;	  TreeMap    freqTable    =(TreeMap)null;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
196	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable;  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)freqTable;	  TreeMap    freqTable    =(TreeMap)null;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
197	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(obj  -  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(obj  -  1);	  TreeMap    freqTable    =(TreeMap)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
198	[BUG]  [BUGGY]  Object  v  =(v  ==  null)?  null  :  t.getClass();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(v  ==  null)?  null  :  t.getClass();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(v  ==  null)?  null  :  t.getClass();	  Object    v    =(v!=    null)?    null    :    v.getClass();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
199	[BUG]  [BUGGY]  NeighborTraversal.traverse(compiler,  obj,  new  ClassCastException( " "));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  NeighborTraversal.traverse(compiler,  obj,  new  ClassCastException( " "));  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	NeighborTraversal.traverse(compiler,  obj,  new  ClassCastException( " "));	  if(!(v    instanceof    Long))    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
200	[BUG]  [BUGGY]  NeighborTraversal.traverse(compiler,  obj,  new  IllegalArgumentException());  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  NeighborTraversal.traverse(compiler,  obj,  new  IllegalArgumentException());  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	NeighborTraversal.traverse(compiler,  obj,  new  IllegalArgumentException());	  if(!(v    instanceof    Long))    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
201	[BUG]  [BUGGY]  NeighborTraversal.traverse(compiler,  obj,  new  ClassCastException());  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  NeighborTraversal.traverse(compiler,  obj,  new  ClassCastException());  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	NeighborTraversal.traverse(compiler,  obj,  new  ClassCastException());	  if(!(v    instanceof    Long))    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
202	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(bj  -  1);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(bj  -  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(bj  -  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj    -    1);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
203	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  continue;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
204	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
205	[BUG]  [BUGGY]  safeMultiply(freqTable.get(obj));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  safeMultiply(freqTable.get(obj));  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	safeMultiply(freqTable.get(obj));	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
206	[BUG]  [BUGGY]  safeMultiply(freqTable.get(obj),  false);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  safeMultiply(freqTable.get(obj),  false);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	safeMultiply(freqTable.get(obj),  false);	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
207	[BUG]  [BUGGY]  safeMultiply(freqTable.get(obj),  false));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  safeMultiply(freqTable.get(obj),  false));  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	safeMultiply(freqTable.get(obj),  false));	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
208	[BUG]  [BUGGY]  safeMultiply(freqTable.get(v));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  safeMultiply(freqTable.get(v));  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	safeMultiply(freqTable.get(v));	  if(!(v    instanceof    Long))    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
209	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( ", ");  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( ", ");  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtExceptionHandler.throwAsIgnoredException( ", ");	  aughtExceptionHandler.throwAsIgnoredException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
210	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
211	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj  ==  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj  ==  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
212	[BUG]  [BUGGY]  annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
213	[BUG]  [BUGGY]  wireMap.put(obj,  null  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  wireMap.put(obj,  null  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	wireMap.put(obj,  null  +  1);	  wireMap.put(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
214	[BUG]  [BUGGY]  Context.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).doubleValue();  if(obj!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).doubleValue();  if(obj!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).doubleValue();  if(obj!=  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).doubleValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
215	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
216	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
217	[BUG]  [BUGGY]  NeighborTraversal.traverse(compiler,  obj,  this);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  NeighborTraversal.traverse(compiler,  obj,  this);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	NeighborTraversal.traverse(compiler,  obj,  this);	  if(!(v    instanceof    Long))    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
218	[BUG]  [BUGGY]  if(v  ==  null)  {  throw  new  ClassCastException( " ");  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  ==  null)  {  throw  new  ClassCastException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  ==  null)  {  throw  new  ClassCastException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
219	[BUG]  [BUGGY]  this.freqTable.put(obj,  null);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  this.freqTable.put(obj,  null);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	this.freqTable.put(obj,  null);	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
220	[BUG]  [BUGGY]  if(v  ==  null  ||!v.equals( " "))  {  return;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  ==  null  ||!v.equals( " "))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  ==  null  ||!v.equals( " "))  {  return;  }	  if(v    ==    null    ||!(v    instanceof    String))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
221	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(b);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(b);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(b);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(b);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
222	[BUG]  [BUGGY]  Annotation  freq  =(Annotation)freqTable.get(obj  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  freq  =(Annotation)freqTable.get(obj  -  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  freq  =(Annotation)freqTable.get(obj  -  1);	  Annotation    freq    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
223	[BUG]  [BUGGY]  Annotation  freq  =(Annotation)freqTable.get(obj,  null);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  freq  =(Annotation)freqTable.get(obj,  null);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  freq  =(Annotation)freqTable.get(obj,  null);	  Annotation    freq    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
224	[BUG]  [BUGGY]  Annotation  v  =(Annotation)freqTable.get(obj,  null);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  v  =(Annotation)freqTable.get(obj,  null);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  v  =(Annotation)freqTable.get(obj,  null);	  Annotation    v    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
225	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =(Long)v).longValue();  if(obj!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =(Long)v).longValue();  if(obj!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Long)  {  Object  obj  =(Long)v).longValue();  if(obj!=  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
226	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).longValue();  if(v!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).longValue();  if(v!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).longValue();  if(v!=  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
227	[BUG]  [BUGGY]  if(!(v  instanceof  Long))  {  throw  new  ClassCastException( " ");  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Long))  {  throw  new  ClassCastException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Long))  {  throw  new  ClassCastException( " ");  }	  }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
228	[BUG]  [BUGGY]  if(freqTable!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(freqTable!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(freqTable!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
229	[BUG]  [BUGGY]  if(freqTable!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(freqTable!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(freqTable!=  null)  {  return;  }	  }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
230	[BUG]  [BUGGY]  String  obj  =(String)freqTable.get(v  *  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  String  obj  =(String)freqTable.get(v  *  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	String  obj  =(String)freqTable.get(v  *  1);	  String    obj    =(String)freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
231	[BUG]  [BUGGY]  Object  obj  =  getCastException( " ");  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getCastException( " ");  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getCastException( " ");	  Object    obj    =    this;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
232	[BUG]  [BUGGY]  Object  obj  =  getCast();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getCast();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getCast();	  Object    obj    =    this;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
233	[BUG]  [BUGGY]  Object  obj  =  getCastException();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getCastException();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getCastException();	  Object    obj    =    this;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
234	[BUG]  [BUGGY]  Object  obj  =  getValue(this,  false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(this,  false);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(this,  false);	  Object    obj    =    getValue(null,    false);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
235	[BUG]  [BUGGY]  Object  obj  =  getValue(freqTable,  true);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(freqTable,  true);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(freqTable,  true);	  Object    obj    =    getValue(null,    true);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
236	[BUG]  [BUGGY]  Annotation  obj  =(Annotation)freqTable.get(obj  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  obj  =(Annotation)freqTable.get(obj  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  obj  =(Annotation)freqTable.get(obj  +  1);	  Annotation    obj    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
237	[BUG]  [BUGGY]  Annotation  obj  =(Annotation)freqTable.get(p);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  obj  =(Annotation)freqTable.get(p);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  obj  =(Annotation)freqTable.get(p);	  Annotation    obj    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
238	[BUG]  [BUGGY]  Annotation  obj  =(Annotation)freqTable.get(i);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  obj  =(Annotation)freqTable.get(i);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  obj  =(Annotation)freqTable.get(i);	  Annotation    obj    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
239	[BUG]  [BUGGY]  if(!(v  instanceof  Long))  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Long))  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Long))  {  Object  v  =(Long)v).longValue();  if(v!=  null)  {  return;  }	  if(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
240	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(v  /  1);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(v  /  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(v  /  1);	  TreeMap    freqTable    =(TreeMap)freqTable.get(v    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
241	[BUG]  [BUGGY]  Object  obj  =  getValue(null,  null,  0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(null,  null,  0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(null,  null,  0);	  Object    obj    =    getValue(null,    null);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
242	[BUG]  [BUGGY]  Object  obj  =(v  ==  null)?  null  :  v.getClass().getRawClass();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =(v  ==  null)?  null  :  v.getClass().getRawClass();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =(v  ==  null)?  null  :  v.getClass().getRawClass();	  Object    obj    =(v    ==    null)?    null    :    v.getClass().getRawClass().getName();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
243	[BUG]  [BUGGY]  Context.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj!=  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
244	[BUG]  [BUGGY]  if(v  ==  null  ||!(v  instanceof  Boolean))  {  return;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  ==  null  ||!(v  instanceof  Boolean))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  ==  null  ||!(v  instanceof  Boolean))  {  return;  }	  if(v    ==    null    ||!(v    instanceof    Long))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
245	[BUG]  [BUGGY]  Object  v  =(Object)freqTable.get(p);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(Object)freqTable.get(p);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(Object)freqTable.get(p);	  Object    v    =(Object)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
246	[BUG]  [BUGGY]  Object  v  =(Object)freqTable.get(this.value);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(Object)freqTable.get(this.value);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(Object)freqTable.get(this.value);	  Object    v    =(Object)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
247	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  /  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  /  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  /  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
248	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =(Long)v).longValue();  if(obj!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  obj  =(Long)v).longValue();  if(obj!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Long)  {  Object  obj  =(Long)v).longValue();  if(obj!=  null)  {  continue;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
249	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).longValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).longValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Integer)  {  Object  v  =(Integer)v).longValue();  if(v!=  null)  {  continue;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
250	[BUG]  [BUGGY]  Object  obj  =  this.freqTable.get(v  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  this.freqTable.get(v  -  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  this.freqTable.get(v  -  1);	  Object    obj    =    this.freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
251	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( ", ");  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( ", ");  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtExceptionHandler.throwAsUnquotedException( ", ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
252	[BUG]  [BUGGY]  if(v!=  null)  {  aughtExceptionHandler.handleMissingValue(v);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v!=  null)  {  aughtExceptionHandler.handleMissingValue(v);  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v!=  null)  {  aughtExceptionHandler.handleMissingValue(v);  }	  aughtExceptionHandler.handleMissingValue(v);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
253	[BUG]  [BUGGY]  Object  obj  =  getEmptyValue(v);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getEmptyValue(v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getEmptyValue(v);	  Object    obj    =    getNullValue(v);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
254	[BUG]  [BUGGY]  Object  obj  =  getValue(freqTable,  false);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(freqTable,  false);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(freqTable,  false);	  Object    obj    =    getValue(freqTable);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
255	[BUG]  [BUGGY]  Context.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj  ==  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj  ==  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.checkState(v  instanceof  Long)  {  Object  obj  =((  Long)v).longValue();  if(obj  ==  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
256	[BUG]  [BUGGY]  ||(v  ==  null  &&  v.equals( ". ")))  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  ||(v  ==  null  &&  v.equals( ". ")))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	||(v  ==  null  &&  v.equals( ". ")))  {  return;  }	  ||(v    ==    null    &&    v.equals(   "null   ")))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
257	[BUG]  [BUGGY]  Object  v  =  getValue(index);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(index);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(index);	  Object    v    =    getValue(v);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
258	[BUG]  [BUGGY]  Object  v  =(Object)freqTable.get(new  Integer(0));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(Object)freqTable.get(new  Integer(0));  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(Object)freqTable.get(new  Integer(0));	  Object    v    =(Object)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
259	[BUG]  [BUGGY]  Object  v  =(Object)freqTable.get(b);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(Object)freqTable.get(b);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(Object)freqTable.get(b);	  Object    v    =(Object)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
260	[BUG]  [BUGGY]  Object  v  =  getValue(null,  true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(null,  true);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(null,  true);	  Object    v    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
261	[BUG]  [BUGGY]  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
262	[BUG]  [BUGGY]  if(v  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  ==  null)  {  throw  new  IllegalStateException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
263	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
264	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  ClassCastException( " ");  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  ClassCastException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  ClassCastException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
265	[BUG]  [BUGGY]  if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  freqTable.put(obj,  v);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  freqTable.put(obj,  v);  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  freqTable.put(obj,  v);  }	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v    ==    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
266	[BUG]  [BUGGY]  if(freqTable!=  null)  {  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  freqTable.put(obj,  v);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(freqTable!=  null)  {  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  freqTable.put(obj,  v);  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(freqTable!=  null)  {  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  freqTable.put(obj,  v);  }	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v    ==    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
267	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIgnoredException( " ");  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIgnoredException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIgnoredException( " ");  }	  aughtExceptionHandler.throwAsIgnoredException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
268	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIgnoredException( " ");  }  else  {  throw  new  ClassCastException( " ");  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIgnoredException( " ");  }  else  {  throw  new  ClassCastException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIgnoredException( " ");  }  else  {  throw  new  ClassCastException( " ");  }	  aughtExceptionHandler.throwAsIgnoredException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
269	[BUG]  [BUGGY]  Object  v  =  this.frequencyTable.get(p);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.frequencyTable.get(p);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.frequencyTable.get(p);	  Object    v    =    this.frequencyTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
270	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v  ==  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Long)  {  Object  v  =(Long)v).longValue();  if(v  ==  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
271	[BUG]  [BUGGY]  Object  obj  =  getValue(false,  null);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(false,  null);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(false,  null);	  Object    obj    =    getValue(false);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
272	[BUG]  [BUGGY]  if(v  instanceof  Long)  {  Annotations.checkState((  Long)v).longValue()  ==  null);  if(v!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Long)  {  Annotations.checkState((  Long)v).longValue()  ==  null);  if(v!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Long)  {  Annotations.checkState((  Long)v).longValue()  ==  null);  if(v!=  null)  {  return;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
273	[BUG]  [BUGGY]  aughtException.from(freqTable,  null,  null));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.from(freqTable,  null,  null));  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.from(freqTable,  null,  null));	  aughtException.from(freqTable,    obj,    null));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
274	[BUG]  [BUGGY]  Object  v  =(Object)freqTable.get(v  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(Object)freqTable.get(v  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(Object)freqTable.get(v  +  1);	  String    obj    =(String)freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
275	[BUG]  [BUGGY]  String  v  =(String)freqTable.get(v  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  String  v  =(String)freqTable.get(v  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	String  v  =(String)freqTable.get(v  +  1);	  String    obj    =(String)freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
276	[BUG]  [BUGGY]  Object  v  =  getValue(v  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(v  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(v  +  1);	  Object    obj    =    getValue(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
277	[BUG]  [BUGGY]  Object  obj  =  getValue(v,  count  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(v,  count  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(v,  count  +  1);	  Object    obj    =    getValue(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
278	[BUG]  [BUGGY]  Object  v  =  freqTable.get(0);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  freqTable.get(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  freqTable.get(0);	  Object    obj    =    freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
279	[BUG]  [BUGGY]  if(!(v  instanceof  Integer))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Integer))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Integer))  {  throw  new  IllegalArgumentException( " ");  }	  }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
280	[BUG]  [BUGGY]  if(!(v  instanceof  Integer))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Integer))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Integer))  {  throw  new  IllegalStateException( " ");  }	  }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
281	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(v)/  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.freqTable.get(v)/  1;  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.freqTable.get(v)/  1;	  Object    obj    =    this.freqTable.get(v)+    1;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
282	[BUG]  [BUGGY]  Object  obj  =  getCurrentToken().trim();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getCurrentToken().trim();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getCurrentToken().trim();	  Object    obj    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
283	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(0,  v  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)freqTable.get(0,  v  -  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)freqTable.get(0,  v  -  1);	  TreeMap    freqTable    =(TreeMap)freqTable.get(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
284	[BUG]  [BUGGY]  if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  freqTable.put(obj,  v);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  freqTable.put(obj,  v);  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  freqTable.put(obj,  v);  }	  if(!(v    instanceof    Long))    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
285	[BUG]  [BUGGY]  aughtException.printStackTrace();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.printStackTrace();  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.printStackTrace();	  aughtException.initCause(ex);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
286	[BUG]  [BUGGY]  if(freqTable!=  null)  {  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  freqTable.put(obj,  v);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(freqTable!=  null)  {  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  freqTable.put(obj,  v);  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(freqTable!=  null)  {  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  freqTable.put(obj,  v);  }	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    freqTable.put(obj,    v);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
287	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(b);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.freqTable.get(b);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.freqTable.get(b);	  Object    v    =    this.freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
288	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(r);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.freqTable.get(r);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.freqTable.get(r);	  Object    v    =    this.freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
289	[BUG]  [BUGGY]  Object  obj  =  getValue(null,  null).toString();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(null,  null).toString();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(null,  null).toString();	  Object    obj    =    getValue(null,    null);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
290	[BUG]  [BUGGY]  Object  obj  =  getValue(freqTable,  freqTable);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getValue(freqTable,  freqTable);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getValue(freqTable,  freqTable);	  Object    obj    =    getValue(freqTable);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
291	[BUG]  [BUGGY]  Object  v  =(v  ==  null)?  null  :  v.value();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(v  ==  null)?  null  :  v.value();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(v  ==  null)?  null  :  v.value();	  Object    v    =(v    ==    null)?    null    :    v.getClass();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
292	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  return;  }	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
293	[BUG]  [BUGGY]  if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  return;  }	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
294	[BUG]  [BUGGY]  if(!(v  instanceof  Integer))  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Integer))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Integer))  {  return;  }	  if(v    ==    null    ||!(v    instanceof    Integer))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
295	[BUG]  [BUGGY]  if(v  ==  null  ||!(v  instanceof  Integer))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  ==  null  ||!(v  instanceof  Integer))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  ==  null  ||!(v  instanceof  Integer))  {  throw  new  IllegalArgumentException( " ");  }	  if(v    ==    null    ||!(v    instanceof    Integer))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
296	[BUG]  [BUGGY]  ||(v!=  null  &&!v.equals( " ")))  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  ||(v!=  null  &&!v.equals( " ")))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	||(v!=  null  &&!v.equals( " ")))  {  return;  }	  if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
297	[BUG]  [BUGGY]  ||(v!=  null  &&  v.equals( " ")))  {  return;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  ||(v!=  null  &&  v.equals( " ")))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	||(v!=  null  &&  v.equals( " ")))  {  return;  }	  if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
298	[BUG]  [BUGGY]  Object  v  =(v  ==  null)? "null "  :  v.getClass();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(v  ==  null)? "null "  :  v.getClass();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(v  ==  null)? "null "  :  v.getClass();	  Object    v    =(v!=    null)?    null    :    v.getClass();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
299	[BUG]  [BUGGY]  Object  obj  =  new  TreeMap(System.identityHashCode(this));  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  new  TreeMap(System.identityHashCode(this));  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  new  TreeMap(System.identityHashCode(this));	  Object    obj    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
300	[BUG]  [BUGGY]  Object  obj  =  new  TreeMap(0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  new  TreeMap(0);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  new  TreeMap(0);	  Object    obj    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
301	[BUG]  [BUGGY]  Object  obj  =  new  TreeMap(Long.valueOf(0));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  new  TreeMap(Long.valueOf(0));  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  new  TreeMap(Long.valueOf(0));	  Object    obj    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
302	[BUG]  [BUGGY]  readTable.put(obj,  null  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  readTable.put(obj,  null  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	readTable.put(obj,  null  +  1);	  readTable.put(obj,    null);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
303	[BUG]  [BUGGY]  Object  v  =  getEmptyValue(v);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getEmptyValue(v);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getEmptyValue(v);	  Object    obj    =    getNullValue(v);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
304	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  return;  }	  if(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
305	[BUG]  [BUGGY]  if(!(v  instanceof  Long))  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Long))  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Long))  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  return;  }	  if(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
306	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
307	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  else  {  throw  new  ClassCastException( " ");  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  else  {  throw  new  ClassCastException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  else  {  throw  new  ClassCastException( " ");  }	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
308	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  aughtExceptionHandler.handleMissingValue((  Integer)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Integer)  {  aughtExceptionHandler.handleMissingValue((  Integer)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Integer)  {  aughtExceptionHandler.handleMissingValue((  Integer)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleMissingValue(v);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
309	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  aughtExceptionHandler.handleMissingValue((  Integer)v);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Integer)  {  aughtExceptionHandler.handleMissingValue((  Integer)v);  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Integer)  {  aughtExceptionHandler.handleMissingValue((  Integer)v);  }	  aughtExceptionHandler.handleMissingValue(v);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
310	[BUG]  [BUGGY]  Object  v  =  this.freqTable.get(v  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.freqTable.get(v  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.freqTable.get(v  +  1);	  Object    obj    =    this.freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
311	[BUG]  [BUGGY]  Object  v  =  freqTable.get(v  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  freqTable.get(v  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  freqTable.get(v  +  1);	  Object    obj    =    this.freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
312	[BUG]  [BUGGY]  aughtException.class.getSimpleName(),  Object.class);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.class.getSimpleName(),  Object.class);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.class.getSimpleName(),  Object.class);	  aughtException.class.getSimpleName(),    obj);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
313	[BUG]  [BUGGY]  While(v!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  While(v!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	While(v!=  null)  {  throw  new  IllegalStateException( " ");  }	  While(v!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
314	[BUG]  [BUGGY]  Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Context.checkState(v  instanceof  Integer)  {  Object  v  =((  Integer)v).longValue();  if(v  ==  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
315	[BUG]  [BUGGY]  Preconditions.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Preconditions.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Preconditions.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v    ==    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
316	[BUG]  [BUGGY]  Object  v  =  getValue(v.intValue());  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(v.intValue());  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(v.intValue());	  Object    obj    =    getValue(v.intValue());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
317	[BUG]  [BUGGY]  Object  v  =  getValue(v.intValue()  +  1);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  getValue(v.intValue()  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  getValue(v.intValue()  +  1);	  Object    obj    =    getValue(v.intValue());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
318	[BUG]  [BUGGY]  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =((  Long)v).longValue();  if(v!=  null)  {  continue	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
319	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  /  2);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  /  2);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(v  /  2);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
320	[BUG]  [BUGGY]  if(v  instanceof  Long)  {  Object  v  =((  Long)v).doubleValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Long)  {  Object  v  =((  Long)v).doubleValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Long)  {  Object  v  =((  Long)v).doubleValue();  if(v!=  null)  {  continue;  }	  Context.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).doubleValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
321	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Integer)  {  Object  v  =((  Integer)v).intValue();  if(v!=  null)  {  continue;  }	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
322	[BUG]  [BUGGY]  if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  Integer))  {  Object  v  =((  Integer)v).longValue();  if(v!=  null)  {  continue;  }	  if(v    instanceof    Integer)    {    Object    v    =((    Integer)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
323	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(bj  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.get(bj  +  1);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.get(bj  +  1);	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(obj    +    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
324	[BUG]  [BUGGY]  Object  v  =  this.frequencyTable.get(v  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =  this.frequencyTable.get(v  +  1);  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =  this.frequencyTable.get(v  +  1);	  Object    obj    =    this.frequencyTable.get(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
325	[BUG]  [BUGGY]  aughtException.from(freqTable,  null,  null);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.from(freqTable,  null,  null);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.from(freqTable,  null,  null);	  aughtException.from(freqTable,    obj,    null);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
326	[BUG]  [BUGGY]  aughtException.from(freqTable,  null);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  aughtException.from(freqTable,  null);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	aughtException.from(freqTable,  null);	  aughtException.from(freqTable,    obj,    null);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
327	[BUG]  [BUGGY]  Annotation  freq  =(Annotation)freqTable.get(0);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  freq  =(Annotation)freqTable.get(0);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  freq  =(Annotation)freqTable.get(0);	  Annotation    freq    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
328	[BUG]  [BUGGY]  Object  obj  =  getArgumentCount();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getArgumentCount();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getArgumentCount();	  Object    obj    =    getArgument();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
329	[BUG]  [BUGGY]  Object  obj  =  getArgumentType();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  obj  =  getArgumentType();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  obj  =  getArgumentType();	  Object    obj    =    getArgument();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
330	[BUG]  [BUGGY]  String  v  =(String)freqTable.get( "- ");  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  String  v  =(String)freqTable.get( "- ");  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	String  v  =(String)freqTable.get( "- ");	  String    v    =(String)freqTable.get(v);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
331	[BUG]  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  continue;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotations.checkState(v  instanceof  Long)  {  Object  v  =((  Long)v).longValue();  if(v  ==  null)  {  continue;  }	  Annotations.checkState(v    instanceof    Long)    {    Object    v    =((    Long)v).longValue();    if(v!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
332	[BUG]  [BUGGY]  Object  v  =(v!=  null)?  null  :  v.toString();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]                  [BUGGY]  Object  v  =(v!=  null)?  null  :  v.toString();  [BUGGY]      if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Object  v  =(v!=  null)?  null  :  v.toString();	  Object    obj    =(v    ==    null)?    null    :    v.toString();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
333	[BUG]  [BUGGY]  if(v!=  null  ||!(v  instanceof  String))  {  return;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v!=  null  ||!(v  instanceof  String))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v!=  null  ||!(v  instanceof  String))  {  return;  }	  if(v    ==    null    ||!(v    instanceof    String))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
334	[BUG]  [BUGGY]  if(!(v  instanceof  String))  {  return;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(!(v  instanceof  String))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(!(v  instanceof  String))  {  return;  }	  if(v    ==    null    ||!(v    instanceof    String))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
335	[BUG]  [BUGGY]  ||(v  instanceof  String))  {  return;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]                  [BUGGY]  ||(v  instanceof  String))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	||(v  instanceof  String))  {  return;  }	  if(v    ==    null    ||!(v    instanceof    String))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
336	[BUG]  [BUGGY]  ||(v  ==  null  ||  v.equals( "null ")))  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  ||(v  ==  null  ||  v.equals( "null ")))  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	||(v  ==  null  ||  v.equals( "null ")))  {  return;  }	  ||(v    ==    null    &&    v.equals(   "null   ")))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
337	[BUG]  [BUGGY]  Annotation  v  =(Annotation)freqTable.get(b);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  Annotation  v  =(Annotation)freqTable.get(b);  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	Annotation  v  =(Annotation)freqTable.get(b);	  Annotation    v    =(Annotation)freqTable.get(obj);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
338	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  Object  v  =(Integer)v).longValue();  if(v!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]                  [BUGGY]  if(v  instanceof  Integer)  {  Object  v  =(Integer)v).longValue();  if(v!=  null)  {  return;  }  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	if(v  instanceof  Integer)  {  Object  v  =(Integer)v).longValue();  if(v!=  null)  {  return;  }	  if(v    instanceof    Long)    {    Object    v    =(Long)v).longValue();    if(v!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
339	[BUG]  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.peek();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]                  [BUGGY]  TreeMap  freqTable  =(TreeMap)this.freqTable.peek();  [BUGGY]      Object  obj  =  v;  if  (v  instanceof  Integer)  {  obj  =  Long.valueOf(((Integer)  v).longValue());  }  try  {  Long  count  =  (Long)  freqTable.get(obj);  if  (count  ==  null)  {  freqTable.put(obj,  Long.valueOf(1));  }  else  {  freqTable.put(obj,  Long.valueOf(count.longValue()  +  1));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Long  count  Object  obj  v  boolean  TreeMap  freqTable  long  serialVersionUID  ClassCastException  ex  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.4082482904638631	121	121	1	replace	TreeMap  freqTable  =(TreeMap)this.freqTable.peek();	  TreeMap    freqTable    =(TreeMap)this.freqTable.get(0);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
