bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(name,  Class  <?>  class);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  super(name,  Class  <?>  class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(name,  Class  <?>  class);	  public    Frequency(String    name,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  this(name,  Class  <?>.class);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  this(name,  Class  <?>.class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(name,  Class  <?>.class);	  public    Frequency(String    name,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
3	[BUG]  [BUGGY]  this(new  String[]  {  freqTable  }  );  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  this(new  String[]  {  freqTable  }  );  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(new  String[]  {  freqTable  }  );	  public    Frequency(String[]    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  this(new  String[]  {  freqTable,  null  }  );  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  this(new  String[]  {  freqTable,  null  }  );  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(new  String[]  {  freqTable,  null  }  );	  public    Frequency(String[]    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  this(freqTable,  null);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  this(freqTable,  null);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  null);	  public    Frequency(String[]    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap  <  String,Object>();  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  TreeMap  <  String,Object>();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  TreeMap  <  String,Object>();	      this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray();  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  freqTable.toArray();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  freqTable.toArray();	      this.freqTable    =    freqTable.get();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
8	[BUG]  [BUGGY]  this(name,  null);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  this(name,  null);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(name,  null);	  public    Frequency(String    name)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  this(name,  false);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  this(name,  false);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(name,  false);	  public    Frequency(String    name)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  this(name,  true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  this(name,  true);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(name,  true);	  public    Frequency(String    name)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  this.freqTable  =  new  ArrayList();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  ArrayList();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  ArrayList();	      this.freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  this.freqTable  =  new  LinkedList();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  LinkedList();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  LinkedList();	      this.freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.SECONDS_PER_SIZE));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.SECONDS_PER_SIZE));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.SECONDS_PER_SIZE));	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_SIZE));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
14	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.SECONDS_PER_SIZE));  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.SECONDS_PER_SIZE));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.SECONDS_PER_SIZE));	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_SIZE));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
15	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SIZE),  true);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SIZE),  true);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SIZE),  true);	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_SIZE));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
16	[BUG]  [BUGGY]  this(new  TreeMap());  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  this(new  TreeMap());  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(new  TreeMap());	  public    Frequency(TreeMap    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  this(new  TreeMap(),  freqTable);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  this(new  TreeMap(),  freqTable);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(new  TreeMap(),  freqTable);	  public    Frequency(TreeMap    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  this(new  TreeMap(),  freqTable)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  this(new  TreeMap(),  freqTable)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(new  TreeMap(),  freqTable)  {	  public    Frequency(TreeMap    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  super(freqTable);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  super(freqTable);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable);	  public    Frequency(TreeMap    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  ]);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  ]);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  freqTable.toArray(new  String[freqTable.size()  ]);	      this.freqTable    =    freqTable.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
21	[BUG]  [BUGGY]  this(freqTable,  true);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  this(freqTable,  true);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  true);	  public    Frequency(String    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  this(freqTable,  false);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  this(freqTable,  false);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  false);	  public    Frequency(String    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  freqTable  =  new  TreeMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap  <  String,Object>();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap  <  String,Object>();	      freqTable    =    new    TreeMap();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  freqTable  =  new  LinkedList();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  LinkedList();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  LinkedList();	      freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  freqTable  =  new  ArrayList();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  ArrayList();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  ArrayList();	      freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.SECONDS_PER_WEEK));  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.SECONDS_PER_WEEK));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.SECONDS_PER_WEEK));	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_WEEK));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
27	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.SECONDS_PER_WEEK));  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.SECONDS_PER_WEEK));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.SECONDS_PER_WEEK));	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_WEEK));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
28	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_WEEK),  false);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_WEEK),  false);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_WEEK),  false);	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_WEEK));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
29	[BUG]  [BUGGY]  super();  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  super();  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super();	  public    Frequency(String[]    freqTable)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
30	[BUG]  [BUGGY]  public  Frequency()  throws  IllegalArgumentException,  InterruptedException  [CE]  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency()  throws  IllegalArgumentException,  InterruptedException  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency()  throws  IllegalArgumentException,  InterruptedException	  public    Frequency()    throws    IllegalArgumentException    	non-compiled	[CE]  	8	None	replace
31	[BUG]  [BUGGY]  public  Frequency()  throws  IllegalArgumentException,  InterruptedException;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency()  throws  IllegalArgumentException,  InterruptedException;  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency()  throws  IllegalArgumentException,  InterruptedException;	  public    Frequency()    throws    IllegalArgumentException    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
32	[BUG]  [BUGGY]  public  Frequency(String  name)thens  IllegalArgumentException  [CE]  [FE]                IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String  name)thens  IllegalArgumentException  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  name)thens  IllegalArgumentException	  public    Frequency()    throws    IllegalArgumentException    	non-compiled	[CE]  	8	None	replace
33	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.DEFAULT_TIME_ZONE));  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.DEFAULT_TIME_ZONE));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.DEFAULT_TIME_ZONE));	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.DEFAULT_TIME_ZONE));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
34	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE));	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.DEFAULT_TIME_ZONE));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
35	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  true);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  true);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  true);	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.DEFAULT_TIME_ZONE));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
36	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  null);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  null);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  null);	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.DEFAULT_TIME_ZONE));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
37	[BUG]  [BUGGY]  this.freqTable  =  freqTable;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  freqTable;  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  freqTable;	      this.freqTable    =    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  this.freqTable  =  new  HashMap  <  String,Object>();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  HashMap  <  String,Object>();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  HashMap  <  String,Object>();	      this.freqTable    =    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  this.freqTable  =  new  LinkedHashMap  <  String,Object>();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  LinkedHashMap  <  String,Object>();	      this.freqTable    =    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getKey(),  DateTimeConstants.MILLIS_PER_SECOND));	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.MILLIS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
41	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.MILLIS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
42	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  null);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  null);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  null);	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.MILLIS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
43	[BUG]  [BUGGY]  this(freqTable,  Class  <?>  class);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  this(freqTable,  Class  <?>  class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  Class  <?>  class);	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
44	[BUG]  [BUGGY]  super(freqTable,  Class  <?>  class);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  super(freqTable,  Class  <?>  class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  Class  <?>  class);	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  public  Frequency(String  name,  String  freqTable)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String  name,  String  freqTable)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  name,  String  freqTable)  {	  public    Frequency(String    name)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  public  Frequency(String  name,  int  freqIndex)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String  name,  int  freqIndex)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  name,  int  freqIndex)  {	  public    Frequency(String    name)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  public  Frequency(String  freqTable,  int  index)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String  freqTable,  int  index)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  freqTable,  int  index)  {	  public    Frequency(String    freqTable)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
48	[BUG]  [BUGGY]  public  Frequency(String  freqTable,  int  start,  int  end)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String  freqTable,  int  start,  int  end)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  freqTable,  int  start,  int  end)  {	  public    Frequency(String    freqTable)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SIZE  +  1));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SIZE  +  1));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_SIZE  +  1));	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_SIZE));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
50	[BUG]  [BUGGY]  this.freqTable  =  new  HashMap();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  HashMap();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  HashMap();	      this.freqTable    =    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  super(freqTable,  class);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  super(freqTable,  class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  class);	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
52	[BUG]  [BUGGY]  super(freqTable,  ClassUtil.safeMultiply(class));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  super(freqTable,  ClassUtil.safeMultiply(class));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  ClassUtil.safeMultiply(class));	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
53	[BUG]  [BUGGY]  super(name,  ClassUtils.safeMultiply(ClassUtils.safeMultiply(class)));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  super(name,  ClassUtils.safeMultiply(ClassUtils.safeMultiply(class)));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(name,  ClassUtils.safeMultiply(ClassUtils.safeMultiply(class)));	  public    Frequency(String    name,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
54	[BUG]  [BUGGY]  super(name,  ClassUtils.safeMultiply(class));  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  super(name,  ClassUtils.safeMultiply(class));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(name,  ClassUtils.safeMultiply(class));	  public    Frequency(String    name,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
55	[BUG]  [BUGGY]  super(name,  ClassUtils.safeMultiply(ClassUtils.safeMultiply(this.freqTable)));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]      [BUGGY]  super(name,  ClassUtils.safeMultiply(ClassUtils.safeMultiply(this.freqTable)));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(name,  ClassUtils.safeMultiply(ClassUtils.safeMultiply(this.freqTable)));	  public    Frequency(String    name,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
56	[BUG]  [BUGGY]  public  Frequency(TreeMap  freqTable,  int  index)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(TreeMap  freqTable,  int  index)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(TreeMap  freqTable,  int  index)  {	  public    Frequency(TreeMap    freqTable)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
57	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  false);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  false);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  false);	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.DEFAULT_TIME_ZONE));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
58	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  false);  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  false);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND),  false);	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.MILLIS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
59	[BUG]  [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList());  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  freqTable.toArray(new  java.util.ArrayList());  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  freqTable.toArray(new  java.util.ArrayList());	      this.freqTable    =    freqTable.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
60	[BUG]  [BUGGY]  public  Frequency(String[]  freqTable)  {  this.freq  =  new  LinkedHashMap();  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String[]  freqTable)  {  this.freq  =  new  LinkedHashMap();  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String[]  freqTable)  {  this.freq  =  new  LinkedHashMap();	  public    Frequency()    throws    IllegalArgumentException    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  public  Frequency(String  freqTable)  {  this.freqTable  =  new  TreeMap();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String  freqTable)  {  this.freqTable  =  new  TreeMap();  }  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  freqTable)  {  this.freqTable  =  new  TreeMap();  }	  public    Frequency(String[]    freqTable)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
62	[BUG]  [BUGGY]  public  Frequency(TreeMap  freqTable)  {  this.freqTable  =  new  TreeMap();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(TreeMap  freqTable)  {  this.freqTable  =  new  TreeMap();  }  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(TreeMap  freqTable)  {  this.freqTable  =  new  TreeMap();  }	  public    Frequency(String[]    freqTable)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  public  Frequency(String  freqTable,  String[]  freqTable)  {  this.freqTable  =  new  TreeMap();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String  freqTable,  String[]  freqTable)  {  this.freqTable  =  new  TreeMap();  }  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  freqTable,  String[]  freqTable)  {  this.freqTable  =  new  TreeMap();  }	  public    Frequency(String[]    freqTable)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  public  Frequency(String  freqTable,  Object[]  freqTable)  {  this.freqTable  =  new  TreeMap();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String  freqTable,  Object[]  freqTable)  {  this.freqTable  =  new  TreeMap();  }  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  freqTable,  Object[]  freqTable)  {  this.freqTable  =  new  TreeMap();  }	  public    Frequency(String[]    freqTable)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
65	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_WEEK),  true);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_WEEK),  true);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_WEEK),  true);	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.SECONDS_PER_WEEK));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
66	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  this);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  this);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE),  this);	      freqTable    =    new    TreeMap(FieldUtils.safeAdd(getValue(),    DateTimeConstants.DEFAULT_TIME_ZONE));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
67	[BUG]  [BUGGY]  public  Frequency(String  freqTable,  String[]  freqTable)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String  freqTable,  String[]  freqTable)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  freqTable,  String[]  freqTable)  {	  public    Frequency(String[]    freqTable)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
68	[BUG]  [BUGGY]  public  Frequency(String  name,  int  freqTable)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String  name,  int  freqTable)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  name,  int  freqTable)  {	  public    Frequency(String    name)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  public  Frequency(String  name,  java.util.ArrayList)  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency(String  name,  java.util.ArrayList)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  name,  java.util.ArrayList)  {	  public    Frequency(String    name)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
70	[BUG]  [BUGGY]  this.freqTable  =  freqTable.cloneTree();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  freqTable.cloneTree();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  freqTable.cloneTree();	      this.freqTable    =    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
71	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(System.identityHashCode(this));  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(System.identityHashCode(this));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(System.identityHashCode(this));	      freqTable    =    new    TreeMap();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
72	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap(System.identityHashCode(this));  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  TreeMap(System.identityHashCode(this));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  TreeMap(System.identityHashCode(this));	      this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  super(freqTable,  ClassUtils.safeMultiply(class));  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]      [BUGGY]  super(freqTable,  ClassUtils.safeMultiply(class));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  ClassUtils.safeMultiply(class));	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
74	[BUG]  [BUGGY]  public  Frequency()  {  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency()  {  }  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency()  {  }	  public    Frequency()    throws    IllegalArgumentException    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
75	[BUG]  [BUGGY]  public  Frequency()  {  super();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]      [BUGGY]  public  Frequency()  {  super();  }  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math90/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency()  {  super();  }	  public    Frequency()    throws    IllegalArgumentException    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
