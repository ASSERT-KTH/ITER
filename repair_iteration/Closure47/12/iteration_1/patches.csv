bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
2	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
3	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
4	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
5	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
6	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  sourceFile.isEmpty())  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
7	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
8	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
9	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
10	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
11	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  &&  PrefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile!=  null  &&  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
12	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  >=  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  >=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  >=  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
13	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    If(sourceFile!=  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	16	None	add
14	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  >>  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  >>  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  >>  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
15	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  |&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile!=  null  |&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile!=  null  |&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	15	16	replace
17	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  sourceFile.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	15	16	replace
18	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	15	16	replace
19	[BUG]  [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  &&  prefixMappings.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	15	16	replace
20	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceFile.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	15	16	replace
21	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceFile.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	15	16	replace
22	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	17	16	replace
23	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  sourceFile.isEmpty())  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	17	16	replace
24	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	17	16	replace
25	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	17	16	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	17	16	replace
27	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	17	16	replace
28	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
29	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
30	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  &&  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  &&  PrefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  &&  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
31	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings  >=  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
32	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    If(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	7	None	add
33	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  >>  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings  >>  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings  >>  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
34	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  |&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  |&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  |&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
35	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
36	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
37	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	3	None	add
38	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
39	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings  >=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
40	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(PrefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
41	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
42	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
43	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
44	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
46	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
47	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  prefixMappings.containsKey(sourceFile))  {	  if(!prefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
49	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
51	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  AssertionFailedError  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
52	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
53	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  &&  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
54	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
55	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    If(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	18	None	add
56	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(PrefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
57	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()  ||  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
58	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
59	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMappings.isEmpty()  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
60	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
61	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
62	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()  ||  sourceFile.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
63	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    If(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
64	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(PrefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
65	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
66	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    if(prefixMappings.isEmpty()  ||  sourceFile.length()  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
67	[BUG]  [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if    (sourceFile.isEmpty())    {    if  (sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
68	[BUG]  [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if    (sourceFile.isEmpty())    {    if  (sourceFile.isEmpty()  ||  sourceFile.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
69	[BUG]  [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if    (sourceFile.isEmpty())    {    if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
70	[BUG]  [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if    (sourceFile.isEmpty())    {    if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
71	[BUG]  [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if    (sourceFile.isEmpty())    {    if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
72	[BUG]  [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if    (sourceFile.isEmpty())    {    if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
73	[BUG]  [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if  (sourceFile.isEmpty())  {  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if    (sourceFile.isEmpty())    {    if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
74	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
75	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
76	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile  >=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
77	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null  ||  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
78	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    If(sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	14	None	add
79	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  >>  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  >>  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile  >>  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
80	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  [Delete]  null  ||  prefixMappings.isEmpty())  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  [Delete]  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile  [Delete]  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	14	None	add
81	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
82	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.containsKey(sourceFile))  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
83	[BUG]  [BUGGY]  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if  (sourceFile.isEmpty()  ||  sourceLocationFixupCache.contains(sourceFile))  {	  if    (sourceFile.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
84	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
85	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)!=  null)  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
86	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
87	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
88	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
89	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
90	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  >=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings  >=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
91	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    If(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	1	None	add
92	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  ||  PrefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
93	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  >>  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  >>  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings  >>  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
94	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  [Delete]  null  ||  prefixMappings.isEmpty())  {  [CE]  ')'  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  [Delete]  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings  [Delete]  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	1	None	add
95	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
96	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
97	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
98	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	12	None	replace
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	12	16	replace
100	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	12	16	replace
101	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
102	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.size()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
103	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
104	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
105	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
106	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()  ||!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
107	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
108	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  If(!prefixMappings.isEmpty())  {  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  If(!prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    If(!prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	5	None	add
109	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
110	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
111	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
112	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
113	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
114	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
115	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
116	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
117	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
118	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
119	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]          AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
120	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
121	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]            AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
122	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
123	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]              AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	8	16	replace
125	[BUG]  [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  &&  prefixMappings.isEmpty())  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	8	16	replace
126	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
127	[BUG]  [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  String  originalName  =  sourceFile.toLowerCase();  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.toLowerCase();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
128	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  2);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
129	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
130	[BUG]  [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  originalName  =  sourceFile.substring(0,  sourceFile.length()  -  3);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
131	[BUG]  [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	String  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  2);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
132	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
133	[BUG]  [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null  ||  sourceFile.isEmpty())  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
134	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  sourceFile.isEmpty())  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
135	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  sourceFile.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  sourceFile.isEmpty())  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
136	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
137	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
138	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()  ||!sourceLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
139	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  [Delete]  null  &&  prefixMappings.isEmpty())  {  [CE]  ')'  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty())  {  if(sourceFile  [Delete]  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    if(sourceFile  [Delete]  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	16	None	add
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
141	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&!prefixMappings.isEmpty())  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
143	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	6	16	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	15	16	replace
145	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  sourceLocationFixupCache.isEmpty())  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	15	16	replace
146	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.containsKey(sourceFile))  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.containsKey(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.containsKey(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
147	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceLocationFixupCache.get(sourceFile);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
148	[BUG]  [BUGGY]  SourceMapGenerator  generator  =  sourceFile.getGenerator();  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  SourceMapGenerator  generator  =  sourceFile.getGenerator();  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	SourceMapGenerator  generator  =  sourceFile.getGenerator();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
149	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
150	[BUG]  [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [CE]  illegal  start  of  type  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile  ==  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile  ==  null)  {  sourceFile  =  sourceFile.substring(0,  sourceFile.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
151	[BUG]  [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  sourceFile.toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null)  {  sourceFile  =  sourceFile.toLowerCase();  }  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null)  {  sourceFile  =  sourceFile.toLowerCase();  }	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
152	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile;  [CE]  illegal  start  of  type  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile;  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile;	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
153	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null;  [CE]  not  a  statement  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  junit.framework.ComparisonFailure:  null;  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure:  null;	      	non-compiled	[CE]  not  a  statement	13	None	replace
154	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
155	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0  ||  prefixMappings.isEmpty())  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
156	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
157	[BUG]  [BUGGY]  if(sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.length()  ==  0)  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	12	16	replace
158	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty())  {  if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    if(prefixMapping.isEmpty()  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
159	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(sourceFile  ==  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
160	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	4	16	replace
161	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile!=  null)  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	4	16	replace
162	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	8	16	replace
163	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	8	16	replace
164	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  &&  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(PrefixMappings!=  null  &&  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
165	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  &&  prefixMappings.hasEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty())  {  if(prefixMappings!=  null  &&  prefixMappings.hasEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    if(prefixMappings!=  null  &&  prefixMappings.hasEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
166	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(PrefixMappings!=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
167	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty())  {  if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    if(sourceFile!=  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
168	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
169	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.length()  ==  0)  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
170	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
171	[BUG]  [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	2	16	replace
172	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.containsKey(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
173	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.get(sourceFile)!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
174	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty())  {  if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty())    {    if(!prefixMappings.isEmpty()  ||  locationLocationFixupCache.contains(sourceFile))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
175	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	15	16	replace
176	[BUG]  [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  ||  prefixMappings.contains(sourceFile))  {	  if(sourceFile!=    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	15	16	replace
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	19	16	replace
178	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.length()!=  0)  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	19	16	replace
179	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
180	[BUG]  [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings.isEmpty()  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {	  if(prefixMappings.isEmpty()    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	19	16	replace
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	12	16	replace
182	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  prefixMappings.contains(sourceFile))  {	  if(prefixMappings.isEmpty()    ||    sourceFile.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	12	16	replace
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	8	16	replace
184	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  &&  sourceFile.length()  >  0)  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	8	16	replace
185	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	8	16	replace
186	[BUG]  [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings!=  null  &&  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	8	16	replace
187	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  {  null  ||  prefixMappings.isEmpty())  {  [CE]  ')'  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty())  {  if(prefixMappings  {  null  ||  prefixMappings.isEmpty())  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    if(prefixMappings  {  null  ||  prefixMappings.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	3	None	add
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	17	16	replace
189	[BUG]  [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile!=  null  &&  prefixMappings.isEmpty()  &&  sourceLocationFixupCache.containsKey(sourceFile))  {	  if(sourceFile!=    null    &&    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	17	16	replace
190	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
191	[BUG]  [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    AssertionFailedError    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(sourceFile.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if    (sourceFile.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	10	16	replace
192	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
193	[BUG]  [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(!prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(!prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	6	16	replace
194	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase();  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.trim().toLowerCase();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
195	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toString();  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  junit.framework.ComparisonFailure  =  sourceFile.toString();  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  =  sourceFile.toString();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
196	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toString();  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toString();  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	junit.framework.ComparisonFailure  sourceFile  =  sourceFile.toString();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
197	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	4	16	replace
198	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]    junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".java "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	4	16	replace
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	4	16	replace
200	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.equals( " "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	4	16	replace
201	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	add	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	4	16	replace
202	[BUG]  [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js "))  {  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  [FE]        junit.framework.ComparisonFailure:  null  expected:<...t   ":1    [CONTEXT]    private  String  fixupSourceLocation(String  sourceFile)  {    [BUGGY]  if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js "))  {  [BUGGY]    return  sourceFile;  }  String  fixed  =  sourceLocationFixupCache.get(sourceFile);  if  (fixed  !=  null)  {  return  fixed;  }  for  (LocationMapping  mapping  :  prefixMappings)  {  [CLASS]  SourceMap  Format  1  2  3  4  DetailLevel  1  2  LocationMapping  [METHOD]  fixupSourceLocation  [RETURN_TYPE]  String  String  sourceFile  [VARIABLES]  LocationMapping  mapping  Format  DEFAULT  V1  V2  V3  boolean  DetailLevel  ALL  SYMBOLS  List  prefixMappings  String  fixed  originalName  prefix  replacement  sourceFile  SourceMapGenerator  generator  Map  sourceLocationFixupCache  	projects/Closure47/src/com/google/javascript/jscomp/SourceMap.java	0.9428090415820635	150	150	16	replace	if(prefixMappings  ==  null  ||  prefixMappings.isEmpty()  ||  sourceFile.endsWith( ".js "))  {	  if(prefixMappings    ==    null    ||    prefixMappings.isEmpty())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  null  expected:<...t ":1  	4	16	replace
